{
  "reportUid": "AYJLV34SDhS",
  "labels": [
    {
      "name": "QA (Quality Assurance)",
      "color": "1D76DB"
    }
  ],
  "comment": null,
  "footnote": null,
  "findings": [
    {
      "severity": "Medium",
      "title": "Missing price checks for Chainlink oracle",
      "description": "`latestRoundData` may return invalid data, and there aren't any checks to ensure that this doesn't happen.\n\nThis can be caused by any issues with Chainlink, such as oracle consensus problems or chain congestion, which may result in this contract relying on outdated data.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit missing price check, which could be equal to 0\n337: \t\t        (, int256 answer,, uint256 updatedAt,) = feedConfig.feed.latestRoundData();\n```",
          "loc": [
            "[337](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L337)"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Missing L2 sequencer checks for Chainlink oracle",
      "description": "Using Chainlink in L2 chains such as Arbitrum [requires](https://docs.chain.link/data-feeds/l2-sequencer-feeds) to check if the sequencer is down to avoid prices from looking like they are fresh although they are not.\n\nThe bug could be leveraged by malicious actors to take advantage of the sequencer downtime.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit missing sequencer uptime, grace period checks\n337: \t\t        (, int256 answer,, uint256 updatedAt,) = feedConfig.feed.latestRoundData();\n```",
          "loc": [
            "[337](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L337)"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Chainlink oracle will return the wrong price if the aggregator hits `minAnswer`",
      "description": "Chainlink aggregators have a built-in circuit breaker if the price of an asset goes outside of a predetermined price band.\n\nThe result is that if an asset experiences a huge drop in value (i.e. LUNA crash) the price of the oracle will continue to return the `minPrice` instead of the actual price of the asset.\n\nThis would allow users to continue borrowing with the asset but at the wrong price. This is exactly what happened to Venus on BSC when LUNA [crashed](https://rekt.news/venus-blizz-rekt/).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit missing min/max price check\n337: \t\t        (, int256 answer,, uint256 updatedAt,) = feedConfig.feed.latestRoundData();\n```",
          "loc": [
            "[337](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L337)"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Some `ERC20` can revert on a zero value `transfer`",
      "description": "Not all `ERC20` implementations are totally compliant, and some (e.g `LEND`) may fail while transfering a zero amount.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n728: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), state.liquidatorCost);\n\n946: \t\t        SafeERC20.safeTransfer(IERC20(asset), receiver, assets);\n```",
          "loc": [
            "[728](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L728)",
            "[946](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L946)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n226: \t\t            SafeERC20.safeTransfer(token, to, amount);\n```",
          "loc": [
            "[226](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L226)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n272: \t\t        SafeERC20.safeTransfer(IERC20(token), to, amount);\n```",
          "loc": [
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L272)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n88: \t\t            SafeERC20.safeTransfer(IERC20(token0), params.recipient, amount0 - added0);\n\n91: \t\t            SafeERC20.safeTransfer(IERC20(token1), params.recipient, amount1 - added1);\n```",
          "loc": [
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L88)",
            "[91](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L91)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n872: \t\t            SafeERC20.safeTransfer(token, to, amount);\n```",
          "loc": [
            "[872](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L872)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n85: \t\t        SafeERC20.safeTransfer(data.asset, msg.sender, data.liquidationCost + (fee0 + fee1));\n```",
          "loc": [
            "[85](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L85)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n98: \t\t                SafeERC20.safeTransfer(params.tokenIn, universalRouter, params.amountIn);\n\n167: \t\t        SafeERC20.safeTransfer(IERC20(tokenIn), msg.sender, amountToPay);\n```",
          "loc": [
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L98)",
            "[167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L167)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "File allows a version of solidity that is susceptible to .selector-related optimizer bug",
      "description": "In solidity versions prior to 0.8.21, there is a legacy code generation [bug](https://soliditylang.org/blog/2023/07/19/missing-side-effects-on-selector-access-bug/) where if `foo().selector` is called, `foo()` doesn't actually get evaluated. It is listed as low-severity, because projects usually use the contract name rather than a function call to look up the selector.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n476: \t\t        return IERC721Receiver.onERC721Received.selector;\n```",
          "loc": [
            "[476](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L476)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n92: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoCompound.execute.selector, params)\n```",
          "loc": [
            "[92](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L92)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n102: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoRange.execute.selector, params)\n```",
          "loc": [
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n378: \t\t        return IERC721Receiver.onERC721Received.selector;\n```",
          "loc": [
            "[378](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L378)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Possible reentrancy with callback on transfer tokens",
      "description": "The following functions don't apply the CEI pattern. It's possible to reenter after the transfer if the token has some kind of callback functionality (e.g. ERC777/ERC1155).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit state update on line 731\n728: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), state.liquidatorCost);\n\n// @audit state update on line 913\n901: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n\n// @audit state update on line 949\n946: \t\t        SafeERC20.safeTransfer(IERC20(asset), receiver, assets);\n\n// @audit state update on line 992\n986: \t\t                SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n```",
          "loc": [
            "[986](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L986)",
            "[728](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L728)",
            "[901](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L901)",
            "[946](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L946)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks in constructor/initialize",
      "description": "There are some missing checks in these functions, and this could lead to unexpected scenarios. Consider always adding a sanity check for state variables.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit baseRatePerYearX96, multiplierPerYearX96, jumpMultiplierPerYearX96, _kinkX96\n33: \t\t    constructor(\n34: \t\t        uint256 baseRatePerYearX96,\n35: \t\t        uint256 multiplierPerYearX96,\n36: \t\t        uint256 jumpMultiplierPerYearX96,\n37: \t\t        uint256 _kinkX96\n```",
          "loc": [
            "[33-37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L33-L37)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit tokenId\n395: \t\t    function _initializeState(uint256 tokenId) internal view returns (PositionState memory state) {\n```",
          "loc": [
            "[395](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L395)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit _TWAPSeconds, _maxTWAPTickDifference\n33: \t\t    constructor(\n34: \t\t        INonfungiblePositionManager _npm,\n35: \t\t        address _operator,\n36: \t\t        address _withdrawer,\n37: \t\t        uint32 _TWAPSeconds,\n38: \t\t        uint16 _maxTWAPTickDifference,\n39: \t\t        address _zeroxRouter,\n40: \t\t        address _universalRouter\n```",
          "loc": [
            "[33-40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L33-L40)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit _TWAPSeconds, _maxTWAPTickDifference\n41: \t\t    constructor(\n42: \t\t        INonfungiblePositionManager npm,\n43: \t\t        address _operator,\n44: \t\t        address _withdrawer,\n45: \t\t        uint32 _TWAPSeconds,\n46: \t\t        uint16 _maxTWAPTickDifference,\n47: \t\t        address _zeroxRouter,\n48: \t\t        address _universalRouter\n```",
          "loc": [
            "[41-48](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L41-L48)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit _TWAPSeconds, _maxTWAPTickDifference\n37: \t\t    constructor(\n38: \t\t        INonfungiblePositionManager _npm,\n39: \t\t        address _operator,\n40: \t\t        address _withdrawer,\n41: \t\t        uint32 _TWAPSeconds,\n42: \t\t        uint16 _maxTWAPTickDifference\n```",
          "loc": [
            "[37-42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L37-L42)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit _TWAPSeconds, _maxTWAPTickDifference\n25: \t\t    constructor(\n26: \t\t        INonfungiblePositionManager _npm,\n27: \t\t        address _operator,\n28: \t\t        address _withdrawer,\n29: \t\t        uint32 _TWAPSeconds,\n30: \t\t        uint16 _maxTWAPTickDifference,\n31: \t\t        address _zeroxRouter,\n32: \t\t        address _universalRouter\n```",
          "loc": [
            "[25-32](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L25-L32)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for state variable assignments",
      "description": "There are some missing checks in these functions, and this could lead to unexpected scenarios. Consider always adding a sanity check for state variables.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n95: \t\t        baseRatePerSecondX96 = baseRatePerYearX96 / YEAR_SECS;\n\n96: \t\t        multiplierPerSecondX96 = multiplierPerYearX96 / YEAR_SECS;\n\n97: \t\t        jumpMultiplierPerSecondX96 = jumpMultiplierPerYearX96 / YEAR_SECS;\n\n98: \t\t        kinkX96 = _kinkX96;\n```",
          "loc": [
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L95)",
            "[96](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L96)",
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L97)",
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L98)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n240: \t\t        feedConfigs[token] = config;\n```",
          "loc": [
            "[240](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L240)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n446: \t\t            loans[tokenId] = Loan(0);\n\n461: \t\t                loans[tokenId] = Loan(loans[oldTokenId].debtShares);\n\n487: \t\t        transformApprovals[msg.sender][tokenId][target] = isActive;\n\n818: \t\t        minLoanSize = _minLoanSize;\n\n819: \t\t        globalLendLimit = _globalLendLimit;\n\n820: \t\t        globalDebtLimit = _globalDebtLimit;\n\n821: \t\t        dailyLendIncreaseLimitMin = _dailyLendIncreaseLimitMin;\n\n822: \t\t        dailyDebtIncreaseLimitMin = _dailyDebtIncreaseLimitMin;\n\n838: \t\t        reserveFactorX32 = _reserveFactorX32;\n\n1138: \t\t            lastLendExchangeRateX96 = newLendExchangeRateX96;\n\n1252: \t\t            dailyLendIncreaseLimitLeft =\n1253: \t\t                dailyLendIncreaseLimitMin > lendIncreaseLimit ? dailyLendIncreaseLimitMin : lendIncreaseLimit;\n\n1264: \t\t            dailyDebtIncreaseLimitLeft =\n1265: \t\t                dailyDebtIncreaseLimitMin > debtIncreaseLimit ? dailyDebtIncreaseLimitMin : debtIncreaseLimit;\n\n1298: \t\t        ownedTokensIndex[tokenId] = ownedTokens[to].length;\n\n1300: \t\t        tokenOwner[tokenId] = to;\n\n1308: \t\t            ownedTokens[from][tokenIndex] = lastTokenId;\n\n1309: \t\t            ownedTokensIndex[lastTokenId] = tokenIndex;\n```",
          "loc": [
            "[819](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L819)",
            "[820](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L820)",
            "[821](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L821)",
            "[822](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L822)",
            "[838](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L838)",
            "[1138](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1138)",
            "[1252-1253](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1252-L1253)",
            "[1264-1265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1264-L1265)",
            "[1298](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1298)",
            "[1300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1300)",
            "[1308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1308)",
            "[1309](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1309)",
            "[446](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L446)",
            "[461](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L461)",
            "[487](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L487)",
            "[818](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L818)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n230: \t\t        positionConfigs[tokenId] = config;\n```",
          "loc": [
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L230)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n250: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] + amount;\n\n257: \t\t            positionBalances[tokenId][token] = amount;\n\n270: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] - amount;\n```",
          "loc": [
            "[270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L270)",
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L250)",
            "[257](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L257)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n284: \t\t        positionConfigs[tokenId] = config;\n```",
          "loc": [
            "[284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L284)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`payable` function does not transfer ETH",
      "description": "The following functions can be called by any user, who may also send some funds by mistake. In that case, those funds will be lost (this also applies to delegatecalls, in case they don't use the transferred ETH).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n251: \t\t    receive() external payable {\n```",
          "loc": [
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L251)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n914: \t\t    receive() external payable {\n```",
          "loc": [
            "[914](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L914)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Functions calling contracts with transfer hooks are missing reentrancy guards",
      "description": "Even if the function follows the best practice of check-effects-interaction, not using a reentrancy guard when there may be transfer hooks will open the users of this protocol up to read-only reentrancies with no way to protect against it, except by block-listing the whole protocol.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n401: \t\t        nonfungiblePositionManager.safeTransferFrom(msg.sender, address(this), tokenId, abi.encode(recipient));\n\n424: \t\t        nonfungiblePositionManager.safeTransferFrom(owner, address(this), tokenId, abi.encode(recipient));\n\n599: \t\t        SafeERC20.safeTransfer(IERC20(asset), isTransformMode ? msg.sender : owner, assets);\n\n728: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), state.liquidatorCost);\n\n779: \t\t            SafeERC20.safeTransfer(IERC20(asset), receiver, amount);\n\n901: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n\n946: \t\t        SafeERC20.safeTransfer(IERC20(asset), receiver, assets);\n\n986: \t\t                SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n\n1083: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), owner, tokenId);\n```",
          "loc": [
            "[1083](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1083)",
            "[401](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L401)",
            "[424](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L424)",
            "[599](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L599)",
            "[728](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L728)",
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L779)",
            "[901](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L901)",
            "[946](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L946)",
            "[986](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L986)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n226: \t\t            SafeERC20.safeTransfer(token, to, amount);\n```",
          "loc": [
            "[226](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L226)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n272: \t\t        SafeERC20.safeTransfer(IERC20(token), to, amount);\n```",
          "loc": [
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L272)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n88: \t\t            SafeERC20.safeTransfer(IERC20(token0), params.recipient, amount0 - added0);\n\n91: \t\t            SafeERC20.safeTransfer(IERC20(token1), params.recipient, amount1 - added1);\n\n94: \t\t            SafeERC20.safeTransfer(IERC20(token), params.recipient, amount);\n\n170: \t\t            SafeERC20.safeTransfer(IERC20(token0), params.recipient, amount0);\n\n173: \t\t            SafeERC20.safeTransfer(IERC20(token1), params.recipient, amount1);\n```",
          "loc": [
            "[91](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L91)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L94)",
            "[170](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L170)",
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L88)",
            "[173](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L173)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n578: \t\t            SafeERC20.safeTransferFrom(token0, msg.sender, address(this), needed0);\n\n581: \t\t            SafeERC20.safeTransferFrom(token1, msg.sender, address(this), needed1);\n\n584: \t\t            SafeERC20.safeTransferFrom(otherToken, msg.sender, address(this), neededOther);\n\n872: \t\t            SafeERC20.safeTransfer(token, to, amount);\n```",
          "loc": [
            "[584](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L584)",
            "[578](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L578)",
            "[581](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L581)",
            "[872](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L872)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n85: \t\t        SafeERC20.safeTransfer(data.asset, msg.sender, data.liquidationCost + (fee0 + fee1));\n\n91: \t\t                SafeERC20.safeTransfer(data.swap0.tokenIn, data.liquidator, balance);\n\n97: \t\t                SafeERC20.safeTransfer(data.swap1.tokenIn, data.liquidator, balance);\n\n106: \t\t                SafeERC20.safeTransfer(data.asset, data.liquidator, balance);\n```",
          "loc": [
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L97)",
            "[85](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L85)",
            "[91](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L91)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n98: \t\t                SafeERC20.safeTransfer(params.tokenIn, universalRouter, params.amountIn);\n\n167: \t\t        SafeERC20.safeTransfer(IERC20(tokenIn), msg.sender, amountToPay);\n```",
          "loc": [
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L98)",
            "[167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L167)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`decimals` is not part of the `ERC20` standard",
      "description": "The `decimals` function is not part of the `ERC20` standard, and they may revert with some tokens if the don't also extend the `IERC20Metadata` interface.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit IERC20Metadata(_referenceToken).decimals()\n82: \t\t        referenceTokenDecimals = IERC20Metadata(_referenceToken).decimals();\n\n// @audit IERC20Metadata(token).decimals()\n216: \t\t        uint8 tokenDecimals = IERC20Metadata(token).decimals();\n```",
          "loc": [
            "[216](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L216)",
            "[82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L82)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit IERC20Metadata(_asset).decimals()\n179: \t\t        assetDecimals = IERC20Metadata(_asset).decimals();\n```",
          "loc": [
            "[179](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L179)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Large transfers may not work with some `ERC20` tokens",
      "description": "Some `IERC20` implementations (e.g `UNI`, `COMP`) may fail if the valued `transferred` is larger than `uint96`. [Source](https://github.com/d-xo/weird-erc20/blob/main/src/Uint96.sol).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n599: \t\t        SafeERC20.safeTransfer(IERC20(asset), isTransformMode ? msg.sender : owner, assets);\n\n779: \t\t            SafeERC20.safeTransfer(IERC20(asset), receiver, amount);\n\n946: \t\t        SafeERC20.safeTransfer(IERC20(asset), receiver, assets);\n```",
          "loc": [
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L779)",
            "[599](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L599)",
            "[946](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L946)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n226: \t\t            SafeERC20.safeTransfer(token, to, amount);\n```",
          "loc": [
            "[226](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L226)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n272: \t\t        SafeERC20.safeTransfer(IERC20(token), to, amount);\n```",
          "loc": [
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L272)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n88: \t\t            SafeERC20.safeTransfer(IERC20(token0), params.recipient, amount0 - added0);\n\n91: \t\t            SafeERC20.safeTransfer(IERC20(token1), params.recipient, amount1 - added1);\n\n94: \t\t            SafeERC20.safeTransfer(IERC20(token), params.recipient, amount);\n\n170: \t\t            SafeERC20.safeTransfer(IERC20(token0), params.recipient, amount0);\n\n173: \t\t            SafeERC20.safeTransfer(IERC20(token1), params.recipient, amount1);\n```",
          "loc": [
            "[173](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L173)",
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L88)",
            "[91](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L91)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L94)",
            "[170](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L170)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n872: \t\t            SafeERC20.safeTransfer(token, to, amount);\n```",
          "loc": [
            "[872](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L872)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n85: \t\t        SafeERC20.safeTransfer(data.asset, msg.sender, data.liquidationCost + (fee0 + fee1));\n\n91: \t\t                SafeERC20.safeTransfer(data.swap0.tokenIn, data.liquidator, balance);\n\n97: \t\t                SafeERC20.safeTransfer(data.swap1.tokenIn, data.liquidator, balance);\n\n106: \t\t                SafeERC20.safeTransfer(data.asset, data.liquidator, balance);\n```",
          "loc": [
            "[85](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L85)",
            "[91](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L91)",
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L97)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n98: \t\t                SafeERC20.safeTransfer(params.tokenIn, universalRouter, params.amountIn);\n\n167: \t\t        SafeERC20.safeTransfer(IERC20(tokenIn), msg.sender, amountToPay);\n```",
          "loc": [
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L98)",
            "[167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L167)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Large approvals may not work with some `ERC20` tokens",
      "description": "Not all `IERC20` implementations are totally compliant, and some (e.g `UNI`, `COMP`) may fail if the valued passed to `approve` is larger than `uint96`. If the approval amount is `type(uint256).max`, which may cause issues with systems that expect the value passed to approve to be reflected in the allowances mapping.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n280: \t\t            SafeERC20.safeApprove(IERC20(token0), address(nonfungiblePositionManager), type(uint256).max);\n\n284: \t\t            SafeERC20.safeApprove(IERC20(token1), address(nonfungiblePositionManager), type(uint256).max);\n```",
          "loc": [
            "[284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L284)",
            "[280](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L280)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n213: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), state.maxAddAmount0);\n\n214: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), state.maxAddAmount1);\n\n220: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), 0);\n\n221: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), 0);\n```",
          "loc": [
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L221)",
            "[213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L213)",
            "[214](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L214)",
            "[220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L220)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n165: \t\t        SafeERC20.safeApprove(IERC20(token), msg.sender, amount);\n```",
          "loc": [
            "[165](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L165)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n831: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), 0);\n\n832: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), total0);\n\n835: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), 0);\n\n836: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), total1);\n```",
          "loc": [
            "[835](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L835)",
            "[831](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L831)",
            "[832](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L832)",
            "[836](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L836)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n72: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), data.liquidationCost);\n\n78: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), 0);\n```",
          "loc": [
            "[72](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L72)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L78)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n87: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, params.amountIn);\n\n94: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, 0);\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L87)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L94)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`approve` can revert if the current approval is not zero",
      "description": "Some tokens like USDT check for the current approval, and they revert if it's not zero. While Tether is known to do this, it applies to other tokens as well, which are trying to protect against [this](https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/edit) attack vector.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n213: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), state.maxAddAmount0);\n\n214: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), state.maxAddAmount1);\n\n220: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), 0);\n\n221: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), 0);\n```",
          "loc": [
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L221)",
            "[213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L213)",
            "[214](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L214)",
            "[220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L220)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n165: \t\t        SafeERC20.safeApprove(IERC20(token), msg.sender, amount);\n```",
          "loc": [
            "[165](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L165)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n831: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), 0);\n\n832: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), total0);\n\n835: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), 0);\n\n836: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), total1);\n```",
          "loc": [
            "[835](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L835)",
            "[831](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L831)",
            "[832](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L832)",
            "[836](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L836)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n72: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), data.liquidationCost);\n\n78: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), 0);\n```",
          "loc": [
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L78)",
            "[72](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L72)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n87: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, params.amountIn);\n\n94: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, 0);\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L87)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L94)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`safeApprove` is deprecated",
      "description": "The usage of deprecated library functions should be discouraged, as `safeApprove` is also potentially [dangerous](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/2219).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n280: \t\t            SafeERC20.safeApprove(IERC20(token0), address(nonfungiblePositionManager), type(uint256).max);\n\n284: \t\t            SafeERC20.safeApprove(IERC20(token1), address(nonfungiblePositionManager), type(uint256).max);\n```",
          "loc": [
            "[284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L284)",
            "[280](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L280)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n213: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), state.maxAddAmount0);\n\n214: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), state.maxAddAmount1);\n\n220: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), 0);\n\n221: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), 0);\n```",
          "loc": [
            "[213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L213)",
            "[214](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L214)",
            "[220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L220)",
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L221)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n165: \t\t        SafeERC20.safeApprove(IERC20(token), msg.sender, amount);\n```",
          "loc": [
            "[165](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L165)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n831: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), 0);\n\n832: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), total0);\n\n835: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), 0);\n\n836: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), total1);\n```",
          "loc": [
            "[835](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L835)",
            "[831](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L831)",
            "[832](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L832)",
            "[836](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L836)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n72: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), data.liquidationCost);\n\n78: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), 0);\n```",
          "loc": [
            "[72](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L72)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L78)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n87: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, params.amountIn);\n\n94: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, 0);\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L87)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L94)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Unsafe downcast may overflow",
      "description": "When a type is downcast to a smaller type, the higher order bits are discarded, resulting in the application of a modulo operation to the original value.\n\nIf the downcasted value is large enough, this may result in an overflow that will not revert.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit uint256 liquidationValue * fees0 / feeValue downcasted to uint128\n1054: \t\t                fees0 = uint128(liquidationValue * fees0 / feeValue);\n\n// @audit uint256 liquidationValue * fees1 / feeValue downcasted to uint128\n1055: \t\t                fees1 = uint128(liquidationValue * fees1 / feeValue);\n\n// @audit uint256 (liquidationValue - feeValue) * liquidity / (fullValue - feeValue) downcasted to uint128\n1060: \t\t                liquidity = uint128((liquidationValue - feeValue) * liquidity / (fullValue - feeValue));\n```",
          "loc": [
            "[1055](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1055)",
            "[1054](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1054)",
            "[1060](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1060)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Unsafe `uint` to `int` conversion",
      "description": "The `int` type in Solidity uses the [two's complement system](https://en.wikipedia.org/wiki/Two%27s_complement), so it is possible to accidentally overflow a very large `uint` to an `int`, even if they share the same number of bytes (e.g. a `uint256 number > type(uint128).max` will overflow a `int256` cast).\n\nConsider using the [SafeCast](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol) library to prevent any overflows.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit uint16 maxDifference downcasted to int16\n173: \t\t            return twapTick - currentTick >= -int16(maxDifference) && twapTick - currentTick <= int16(maxDifference);\n\n// @audit uint16 maxDifference downcasted to int16\n173: \t\t            return twapTick - currentTick >= -int16(maxDifference) && twapTick - currentTick <= int16(maxDifference);\n```",
          "loc": [
            "[173](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L173)",
            "[173](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L173)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit uint256 params.amountIn downcasted to int256\n137: \t\t                int256(params.amountIn),\n```",
          "loc": [
            "[137](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L137)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Use of `abi.encodeWithSignature`/`abi.encodeWithSelector` instead of `abi.encodeCall`",
      "description": "Consider refactoring the code by using `abi.encodeCall` instead of `abi.encodeWithSignature`/`abi.encodeWithSelector`, as the former keeps the code [typo/type safe](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3693).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n92: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoCompound.execute.selector, params)\n```",
          "loc": [
            "[92](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L92)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n102: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoRange.execute.selector, params)\n```",
          "loc": [
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L102)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Subtraction may underflow if multiplication is too large",
      "description": "The following expressions may underflow, as the subtrahend could be greater than the minuend in case the former is multiplied by a large number.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n1107: \t\t                (Q96 - ((fullValue - maxPenaltyValue) * Q96 / (startLiquidationValue - maxPenaltyValue)));\n```",
          "loc": [
            "[1107](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1107)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n155: \t\t                state.amount0 -= state.feeAmount0 * params.rewardX64 / Q64;\n\n156: \t\t                state.amount1 -= state.feeAmount1 * params.rewardX64 / Q64;\n\n187: \t\t                    state.amount0 -= state.amount0 * params.rewardX64 / Q64;\n\n189: \t\t                    state.amount1 -= state.amount1 * params.rewardX64 / Q64;\n\n194: \t\t            state.amount0 -= (config.onlyFees ? state.feeAmount0 : state.amount0) * params.rewardX64 / Q64;\n\n195: \t\t            state.amount1 -= (config.onlyFees ? state.feeAmount1 : state.amount1) * params.rewardX64 / Q64;\n```",
          "loc": [
            "[194](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L194)",
            "[155](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L155)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L156)",
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L187)",
            "[189](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L189)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L195)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Possible division by 0 is not prevented",
      "description": "These functions can be called with 0 value in the input and this value is not checked for being bigger than 0, that means in some scenarios this can potentially trigger a division by zero.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit priceX96\n144: \t\t            ? (priceX96 - verifyPriceX96) * 10000 / priceX96\n\n// @audit verifyPriceX96\n145: \t\t            : (verifyPriceX96 - priceX96) * 10000 / verifyPriceX96;\n```",
          "loc": [
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L145)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit feeValue\n1054: \t\t                fees0 = uint128(liquidationValue * fees0 / feeValue);\n\n// @audit feeValue\n1055: \t\t                fees1 = uint128(liquidationValue * fees1 / feeValue);\n\n// @audit collateralValue\n1105: \t\t            uint256 startLiquidationValue = debt * fullValue / collateralValue;\n```",
          "loc": [
            "[1055](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1055)",
            "[1054](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1054)",
            "[1105](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1105)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Code does not follow the best practice of check-effects-interaction",
      "description": "Code should follow the best-practice of [CEI](https://blockchain-academy.hs-mittweida.de/courses/solidity-coding-beginners-to-intermediate/lessons/solidity-11-coding-patterns/topic/checks-effects-interactions/), where state variables are updated before any external calls are made. Doing so prevents a large class of reentrancy bugs.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit nonfungiblePositionManager.approve(transformer, tokenId) called on line 520\n542: \t\t        transformedTokenId = 0;\n\n// @audit permit2.permitTransferFrom(\r\n                permit,\r\n                ISignatureTransfer.SignatureTransferDetails(address(this), state.liquidatorCost),\r\n                msg.sender,\r\n                signature\r\n            ) called on line 720\n731: \t\t        debtSharesTotal -= debtShares;\n\n// @audit permit2.permitTransferFrom(\r\n                permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\r\n            ) called on line 896\n913: \t\t            dailyLendIncreaseLimitLeft -= assets;\n\n// @audit permit2.permitTransferFrom(\r\n                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\r\n                ) called on line 981\n992: \t\t        debtSharesTotal -= shares;\n\n// @audit permit2.permitTransferFrom(\r\n                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\r\n                ) called on line 981\n995: \t\t        dailyDebtIncreaseLimitLeft += assets;\n```",
          "loc": [
            "[913](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L913)",
            "[542](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L542)",
            "[731](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L731)",
            "[992](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L992)",
            "[995](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L995)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit nonfungiblePositionManager.positions(params.tokenId) called on line 131\n251: \t\t            positionConfigs[state.newTokenId] = config;\n```",
          "loc": [
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L251)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing limits when setting min/max amounts",
      "description": "There are some missing limits in these functions, and this could lead to unexpected scenarios. Consider adding a min/max limit for the following values, when appropriate.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit missing both checks -> baseRatePerYearX96, multiplierPerYearX96, jumpMultiplierPerYearX96, _kinkX96\n82: \t\t    function setValues(\n83: \t\t        uint256 baseRatePerYearX96,\n84: \t\t        uint256 multiplierPerYearX96,\n85: \t\t        uint256 jumpMultiplierPerYearX96,\n86: \t\t        uint256 _kinkX96\n```",
          "loc": [
            "[82-86](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L82-L86)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit missing max check -> \n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n// @audit missing both checks -> maxFeedAge, twapSeconds\n// @audit missing max check -> \n201: \t\t    function setTokenConfig(\n202: \t\t        address token,\n203: \t\t        AggregatorV3Interface feed,\n204: \t\t        uint32 maxFeedAge,\n205: \t\t        IUniswapV3Pool pool,\n206: \t\t        uint32 twapSeconds,\n207: \t\t        Mode mode,\n208: \t\t        uint16 maxDifference\n```",
          "loc": [
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)",
            "[201-208](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201-L208)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit missing both checks -> _minLoanSize, _globalLendLimit, _globalDebtLimit, _dailyLendIncreaseLimitMin, _dailyDebtIncreaseLimitMin\n807: \t\t    function setLimits(\n808: \t\t        uint256 _minLoanSize,\n809: \t\t        uint256 _globalLendLimit,\n810: \t\t        uint256 _globalDebtLimit,\n811: \t\t        uint256 _dailyLendIncreaseLimitMin,\n812: \t\t        uint256 _dailyDebtIncreaseLimitMin\n\n// @audit missing both checks -> _reserveFactorX32\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n// @audit missing max check -> \n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n// @audit missing both checks -> collateralValueLimitFactorX32\n// @audit missing min check -> collateralFactorX32\n856: \t\t    function setTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32)\n\n// @audit missing both checks -> debtExchangeRateX96, lendExchangeRateX96, newShares\n// @audit missing min check -> oldShares\n1205: \t\t    function _updateAndCheckCollateral(\n1206: \t\t        uint256 tokenId,\n1207: \t\t        uint256 debtExchangeRateX96,\n1208: \t\t        uint256 lendExchangeRateX96,\n1209: \t\t        uint256 oldShares,\n1210: \t\t        uint256 newShares\n```",
          "loc": [
            "[856](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L856)",
            "[807-812](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L807-L812)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[1205-1210](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1205-L1210)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit missing min check -> _maxTWAPTickDifference\n// @audit missing max check -> _maxTWAPTickDifference\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit missing min check -> _totalRewardX64\n243: \t\t    function setReward(uint64 _totalRewardX64) external onlyOwner {\n```",
          "loc": [
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L243)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Owner can renounce ownership",
      "description": "Each of the following contracts implements or inherits the `renounceOwnership` function. This can represent a certain risk if the ownership is renounced for any other reason than by design. Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing contract-existence checks before low-level calls",
      "description": "Low-level calls return success if there is no code present at the specified address, and this could lead to unexpected scenarios.\n\nEnsure that the code is initialized by checking `<address>.code.length > 0`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n522: \t\t        (bool success,) = transformer.call(data);\n```",
          "loc": [
            "[522](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L522)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n130: \t\t            (bool sent,) = to.call{value: balance}(\"\");\n\n221: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n```",
          "loc": [
            "[130](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L130)",
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L221)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n867: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n```",
          "loc": [
            "[867](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L867)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n89: \t\t                (bool success,) = zeroxRouter.call(data.data);\n```",
          "loc": [
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L89)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "External calls in an unbounded loop can result in a DoS",
      "description": "Consider limiting the number of iterations in loops that make external calls, as just a single one of them failing will result in a revert.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit balanceOf (112)\n111: \t\t        for (; i < count; ++i) {\n```",
          "loc": [
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L111)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Solidity version `0.8.20` may not work on other chains due to `PUSH0`",
      "description": "In Solidity `0.8.20`'s compiler, the default target EVM version has been changed to Shanghai. This version introduces a new op code called `PUSH0`.\n\nHowever, not all Layer 2 solutions have implemented this op code yet, leading to deployment failures on these chains. To overcome this problem, it is recommended to utilize an earlier EVM version.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Lack of two-step update for updating protocol addresses",
      "description": "Add a two-step process for any critical address changes.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n201: \t\t    function setTokenConfig(\n202: \t\t        address token,\n203: \t\t        AggregatorV3Interface feed,\n204: \t\t        uint32 maxFeedAge,\n205: \t\t        IUniswapV3Pool pool,\n206: \t\t        uint32 twapSeconds,\n207: \t\t        Mode mode,\n208: \t\t        uint16 maxDifference\n209: \t\t    ) external onlyOwner {\n210: \t\t        // can not be unset\n211: \t\t        if (mode == Mode.NOT_SET) {\n212: \t\t            revert InvalidConfig();\n213: \t\t        }\n214: \t\t\n215: \t\t        uint8 feedDecimals = feed.decimals();\n216: \t\t        uint8 tokenDecimals = IERC20Metadata(token).decimals();\n217: \t\t\n218: \t\t        TokenConfig memory config;\n219: \t\t\n220: \t\t        if (token != referenceToken) {\n221: \t\t            if (maxDifference < MIN_PRICE_DIFFERENCE) {\n222: \t\t                revert InvalidConfig();\n223: \t\t            }\n224: \t\t\n225: \t\t            address token0 = pool.token0();\n226: \t\t            address token1 = pool.token1();\n227: \t\t            if (!(token0 == token && token1 == referenceToken || token0 == referenceToken && token1 == token)) {\n228: \t\t                revert InvalidPool();\n229: \t\t            }\n230: \t\t            bool isToken0 = token0 == token;\n231: \t\t            config = TokenConfig(\n232: \t\t                feed, maxFeedAge, feedDecimals, tokenDecimals, pool, isToken0, twapSeconds, mode, maxDifference\n233: \t\t            );\n234: \t\t        } else {\n235: \t\t            config = TokenConfig(\n236: \t\t                feed, maxFeedAge, feedDecimals, tokenDecimals, IUniswapV3Pool(address(0)), false, 0, Mode.CHAINLINK, 0\n237: \t\t            );\n238: \t\t        }\n239: \t\t\n240: \t\t        feedConfigs[token] = config;\n241: \t\t\n242: \t\t        emit TokenConfigUpdated(token, config);\n243: \t\t        emit OracleModeUpdated(token, mode);\n244: \t\t    }\n\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n266: \t\t        emergencyAdmin = admin;\n267: \t\t        emit SetEmergencyAdmin(admin);\n268: \t\t    }\n```",
          "loc": [
            "[201-244](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201-L244)",
            "[265-268](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265-L268)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n788: \t\t    function setTransformer(address transformer, bool active) external onlyOwner {\n789: \t\t        // protects protocol from owner trying to set dangerous transformer\n790: \t\t        if (\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n792: \t\t                || transformer == address(nonfungiblePositionManager)\n793: \t\t        ) {\n794: \t\t            revert InvalidConfig();\n795: \t\t        }\n796: \t\t\n797: \t\t        transformerAllowList[transformer] = active;\n798: \t\t        emit SetTransformer(transformer, active);\n799: \t\t    }\n\n856: \t\t    function setTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32)\n857: \t\t        external\n858: \t\t        onlyOwner\n859: \t\t    {\n860: \t\t        if (collateralFactorX32 > MAX_COLLATERAL_FACTOR_X32) {\n861: \t\t            revert CollateralFactorExceedsMax();\n862: \t\t        }\n863: \t\t        tokenConfigs[token].collateralFactorX32 = collateralFactorX32;\n864: \t\t        tokenConfigs[token].collateralValueLimitFactorX32 = collateralValueLimitFactorX32;\n865: \t\t        emit SetTokenConfig(token, collateralFactorX32, collateralValueLimitFactorX32);\n866: \t\t    }\n\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n871: \t\t        emergencyAdmin = admin;\n872: \t\t        emit SetEmergencyAdmin(admin);\n873: \t\t    }\n```",
          "loc": [
            "[788-799](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L788-L799)",
            "[856-866](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L856-L866)",
            "[870-873](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870-L873)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n59: \t\t    function setWithdrawer(address _withdrawer) public onlyOwner {\n60: \t\t        emit WithdrawerChanged(_withdrawer);\n61: \t\t        withdrawer = _withdrawer;\n62: \t\t    }\n\n69: \t\t    function setOperator(address _operator, bool _active) public onlyOwner {\n70: \t\t        emit OperatorChanged(_operator, _active);\n71: \t\t        operators[_operator] = _active;\n72: \t\t    }\n\n79: \t\t    function setVault(address _vault, bool _active) public onlyOwner {\n80: \t\t        emit VaultChanged(_vault, _active);\n81: \t\t        vaults[_vault] = _active;\n82: \t\t    }\n```",
          "loc": [
            "[59-62](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L59-L62)",
            "[69-72](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L69-L72)",
            "[79-82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L79-L82)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Use of ownership with a single step rather than double",
      "description": "A single step ownership change is risky due to the fact that the new owner address could be wrong.\n\nInstead, consider using a contract like [Ownable2Step](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable2Step.sol), which provides a two-step ownership.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n15: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n16: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L4)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Loss of precision on division",
      "description": "Solidity doesn't support fractions, so divisions by large numbers could result in the quotient being zero.\n\nTo avoid this, it's recommended to require a minimum numerator amount to ensure that it is always greater than the denominator.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n50: \t\t        return debt * Q96 / (cash + debt);\n\n67: \t\t            borrowRateX96 = (utilizationRateX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n\n69: \t\t            uint256 normalRateX96 = (kinkX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n\n71: \t\t            borrowRateX96 = (excessUtilX96 * jumpMultiplierPerSecondX96 / Q96) + normalRateX96;\n\n74: \t\t        supplyRateX96 = utilizationRateX96 * borrowRateX96 / Q96;\n\n95: \t\t        baseRatePerSecondX96 = baseRatePerYearX96 / YEAR_SECS;\n\n96: \t\t        multiplierPerSecondX96 = multiplierPerYearX96 / YEAR_SECS;\n\n97: \t\t        jumpMultiplierPerSecondX96 = jumpMultiplierPerYearX96 / YEAR_SECS;\n```",
          "loc": [
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L50)",
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L67)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L69)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L71)",
            "[74](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L74)",
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L95)",
            "[96](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L96)",
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L97)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n120: \t\t        value = (price0X96 * (amount0 + fees0) / Q96 + price1X96 * (amount1 + fees1) / Q96) * Q96 / priceTokenX96;\n\n120: \t\t        value = (price0X96 * (amount0 + fees0) / Q96 + price1X96 * (amount1 + fees1) / Q96) * Q96 / priceTokenX96;\n\n120: \t\t        value = (price0X96 * (amount0 + fees0) / Q96 + price1X96 * (amount1 + fees1) / Q96) * Q96 / priceTokenX96;\n\n121: \t\t        feeValue = (price0X96 * fees0 / Q96 + price1X96 * fees1 / Q96) * Q96 / priceTokenX96;\n\n121: \t\t        feeValue = (price0X96 * fees0 / Q96 + price1X96 * fees1 / Q96) * Q96 / priceTokenX96;\n\n121: \t\t        feeValue = (price0X96 * fees0 / Q96 + price1X96 * fees1 / Q96) * Q96 / priceTokenX96;\n\n122: \t\t        price0X96 = price0X96 * Q96 / priceTokenX96;\n\n123: \t\t        price1X96 = price1X96 * Q96 / priceTokenX96;\n\n129: \t\t        uint256 derivedPoolPriceX96 = price0X96 * Q96 / price1X96;\n\n144: \t\t            ? (priceX96 - verifyPriceX96) * 10000 / priceX96\n\n145: \t\t            : (verifyPriceX96 - priceX96) * 10000 / verifyPriceX96;\n\n304: \t\t            chainlinkPriceX96 = (10 ** referenceTokenDecimals) * chainlinkPriceX96 * Q96 / chainlinkReferencePriceX96\n305: \t\t                / (10 ** feedConfig.tokenDecimals);\n\n304: \t\t            chainlinkPriceX96 = (10 ** referenceTokenDecimals) * chainlinkPriceX96 * Q96 / chainlinkReferencePriceX96\n\n342: \t\t        return uint256(answer) * Q96 / (10 ** feedConfig.feedDecimals);\n\n353: \t\t            poolTWAPPriceX96 = Q96 * Q96 / priceX96;\n\n369: \t\t            int24 tick = int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapSeconds)));\n```",
          "loc": [
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L120)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L120)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L120)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L121)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L121)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L121)",
            "[122](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L122)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L123)",
            "[129](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L129)",
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L145)",
            "[304-305](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L304-L305)",
            "[304](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L304)",
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L342)",
            "[353](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L353)",
            "[369](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L369)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n36: \t\t    uint32 public constant MAX_COLLATERAL_FACTOR_X32 = uint32(Q32 * 90 / 100); // 90%\n\n36: \t\t    uint32 public constant MAX_COLLATERAL_FACTOR_X32 = uint32(Q32 * 90 / 100); // 90%\n\n38: \t\t    uint32 public constant MIN_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 2 / 100); // 2%\n\n38: \t\t    uint32 public constant MIN_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 2 / 100); // 2%\n\n39: \t\t    uint32 public constant MAX_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 10 / 100); // 10%\n\n39: \t\t    uint32 public constant MAX_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 10 / 100); // 10%\n\n41: \t\t    uint32 public constant MIN_RESERVE_PROTECTION_FACTOR_X32 = uint32(Q32 / 100); //1%\n\n41: \t\t    uint32 public constant MIN_RESERVE_PROTECTION_FACTOR_X32 = uint32(Q32 / 100); //1%\n\n769: \t\t            _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up) * reserveProtectionFactorX32 / Q32;\n\n1054: \t\t                fees0 = uint128(liquidationValue * fees0 / feeValue);\n\n1055: \t\t                fees1 = uint128(liquidationValue * fees1 / feeValue);\n\n1060: \t\t                liquidity = uint128((liquidationValue - feeValue) * liquidity / (fullValue - feeValue));\n\n1100: \t\t        uint256 maxPenaltyValue = debt * (Q32 + MAX_LIQUIDATION_PENALTY_X32) / Q32;\n\n1105: \t\t            uint256 startLiquidationValue = debt * fullValue / collateralValue;\n\n1107: \t\t                (Q96 - ((fullValue - maxPenaltyValue) * Q96 / (startLiquidationValue - maxPenaltyValue)));\n\n1109: \t\t                + (MAX_LIQUIDATION_PENALTY_X32 - MIN_LIQUIDATION_PENALTY_X32) * penaltyFractionX96 / Q96;\n\n1111: \t\t            liquidationValue = debt * (Q32 + penaltyX32) / Q32;\n\n1116: \t\t            uint256 penaltyValue = fullValue * (Q32 - MAX_LIQUIDATION_PENALTY_X32) / Q32;\n\n1137: \t\t            newLendExchangeRateX96 = (totalLent - missing) * newLendExchangeRateX96 / totalLent;\n\n1188: \t\t                + oldDebtExchangeRateX96 * (block.timestamp - lastRateUpdate) * borrowRateX96 / Q96;\n\n1190: \t\t                + oldLendExchangeRateX96 * (block.timestamp - lastRateUpdate) * supplyRateX96 / Q96;\n\n1230: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1238: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1250: \t\t            uint256 lendIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n1251: \t\t                * (Q32 + MAX_DAILY_LEND_INCREASE_X32) / Q32;\n\n1262: \t\t            uint256 debtIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n1263: \t\t                * (Q32 + MAX_DAILY_DEBT_INCREASE_X32) / Q32;\n```",
          "loc": [
            "[36](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L36)",
            "[36](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L36)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L38)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L38)",
            "[39](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L39)",
            "[39](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L39)",
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L41)",
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L41)",
            "[769](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L769)",
            "[1054](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1054)",
            "[1055](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1055)",
            "[1060](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1060)",
            "[1100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1100)",
            "[1105](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1105)",
            "[1107](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1107)",
            "[1109](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1109)",
            "[1111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1111)",
            "[1116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1116)",
            "[1137](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1137)",
            "[1188](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1188)",
            "[1190](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1190)",
            "[1230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1230)",
            "[1238](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1238)",
            "[1250-1251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1250-L1251)",
            "[1262-1263](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1262-L1263)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n155: \t\t                state.amount0 -= state.feeAmount0 * params.rewardX64 / Q64;\n\n156: \t\t                state.amount1 -= state.feeAmount1 * params.rewardX64 / Q64;\n\n187: \t\t                    state.amount0 -= state.amount0 * params.rewardX64 / Q64;\n\n189: \t\t                    state.amount1 -= state.amount1 * params.rewardX64 / Q64;\n\n194: \t\t            state.amount0 -= (config.onlyFees ? state.feeAmount0 : state.amount0) * params.rewardX64 / Q64;\n\n195: \t\t            state.amount1 -= (config.onlyFees ? state.feeAmount1 : state.amount1) * params.rewardX64 / Q64;\n```",
          "loc": [
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L187)",
            "[155](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L155)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L156)",
            "[189](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L189)",
            "[194](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L194)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L195)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n187: \t\t            return (int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapPeriod))), true);\n```",
          "loc": [
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L187)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n156: \t\t            state.maxAddAmount0 = state.amount0 * Q64 / (rewardX64 + Q64);\n\n157: \t\t            state.maxAddAmount1 = state.amount1 * Q64 / (rewardX64 + Q64);\n\n170: \t\t                state.amount0Fees = state.compounded0 * rewardX64 / Q64;\n\n171: \t\t                state.amount1Fees = state.compounded1 * rewardX64 / Q64;\n```",
          "loc": [
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L157)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L156)",
            "[170](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L170)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L171)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n143: \t\t            state.protocolReward0 = state.feeAmount0 * params.rewardX64 / Q64;\n\n144: \t\t            state.protocolReward1 = state.feeAmount1 * params.rewardX64 / Q64;\n\n195: \t\t            state.maxAddAmount0 = config.onlyFees ? state.amount0 : state.amount0 * Q64 / (params.rewardX64 + Q64);\n\n196: \t\t            state.maxAddAmount1 = config.onlyFees ? state.amount1 : state.amount1 * Q64 / (params.rewardX64 + Q64);\n\n236: \t\t                state.protocolReward0 = state.amountAdded0 * params.rewardX64 / Q64;\n\n237: \t\t                state.protocolReward1 = state.amountAdded1 * params.rewardX64 / Q64;\n```",
          "loc": [
            "[143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L143)",
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L144)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L195)",
            "[196](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L196)",
            "[236](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L236)",
            "[237](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L237)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Gas griefing/theft is possible on an unsafe external call",
      "description": "A low-level call will copy any amount of bytes to local memory. When bytes are copied from returndata to memory, the memory expansion cost is paid.\n\nThis means that when using a standard solidity call, the callee can 'returnbomb' the caller, imposing an arbitrary gas cost.\n\nBecause this gas is paid by the caller and in the caller's context, it can cause the caller to run out of gas and halt execution.\n\nConsider replacing all unsafe `call` with `excessivelySafeCall` from this [repository](https://github.com/nomad-xyz/ExcessivelySafeCall).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n130: \t\t            (bool sent,) = to.call{value: balance}(\"\");\n\n221: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n```",
          "loc": [
            "[130](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L130)",
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L221)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n867: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n```",
          "loc": [
            "[867](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L867)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Consider the case where `totalSupply` is zero",
      "description": "The following functions should handle the edge case where the totalSupply is zero, for example to avoid division by zero errors, as such errors may negatively impact the logic of these functions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n303: \t\t        uint256 value = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Up);\n\n314: \t\t        uint256 value = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Up);\n\n769: \t\t            _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up) * reserveProtectionFactorX32 / Q32;\n\n906: \t\t        if (totalSupply() > globalLendLimit) {\n\n1025: \t\t        uint256 lent = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Down);\n\n1134: \t\t            uint256 totalLent = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up);\n\n1225: \t\t                uint256 lentAssets = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Up);\n\n1250: \t\t            uint256 lendIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n\n1262: \t\t            uint256 debtIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n```",
          "loc": [
            "[769](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L769)",
            "[303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L303)",
            "[314](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L314)",
            "[906](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L906)",
            "[1025](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1025)",
            "[1134](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1134)",
            "[1225](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1225)",
            "[1250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1250)",
            "[1262](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1262)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Use `increaseAllowance/decreaseAllowance` instead of `approve/safeApprove`",
      "description": "Changing an allowance with `approve` brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. Refer to [ERC20 API: An Attack Vector on the Approve/TransferFrom Methods](https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/edit).\n\nIt is recommended to use the `increaseAllowance/decreaseAllowance` to avoid ths problem.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n520: \t\t        nonfungiblePositionManager.approve(transformer, tokenId);\n\n537: \t\t        nonfungiblePositionManager.approve(address(0), tokenId);\n```",
          "loc": [
            "[520](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L520)",
            "[537](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L537)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n280: \t\t            SafeERC20.safeApprove(IERC20(token0), address(nonfungiblePositionManager), type(uint256).max);\n\n284: \t\t            SafeERC20.safeApprove(IERC20(token1), address(nonfungiblePositionManager), type(uint256).max);\n```",
          "loc": [
            "[280](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L280)",
            "[284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L284)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n213: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), state.maxAddAmount0);\n\n214: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), state.maxAddAmount1);\n\n220: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), 0);\n\n221: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), 0);\n```",
          "loc": [
            "[213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L213)",
            "[214](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L214)",
            "[220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L220)",
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L221)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n165: \t\t        SafeERC20.safeApprove(IERC20(token), msg.sender, amount);\n```",
          "loc": [
            "[165](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L165)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n831: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), 0);\n\n832: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), total0);\n\n835: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), 0);\n\n836: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), total1);\n```",
          "loc": [
            "[831](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L831)",
            "[832](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L832)",
            "[835](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L835)",
            "[836](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L836)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n72: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), data.liquidationCost);\n\n78: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), 0);\n```",
          "loc": [
            "[72](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L72)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L78)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n87: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, params.amountIn);\n\n94: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, 0);\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L87)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L94)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`onlyOwner` functions not accessible if `owner` renounces ownership",
      "description": "The `owner` is able to perform certain privileged activities, but it's possible to set the owner to `address(0)`. This can represent a certain risk if the ownership is renounced for any other reason than by design.\n\nRenouncing ownership will leave the contract without an `owner`, therefore limiting any functionality that needs authority.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n87: \t\t    ) public onlyOwner {\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L87)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n209: \t\t    ) external onlyOwner {\n\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)",
            "[209](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L209)",
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n765: \t\t    function withdrawReserves(uint256 amount, address receiver) external onlyOwner {\n\n788: \t\t    function setTransformer(address transformer, bool active) external onlyOwner {\n\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n858: \t\t        onlyOwner\n\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[765](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L765)",
            "[788](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L788)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[858](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L858)",
            "[870](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n59: \t\t    function setWithdrawer(address _withdrawer) public onlyOwner {\n\n69: \t\t    function setOperator(address _operator, bool _active) public onlyOwner {\n\n79: \t\t    function setVault(address _vault, bool _active) public onlyOwner {\n\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L59)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L69)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L79)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Using a vulnerable dependency from some libraries",
      "description": "This project is using a vulnerable version of some libraries, which have the following issues:\n\n\n\nCurrent `@openzeppelin/contracts` version: 4.6.0\n\n|Risk|Title|Min Version|Max Version|\n|------|-------|-------------|-------------|\n|LOW|[Denial of Service (DoS)](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-5425827)|>=3.2.0|<4.8.3|\n|MEDIUM|[Improper Input Validation](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-5425051)|>=3.3.0|<4.9.2|\n|MEDIUM|[Improper Encoding or Escaping of Output](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-5838352)|>=4.0.0|<4.9.3|\n|HIGH|[Improper Verification of Cryptographic Signature](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-2980279)|>=0.0.0|<4.7.3|\n|MEDIUM|[Denial of Service (DoS)](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-2965798)|>=2.3.0|<4.7.2|\n|LOW|[Incorrect Resource Transfer Between Spheres](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-2965580)|>=4.6.0|<4.7.2|\n|HIGH|[Incorrect Calculation](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-2964946)|>=4.3.0|<4.7.2|\n|HIGH|[Information Exposure](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-2958050)|>=4.1.0|<4.7.1|\n|HIGH|[Information Exposure](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-2958047)|>=4.0.0|<4.7.1|\n|LOW|[Missing Authorization](https://security.snyk.io/vuln/SNYK-JS-OPENZEPPELINCONTRACTS-5672116)|>=4.3.0|<4.9.1|",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L14)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n12: \t\timport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n13: \t\timport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n16: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n17: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n18: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L12)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L13)",
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L14)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L15)",
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L16)",
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L17)",
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L6)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n4: \t\timport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L6)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n4: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L4)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Centralization issue caused by admin privileges",
      "description": "There are priviliged roles that are a single point of failure, who can use critical functions, posing a centralization issue.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n82: \t\t    function setValues(\n```",
          "loc": [
            "[82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L82)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n201: \t\t    function setTokenConfig(\n\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)",
            "[201](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201)",
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n765: \t\t    function withdrawReserves(uint256 amount, address receiver) external onlyOwner {\n\n788: \t\t    function setTransformer(address transformer, bool active) external onlyOwner {\n\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n856: \t\t    function setTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32)\n\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[765](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L765)",
            "[788](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L788)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[856](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L856)",
            "[870](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n59: \t\t    function setWithdrawer(address _withdrawer) public onlyOwner {\n\n69: \t\t    function setOperator(address _operator, bool _active) public onlyOwner {\n\n79: \t\t    function setVault(address _vault, bool _active) public onlyOwner {\n\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L59)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L69)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L79)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n243: \t\t    function setReward(uint64 _totalRewardX64) external onlyOwner {\n```",
          "loc": [
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L243)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for `address(0)` in constructor/initializers",
      "description": "Check for zero-address to avoid the risk of setting `address(0)` for state variables when deploying.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit _nonfungiblePositionManager\n79: \t\t        nonfungiblePositionManager = _nonfungiblePositionManager;\n\n// @audit _referenceToken\n81: \t\t        referenceToken = _referenceToken;\n\n// @audit _chainlinkReferenceToken\n83: \t\t        chainlinkReferenceToken = _chainlinkReferenceToken;\n```",
          "loc": [
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L79)",
            "[81](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L81)",
            "[83](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L83)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit _asset\n178: \t\t        asset = _asset;\n\n// @audit _nonfungiblePositionManager\n180: \t\t        nonfungiblePositionManager = _nonfungiblePositionManager;\n\n// @audit _interestRateModel\n182: \t\t        interestRateModel = _interestRateModel;\n\n// @audit _oracle\n183: \t\t        oracle = _oracle;\n\n// @audit _permit2\n184: \t\t        permit2 = _permit2;\n```",
          "loc": [
            "[178](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L178)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L180)",
            "[182](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L182)",
            "[183](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L183)",
            "[184](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L184)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit _permit2\n37: \t\t        permit2 = IPermit2(_permit2);\n```",
          "loc": [
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L37)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit _nonfungiblePositionManager\n42: \t\t        weth = IWETH9(_nonfungiblePositionManager.WETH9());\n\n// @audit _zeroxRouter\n45: \t\t        zeroxRouter = _zeroxRouter;\n\n// @audit _universalRouter\n46: \t\t        universalRouter = _universalRouter;\n```",
          "loc": [
            "[42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L42)",
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L45)",
            "[46](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L46)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for `address(0)` when updating state variables",
      "description": "Check for zero-address to avoid the risk of setting `address(0)` for state variables after an update.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit token\n240: \t\t        feedConfigs[token] = config;\n\n// @audit feed\n240: \t\t        feedConfigs[token] = config;\n\n// @audit admin\n266: \t\t        emergencyAdmin = admin;\n```",
          "loc": [
            "[240](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L240)",
            "[240](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L240)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L266)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit target\n487: \t\t        transformApprovals[msg.sender][tokenId][target] = isActive;\n\n// @audit admin\n871: \t\t        emergencyAdmin = admin;\n\n// @audit to\n1298: \t\t        ownedTokensIndex[tokenId] = ownedTokens[to].length;\n\n// @audit from\n1308: \t\t            ownedTokens[from][tokenIndex] = lastTokenId;\n```",
          "loc": [
            "[487](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L487)",
            "[871](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L871)",
            "[1298](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1298)",
            "[1308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1308)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit config\n230: \t\t        positionConfigs[tokenId] = config;\n```",
          "loc": [
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L230)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit _withdrawer\n61: \t\t        withdrawer = _withdrawer;\n\n// @audit _operator\n71: \t\t        operators[_operator] = _active;\n\n// @audit _vault\n81: \t\t        vaults[_vault] = _active;\n```",
          "loc": [
            "[61](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L61)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L71)",
            "[81](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L81)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit token\n250: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] + amount;\n\n// @audit token\n257: \t\t            positionBalances[tokenId][token] = amount;\n\n// @audit token\n270: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] - amount;\n\n// @audit to\n270: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] - amount;\n```",
          "loc": [
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L250)",
            "[257](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L257)",
            "[270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L270)",
            "[270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L270)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit config\n284: \t\t        positionConfigs[tokenId] = config;\n```",
          "loc": [
            "[284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L284)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Fee-on-transfer/rebasing tokens will have problems when swapping",
      "description": "The Uniswap v3 protocol does not provide support for rebasing or fee-on-transfer tokens. Consequently, attempting to utilize such tokens with Uniswap v3 may lead to failed transfers after a swap due to insufficient tokens or result in the contract having a remaining balance following the transfer.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n134: \t\t            (int256 amount0Delta, int256 amount1Delta) = params.pool.swap(\n135: \t\t                address(this),\n136: \t\t                params.swap0For1,\n137: \t\t                int256(params.amountIn),\n138: \t\t                (params.swap0For1 ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1),\n139: \t\t                abi.encode(\n140: \t\t                    params.swap0For1 ? params.token0 : params.token1,\n141: \t\t                    params.swap0For1 ? params.token1 : params.token0,\n142: \t\t                    params.fee\n143: \t\t                )\n144: \t\t            );\n```",
          "loc": [
            "[134-144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L134-L144)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`unchecked` blocks with subtractions may underflow",
      "description": "There aren't any checks to avoid an underflow which can happen inside an `unchecked` block, so the following subtractions may underflow silently.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit feeGrowthInside0LastX128 - position.feeGrowthInside0LastX128\n463: \t\t            feeGrowth0 = feeGrowthInside0LastX128 - position.feeGrowthInside0LastX128;\n\n// @audit feeGrowthInside1LastX128 - position.feeGrowthInside1LastX128\n464: \t\t            feeGrowth1 = feeGrowthInside1LastX128 - position.feeGrowthInside1LastX128;\n\n// @audit lowerFeeGrowthOutside0X128 - upperFeeGrowthOutside0X128\n486: \t\t                feeGrowthInside0X128 = lowerFeeGrowthOutside0X128 - upperFeeGrowthOutside0X128;\n\n// @audit lowerFeeGrowthOutside1X128 - upperFeeGrowthOutside1X128\n487: \t\t                feeGrowthInside1X128 = lowerFeeGrowthOutside1X128 - upperFeeGrowthOutside1X128;\n\n// @audit feeGrowthGlobal0X128 - lowerFeeGrowthOutside0X128 - upperFeeGrowthOutside0X128\n489: \t\t                feeGrowthInside0X128 = feeGrowthGlobal0X128 - lowerFeeGrowthOutside0X128 - upperFeeGrowthOutside0X128;\n\n// @audit feeGrowthGlobal0X128 - lowerFeeGrowthOutside0X128\n489: \t\t                feeGrowthInside0X128 = feeGrowthGlobal0X128 - lowerFeeGrowthOutside0X128 - upperFeeGrowthOutside0X128;\n\n// @audit feeGrowthGlobal1X128 - lowerFeeGrowthOutside1X128 - upperFeeGrowthOutside1X128\n490: \t\t                feeGrowthInside1X128 = feeGrowthGlobal1X128 - lowerFeeGrowthOutside1X128 - upperFeeGrowthOutside1X128;\n\n// @audit feeGrowthGlobal1X128 - lowerFeeGrowthOutside1X128\n490: \t\t                feeGrowthInside1X128 = feeGrowthGlobal1X128 - lowerFeeGrowthOutside1X128 - upperFeeGrowthOutside1X128;\n\n// @audit upperFeeGrowthOutside0X128 - lowerFeeGrowthOutside0X128\n492: \t\t                feeGrowthInside0X128 = upperFeeGrowthOutside0X128 - lowerFeeGrowthOutside0X128;\n\n// @audit upperFeeGrowthOutside1X128 - lowerFeeGrowthOutside1X128\n493: \t\t                feeGrowthInside1X128 = upperFeeGrowthOutside1X128 - lowerFeeGrowthOutside1X128;\n```",
          "loc": [
            "[463](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L463)",
            "[464](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L464)",
            "[486](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L486)",
            "[487](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L487)",
            "[489](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L489)",
            "[489](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L489)",
            "[490](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L490)",
            "[490](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L490)",
            "[492](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L492)",
            "[493](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L493)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Some functions do not work correctly with fee-on-transfer tokens",
      "description": "Some tokens take a transfer fee (e.g. `STA`, `PAXG`), some do not currently charge a fee but may do so in the future (e.g. `USDT`, `USDC`).\n\nShould a fee-on-transfer token be added as an asset and deposited, it could be abused, as the accounting is wrong. In the current implementation the following function calls do not work well with fee-on-transfer tokens as the amount variable is the pre-fee amount, including the fee, whereas the final balance do not include the fee anymore.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n728: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), state.liquidatorCost);\n\n901: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n\n986: \t\t                SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n```",
          "loc": [
            "[901](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L901)",
            "[728](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L728)",
            "[986](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L986)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n578: \t\t            SafeERC20.safeTransferFrom(token0, msg.sender, address(this), needed0);\n\n581: \t\t            SafeERC20.safeTransferFrom(token1, msg.sender, address(this), needed1);\n\n584: \t\t            SafeERC20.safeTransferFrom(otherToken, msg.sender, address(this), neededOther);\n```",
          "loc": [
            "[578](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L578)",
            "[581](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L581)",
            "[584](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L584)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Some functions do not work correctly with rebasing tokens",
      "description": "A rebasing token is an asset whose supply is algorithmically adjusted to control its price. Examples of such tokens include YAM, RMPL, and BASED.\n\nIf any of these tokens are used in the following contracts, the rewards will accumulate within the contract holding the tokens, making them inaccessible for withdrawal by the original depositor.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n685: \t\t    function liquidate(LiquidateParams calldata params) external override returns (uint256 amount0, uint256 amount1) {\n686: \t\t        // liquidation is not allowed during transformer mode\n687: \t\t        if (transformedTokenId > 0) {\n688: \t\t            revert TransformNotAllowed();\n689: \t\t        }\n690: \t\t\n691: \t\t        LiquidateState memory state;\n692: \t\t\n693: \t\t        (state.newDebtExchangeRateX96, state.newLendExchangeRateX96) = _updateGlobalInterest();\n694: \t\t\n695: \t\t        uint256 debtShares = loans[params.tokenId].debtShares;\n696: \t\t        if (debtShares != params.debtShares) {\n697: \t\t            revert DebtChanged();\n698: \t\t        }\n699: \t\t\n700: \t\t        state.debt = _convertToAssets(debtShares, state.newDebtExchangeRateX96, Math.Rounding.Up);\n701: \t\t\n702: \t\t        (state.isHealthy, state.fullValue, state.collateralValue, state.feeValue) =\n703: \t\t            _checkLoanIsHealthy(params.tokenId, state.debt);\n704: \t\t        if (state.isHealthy) {\n705: \t\t            revert NotLiquidatable();\n706: \t\t        }\n707: \t\t\n708: \t\t        (state.liquidationValue, state.liquidatorCost, state.reserveCost) =\n709: \t\t            _calculateLiquidation(state.debt, state.fullValue, state.collateralValue);\n710: \t\t\n711: \t\t        // calculate reserve (before transfering liquidation money - otherwise calculation is off)\n712: \t\t        if (state.reserveCost > 0) {\n713: \t\t            state.missing =\n714: \t\t                _handleReserveLiquidation(state.reserveCost, state.newDebtExchangeRateX96, state.newLendExchangeRateX96);\n715: \t\t        }\n716: \t\t\n717: \t\t        if (params.permitData.length > 0) {\n718: \t\t            (ISignatureTransfer.PermitTransferFrom memory permit, bytes memory signature) =\n719: \t\t                abi.decode(params.permitData, (ISignatureTransfer.PermitTransferFrom, bytes));\n720: \t\t            permit2.permitTransferFrom(\n721: \t\t                permit,\n722: \t\t                ISignatureTransfer.SignatureTransferDetails(address(this), state.liquidatorCost),\n723: \t\t                msg.sender,\n724: \t\t                signature\n725: \t\t            );\n726: \t\t        } else {\n727: \t\t            // take value from liquidator\n728: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), state.liquidatorCost);\n729: \t\t        }\n730: \t\t\n731: \t\t        debtSharesTotal -= debtShares;\n732: \t\t\n733: \t\t        // send promised collateral tokens to liquidator\n734: \t\t        (amount0, amount1) =\n735: \t\t            _sendPositionValue(params.tokenId, state.liquidationValue, state.fullValue, state.feeValue, msg.sender);\n736: \t\t\n737: \t\t        if (amount0 < params.amount0Min || amount1 < params.amount1Min) {\n738: \t\t            revert SlippageError();\n739: \t\t        }\n740: \t\t\n741: \t\t        address owner = tokenOwner[params.tokenId];\n742: \t\t\n743: \t\t        // disarm loan and send remaining position to owner\n744: \t\t        _cleanupLoan(params.tokenId, state.newDebtExchangeRateX96, state.newLendExchangeRateX96, owner);\n745: \t\t\n746: \t\t        emit Liquidate(\n747: \t\t            params.tokenId,\n748: \t\t            msg.sender,\n749: \t\t            owner,\n750: \t\t            state.fullValue,\n751: \t\t            state.liquidatorCost,\n752: \t\t            amount0,\n753: \t\t            amount1,\n754: \t\t            state.reserveCost,\n755: \t\t            state.missing\n756: \t\t        );\n757: \t\t    }\n\n877: \t\t    function _deposit(address receiver, uint256 amount, bool isShare, bytes memory permitData)\n878: \t\t        internal\n879: \t\t        returns (uint256 assets, uint256 shares)\n880: \t\t    {\n881: \t\t        (, uint256 newLendExchangeRateX96) = _updateGlobalInterest();\n882: \t\t\n883: \t\t        _resetDailyLendIncreaseLimit(newLendExchangeRateX96, false);\n884: \t\t\n885: \t\t        if (isShare) {\n886: \t\t            shares = amount;\n887: \t\t            assets = _convertToAssets(shares, newLendExchangeRateX96, Math.Rounding.Up);\n888: \t\t        } else {\n889: \t\t            assets = amount;\n890: \t\t            shares = _convertToShares(assets, newLendExchangeRateX96, Math.Rounding.Down);\n891: \t\t        }\n892: \t\t\n893: \t\t        if (permitData.length > 0) {\n894: \t\t            (ISignatureTransfer.PermitTransferFrom memory permit, bytes memory signature) =\n895: \t\t                abi.decode(permitData, (ISignatureTransfer.PermitTransferFrom, bytes));\n896: \t\t            permit2.permitTransferFrom(\n897: \t\t                permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n898: \t\t            );\n899: \t\t        } else {\n900: \t\t            // fails if not enough token approved\n901: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n902: \t\t        }\n903: \t\t\n904: \t\t        _mint(receiver, shares);\n905: \t\t\n906: \t\t        if (totalSupply() > globalLendLimit) {\n907: \t\t            revert GlobalLendLimit();\n908: \t\t        }\n909: \t\t\n910: \t\t        if (assets > dailyLendIncreaseLimitLeft) {\n911: \t\t            revert DailyLendIncreaseLimit();\n912: \t\t        } else {\n913: \t\t            dailyLendIncreaseLimitLeft -= assets;\n914: \t\t        }\n915: \t\t\n916: \t\t        emit Deposit(msg.sender, receiver, assets, shares);\n917: \t\t    }\n\n954: \t\t    function _repay(uint256 tokenId, uint256 amount, bool isShare, bytes memory permitData) internal {\n955: \t\t        (uint256 newDebtExchangeRateX96, uint256 newLendExchangeRateX96) = _updateGlobalInterest();\n956: \t\t\n957: \t\t        Loan storage loan = loans[tokenId];\n958: \t\t\n959: \t\t        uint256 currentShares = loan.debtShares;\n960: \t\t\n961: \t\t        uint256 shares;\n962: \t\t        uint256 assets;\n963: \t\t\n964: \t\t        if (isShare) {\n965: \t\t            shares = amount;\n966: \t\t            assets = _convertToAssets(amount, newDebtExchangeRateX96, Math.Rounding.Up);\n967: \t\t        } else {\n968: \t\t            assets = amount;\n969: \t\t            shares = _convertToShares(amount, newDebtExchangeRateX96, Math.Rounding.Down);\n970: \t\t        }\n971: \t\t\n972: \t\t        // fails if too much repayed\n973: \t\t        if (shares > currentShares) {\n974: \t\t            revert RepayExceedsDebt();\n975: \t\t        }\n976: \t\t\n977: \t\t        if (assets > 0) {\n978: \t\t            if (permitData.length > 0) {\n979: \t\t                (ISignatureTransfer.PermitTransferFrom memory permit, bytes memory signature) =\n980: \t\t                    abi.decode(permitData, (ISignatureTransfer.PermitTransferFrom, bytes));\n981: \t\t                permit2.permitTransferFrom(\n982: \t\t                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n983: \t\t                );\n984: \t\t            } else {\n985: \t\t                // fails if not enough token approved\n986: \t\t                SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n987: \t\t            }\n988: \t\t        }\n989: \t\t\n990: \t\t        uint256 loanDebtShares = loan.debtShares - shares;\n991: \t\t        loan.debtShares = loanDebtShares;\n992: \t\t        debtSharesTotal -= shares;\n993: \t\t\n994: \t\t        // when amounts are repayed - they maybe borrowed again\n995: \t\t        dailyDebtIncreaseLimitLeft += assets;\n996: \t\t\n997: \t\t        _updateAndCheckCollateral(\n998: \t\t            tokenId, newDebtExchangeRateX96, newLendExchangeRateX96, loanDebtShares + shares, loanDebtShares\n999: \t\t        );\n1000: \t\t\n1001: \t\t        address owner = tokenOwner[tokenId];\n1002: \t\t\n1003: \t\t        // if fully repayed\n1004: \t\t        if (currentShares == shares) {\n1005: \t\t            _cleanupLoan(tokenId, newDebtExchangeRateX96, newLendExchangeRateX96, owner);\n1006: \t\t        } else {\n1007: \t\t            // if resulting loan is too small - revert\n1008: \t\t            if (_convertToAssets(loanDebtShares, newDebtExchangeRateX96, Math.Rounding.Up) < minLoanSize) {\n1009: \t\t                revert MinLoanSize();\n1010: \t\t            }\n1011: \t\t        }\n1012: \t\t\n1013: \t\t        emit Repay(tokenId, msg.sender, owner, assets, shares);\n1014: \t\t    }\n```",
          "loc": [
            "[685-757](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L685-L757)",
            "[877-917](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L877-L917)",
            "[954-1014](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L954-L1014)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n566: \t\t    function _prepareAddApproved(\n567: \t\t        IERC20 token0,\n568: \t\t        IERC20 token1,\n569: \t\t        IERC20 otherToken,\n570: \t\t        uint256 amount0,\n571: \t\t        uint256 amount1,\n572: \t\t        uint256 amountOther\n573: \t\t    ) internal {\n574: \t\t        (uint256 needed0, uint256 needed1, uint256 neededOther) =\n575: \t\t            _prepareAdd(token0, token1, otherToken, amount0, amount1, amountOther);\n576: \t\t\n577: \t\t        if (needed0 > 0) {\n578: \t\t            SafeERC20.safeTransferFrom(token0, msg.sender, address(this), needed0);\n579: \t\t        }\n580: \t\t        if (needed1 > 0) {\n581: \t\t            SafeERC20.safeTransferFrom(token1, msg.sender, address(this), needed1);\n582: \t\t        }\n583: \t\t        if (neededOther > 0) {\n584: \t\t            SafeERC20.safeTransferFrom(otherToken, msg.sender, address(this), neededOther);\n585: \t\t        }\n586: \t\t    }\n```",
          "loc": [
            "[566-586](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L566-L586)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Custom `error` should be used rather than `require`/`assert`",
      "description": "Custom errors are available from solidity version 0.8.4. Custom errors are more easily processed in try-catch blocks, and are easier to re-use and maintain.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n244: \t\t        require(_totalRewardX64 <= totalRewardX64, \">totalRewardX64\");\n\n269: \t\t        require(amount <= balance, \"amount>balance\");\n```",
          "loc": [
            "[244](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L244)",
            "[269](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L269)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n157: \t\t        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n```",
          "loc": [
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L157)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "High cyclomatic complexity",
      "description": "Consider breaking down these blocks into more manageable units, by splitting things into utility functions, by reducing nesting, and by using early returns.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n272: \t\t    function _getReferenceTokenPriceX96(address token, uint256 cachedChainlinkReferencePriceX96)\n```",
          "loc": [
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L272)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n550: \t\t    function borrow(uint256 tokenId, uint256 assets) external override {\n\n685: \t\t    function liquidate(LiquidateParams calldata params) external override returns (uint256 amount0, uint256 amount1) {\n\n954: \t\t    function _repay(uint256 tokenId, uint256 amount, bool isShare, bytes memory permitData) internal {\n```",
          "loc": [
            "[550](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L550)",
            "[685](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L685)",
            "[954](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L954)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n100: \t\t    function execute(ExecuteParams calldata params) external {\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L100)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n101: \t\t    function execute(ExecuteParams calldata params) external nonReentrant {\n```",
          "loc": [
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L101)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n111: \t\t    function execute(ExecuteParams calldata params) external {\n```",
          "loc": [
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L111)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n40: \t\t    function leverageUp(LeverageUpParams calldata params) external {\n\n123: \t\t    function leverageDown(LeverageDownParams calldata params) external {\n```",
          "loc": [
            "[40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L40)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L123)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n115: \t\t    function execute(uint256 tokenId, Instructions memory instructions) public returns (uint256 newTokenId) {\n\n598: \t\t    function _prepareAddPermit2(\n\n779: \t\t    function _swapAndPrepareAmounts(SwapAndMintParams memory params, bool unwrap)\n```",
          "loc": [
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L115)",
            "[598](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L598)",
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L779)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing events in sensitive functions",
      "description": "Events should be emitted when sensitive changes are made to the contracts, but some functions lack them.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n1205: \t\t    function _updateAndCheckCollateral(\n1206: \t\t        uint256 tokenId,\n1207: \t\t        uint256 debtExchangeRateX96,\n1208: \t\t        uint256 lendExchangeRateX96,\n1209: \t\t        uint256 oldShares,\n1210: \t\t        uint256 newShares\n1211: \t\t    ) internal {\n1212: \t\t        if (oldShares != newShares) {\n1213: \t\t            (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(tokenId);\n1214: \t\t\n1215: \t\t            // remove previous collateral - add new collateral\n1216: \t\t            if (oldShares > newShares) {\n1217: \t\t                tokenConfigs[token0].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n1218: \t\t                tokenConfigs[token1].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n1219: \t\t            } else {\n1220: \t\t                tokenConfigs[token0].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n1221: \t\t                tokenConfigs[token1].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n1222: \t\t\n1223: \t\t                // check if current value of used collateral is more than allowed limit\n1224: \t\t                // if collateral is decreased - never revert\n1225: \t\t                uint256 lentAssets = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Up);\n1226: \t\t                uint256 collateralValueLimitFactorX32 = tokenConfigs[token0].collateralValueLimitFactorX32;\n1227: \t\t                if (\n1228: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n1229: \t\t                        && _convertToAssets(tokenConfigs[token0].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1230: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n1231: \t\t                ) {\n1232: \t\t                    revert CollateralValueLimit();\n1233: \t\t                }\n1234: \t\t                collateralValueLimitFactorX32 = tokenConfigs[token1].collateralValueLimitFactorX32;\n1235: \t\t                if (\n1236: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n1237: \t\t                        && _convertToAssets(tokenConfigs[token1].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1238: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n1239: \t\t                ) {\n1240: \t\t                    revert CollateralValueLimit();\n1241: \t\t                }\n1242: \t\t            }\n1243: \t\t        }\n1244: \t\t    }\n```",
          "loc": [
            "[1205-1244](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1205-L1244)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing events in initializers",
      "description": "As a best practice, consider emitting an event when the contract is initialized. In this way, it's easy for the user to track the exact point in time when the contract was initialized, by filtering the emitted events.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n395: \t\t    function _initializeState(uint256 tokenId) internal view returns (PositionState memory state) {\n```",
          "loc": [
            "[395](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L395)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider emitting an event at the end of the constructor",
      "description": "This will allow users to easily exactly pinpoint when and by whom a contract was constructed.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n33: \t\t    constructor(\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n74: \t\t    constructor(\n```",
          "loc": [
            "[74](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L74)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n169: \t\t    constructor(\n```",
          "loc": [
            "[169](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L169)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n33: \t\t    constructor(\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n41: \t\t    constructor(\n```",
          "loc": [
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L41)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n37: \t\t    constructor(\n```",
          "loc": [
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L37)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n25: \t\t    constructor(\n```",
          "loc": [
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L25)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n13: \t\t    constructor(INonfungiblePositionManager _nonfungiblePositionManager, address _zeroxRouter, address _universalRouter)\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n31: \t\t    constructor(\n```",
          "loc": [
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L31)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n24: \t\t    constructor(INonfungiblePositionManager _nonfungiblePositionManager, address _zeroxRouter, address _universalRouter)\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n37: \t\t    constructor(\n```",
          "loc": [
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L37)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Setters should prevent re-setting the same value",
      "description": "Not only is wasteful in terms of gas, but this is especially problematic when an event is emitted and the old and new values set are the same, as listeners might not expect this kind of scenario.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit baseRatePerSecondX96, multiplierPerSecondX96, jumpMultiplierPerSecondX96, kinkX96\n82: \t\t    function setValues(\n```",
          "loc": [
            "[82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L82)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit maxPoolPriceDifference\n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n// @audit feedConfigs\n201: \t\t    function setTokenConfig(\n\n// @audit emergencyAdmin\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)",
            "[201](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201)",
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit transformerAllowList\n788: \t\t    function setTransformer(address transformer, bool active) external onlyOwner {\n\n// @audit minLoanSize, globalLendLimit, globalDebtLimit, dailyLendIncreaseLimitMin, dailyDebtIncreaseLimitMin\n807: \t\t    function setLimits(\n\n// @audit reserveFactorX32\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n// @audit reserveProtectionFactorX32\n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n// @audit emergencyAdmin\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n\n// @audit lastDebtExchangeRateX96, lastLendExchangeRateX96, lastExchangeRateUpdate\n1150: \t\t    function _updateGlobalInterest()\n```",
          "loc": [
            "[788](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L788)",
            "[807](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L807)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[870](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870)",
            "[1150](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1150)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit withdrawer\n59: \t\t    function setWithdrawer(address _withdrawer) public onlyOwner {\n\n// @audit operators\n69: \t\t    function setOperator(address _operator, bool _active) public onlyOwner {\n\n// @audit vaults\n79: \t\t    function setVault(address _vault, bool _active) public onlyOwner {\n\n// @audit TWAPSeconds, maxTWAPTickDifference\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L59)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L69)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L79)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit totalRewardX64\n243: \t\t    function setReward(uint64 _totalRewardX64) external onlyOwner {\n\n// @audit positionBalances\n254: \t\t    function _setBalance(uint256 tokenId, address token, uint256 amount) internal {\n```",
          "loc": [
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L243)",
            "[254](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L254)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Using zero as a parameter",
      "description": "Taking zero as a valid argument without checks can lead to severe security issues in some cases.\n\nIf using a zero argument is mandatory, consider using descriptive constants or an enum instead of passing zero directly on function calls, as that might be error-prone, to fully describe the caller's intention.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n135: \t\t        uint256 priceX96 = _getReferencePoolPriceX96(pool, 0);\n\n235: \t\t            config = TokenConfig(\n236: \t\t                feed, maxFeedAge, feedDecimals, tokenDecimals, IUniswapV3Pool(address(0)), false, 0, Mode.CHAINLINK, 0\n237: \t\t            );\n```",
          "loc": [
            "[135](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L135)",
            "[235-237](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L235-L237)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n446: \t\t            loans[tokenId] = Loan(0);\n\n449: \t\t            emit Add(tokenId, owner, 0);\n\n470: \t\t                _updateAndCheckCollateral(\n471: \t\t                    tokenId, debtExchangeRateX96, lendExchangeRateX96, 0, loans[tokenId].debtShares\n472: \t\t                );\n\n1066: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(tokenId, liquidity, 0, 0, block.timestamp)\n\n1081: \t\t        _updateAndCheckCollateral(tokenId, debtExchangeRateX96, lendExchangeRateX96, loans[tokenId].debtShares, 0);\n```",
          "loc": [
            "[446](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L446)",
            "[449](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L449)",
            "[470-472](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L470-L472)",
            "[1066](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1066)",
            "[1081](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1081)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n208: \t\t        emit PositionConfigured(params.tokenId, false, false, false, 0, 0, 0, 0, false, 0);\n```",
          "loc": [
            "[208](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L208)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n143: \t\t                        Swapper.PoolSwapParams(\n144: \t\t                            pool, IERC20(state.token0), IERC20(state.token1), state.fee, params.swap0To1, amountIn, 0\n145: \t\t                        )\n\n164: \t\t                    INonfungiblePositionManager.IncreaseLiquidityParams(\n165: \t\t                        params.tokenId, state.maxAddAmount0, state.maxAddAmount1, 0, 0, block.timestamp\n166: \t\t                    )\n\n179: \t\t            _increaseBalance(0, state.token0, state.amount0Fees);\n\n180: \t\t            _increaseBalance(0, state.token1, state.amount1Fees);\n\n235: \t\t            _withdrawBalanceInternal(0, tokens[i], to, balance, balance);\n```",
          "loc": [
            "[235](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L235)",
            "[143-145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L143-L145)",
            "[164-166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L164-L166)",
            "[179](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L179)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L180)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n198: \t\t            INonfungiblePositionManager.MintParams memory mintParams = INonfungiblePositionManager.MintParams(\n199: \t\t                address(state.token0),\n200: \t\t                address(state.token1),\n201: \t\t                state.fee,\n202: \t\t                SafeCast.toInt24(baseTick + config.lowerTickDelta), // reverts if out of valid range\n203: \t\t                SafeCast.toInt24(baseTick + config.upperTickDelta), // reverts if out of valid range\n204: \t\t                state.maxAddAmount0,\n205: \t\t                state.maxAddAmount1,\n206: \t\t                0,\n207: \t\t                0,\n208: \t\t                address(this), // is sent to real recipient aftwards\n209: \t\t                params.deadline\n210: \t\t            );\n\n220: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), 0);\n\n221: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), 0);\n\n266: \t\t            emit PositionConfigured(params.tokenId, 0, 0, 0, 0, 0, 0, false, 0);\n```",
          "loc": [
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L221)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L266)",
            "[198-210](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L198-L210)",
            "[220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L220)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n149: \t\t                    SwapAndIncreaseLiquidityParams(\n150: \t\t                        tokenId,\n151: \t\t                        amount0,\n152: \t\t                        amount1,\n153: \t\t                        instructions.recipient,\n154: \t\t                        instructions.deadline,\n155: \t\t                        IERC20(token1),\n156: \t\t                        instructions.amountIn1,\n157: \t\t                        instructions.amountOut1Min,\n158: \t\t                        instructions.swapData1,\n159: \t\t                        0,\n160: \t\t                        0,\n161: \t\t                        \"\",\n162: \t\t                        instructions.amountAddMin0,\n163: \t\t                        instructions.amountAddMin1,\n164: \t\t                        \"\"\n165: \t\t                    ),\n\n172: \t\t                    SwapAndIncreaseLiquidityParams(\n173: \t\t                        tokenId,\n174: \t\t                        amount0,\n175: \t\t                        amount1,\n176: \t\t                        instructions.recipient,\n177: \t\t                        instructions.deadline,\n178: \t\t                        IERC20(token0),\n179: \t\t                        0,\n180: \t\t                        0,\n181: \t\t                        \"\",\n182: \t\t                        instructions.amountIn0,\n183: \t\t                        instructions.amountOut0Min,\n184: \t\t                        instructions.swapData0,\n185: \t\t                        instructions.amountAddMin0,\n186: \t\t                        instructions.amountAddMin1,\n187: \t\t                        \"\"\n188: \t\t                    ),\n\n196: \t\t                    SwapAndIncreaseLiquidityParams(\n197: \t\t                        tokenId,\n198: \t\t                        amount0,\n199: \t\t                        amount1,\n200: \t\t                        instructions.recipient,\n201: \t\t                        instructions.deadline,\n202: \t\t                        IERC20(address(0)),\n203: \t\t                        0,\n204: \t\t                        0,\n205: \t\t                        \"\",\n206: \t\t                        0,\n207: \t\t                        0,\n208: \t\t                        \"\",\n209: \t\t                        instructions.amountAddMin0,\n210: \t\t                        instructions.amountAddMin1,\n211: \t\t                        \"\"\n212: \t\t                    ),\n\n222: \t\t                    SwapAndMintParams(\n223: \t\t                        IERC20(token0),\n224: \t\t                        IERC20(token1),\n225: \t\t                        instructions.fee,\n226: \t\t                        instructions.tickLower,\n227: \t\t                        instructions.tickUpper,\n228: \t\t                        amount0,\n229: \t\t                        amount1,\n230: \t\t                        instructions.recipient,\n231: \t\t                        instructions.recipientNFT,\n232: \t\t                        instructions.deadline,\n233: \t\t                        IERC20(token1),\n234: \t\t                        instructions.amountIn1,\n235: \t\t                        instructions.amountOut1Min,\n236: \t\t                        instructions.swapData1,\n237: \t\t                        0,\n238: \t\t                        0,\n239: \t\t                        \"\",\n240: \t\t                        instructions.amountAddMin0,\n241: \t\t                        instructions.amountAddMin1,\n242: \t\t                        instructions.swapAndMintReturnData,\n243: \t\t                        \"\"\n244: \t\t                    ),\n\n249: \t\t                    SwapAndMintParams(\n250: \t\t                        IERC20(token0),\n251: \t\t                        IERC20(token1),\n252: \t\t                        instructions.fee,\n253: \t\t                        instructions.tickLower,\n254: \t\t                        instructions.tickUpper,\n255: \t\t                        amount0,\n256: \t\t                        amount1,\n257: \t\t                        instructions.recipient,\n258: \t\t                        instructions.recipientNFT,\n259: \t\t                        instructions.deadline,\n260: \t\t                        IERC20(token0),\n261: \t\t                        0,\n262: \t\t                        0,\n263: \t\t                        \"\",\n264: \t\t                        instructions.amountIn0,\n265: \t\t                        instructions.amountOut0Min,\n266: \t\t                        instructions.swapData0,\n267: \t\t                        instructions.amountAddMin0,\n268: \t\t                        instructions.amountAddMin1,\n269: \t\t                        instructions.swapAndMintReturnData,\n270: \t\t                        \"\"\n271: \t\t                    ),\n\n277: \t\t                    SwapAndMintParams(\n278: \t\t                        IERC20(token0),\n279: \t\t                        IERC20(token1),\n280: \t\t                        instructions.fee,\n281: \t\t                        instructions.tickLower,\n282: \t\t                        instructions.tickUpper,\n283: \t\t                        amount0,\n284: \t\t                        amount1,\n285: \t\t                        instructions.recipient,\n286: \t\t                        instructions.recipientNFT,\n287: \t\t                        instructions.deadline,\n288: \t\t                        IERC20(address(0)),\n289: \t\t                        0,\n290: \t\t                        0,\n291: \t\t                        \"\",\n292: \t\t                        0,\n293: \t\t                        0,\n294: \t\t                        \"\",\n295: \t\t                        instructions.amountAddMin0,\n296: \t\t                        instructions.amountAddMin1,\n297: \t\t                        instructions.swapAndMintReturnData,\n298: \t\t                        \"\"\n299: \t\t                    ),\n\n405: \t\t            _prepareAddPermit2(\n406: \t\t                params.tokenIn, IERC20(address(0)), IERC20(address(0)), params.amountIn, 0, 0, pbtf, signature\n407: \t\t            );\n\n409: \t\t            _prepareAddApproved(params.tokenIn, IERC20(address(0)), IERC20(address(0)), params.amountIn, 0, 0);\n\n740: \t\t            SwapAndMintParams(\n741: \t\t                token0,\n742: \t\t                token1,\n743: \t\t                0,\n744: \t\t                0,\n745: \t\t                0,\n746: \t\t                params.amount0,\n747: \t\t                params.amount1,\n748: \t\t                params.recipient,\n749: \t\t                params.recipient,\n750: \t\t                params.deadline,\n751: \t\t                params.swapSourceToken,\n752: \t\t                params.amountIn0,\n753: \t\t                params.amountOut0Min,\n754: \t\t                params.swapData0,\n755: \t\t                params.amountIn1,\n756: \t\t                params.amountOut1Min,\n757: \t\t                params.swapData1,\n758: \t\t                params.amountAddMin0,\n759: \t\t                params.amountAddMin1,\n760: \t\t                \"\",\n761: \t\t                params.permitData\n762: \t\t            ),\n\n831: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), 0);\n\n835: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), 0);\n```",
          "loc": [
            "[222-244](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L222-L244)",
            "[249-271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L249-L271)",
            "[277-299](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L277-L299)",
            "[405-407](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L405-L407)",
            "[409](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L409)",
            "[740-762](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L740-L762)",
            "[835](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L835)",
            "[831](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L831)",
            "[149-165](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L149-L165)",
            "[172-188](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L172-L188)",
            "[196-212](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L196-L212)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n58: \t\t                RouterSwapParams(IERC20(token0), IERC20(asset), params.amount0In, 0, params.swapData0),\n\n59: \t\t                RouterSwapParams(IERC20(token1), IERC20(asset), params.amount1In, 0, params.swapData1),\n\n78: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), 0);\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L59)",
            "[58](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L58)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L78)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n94: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, 0);\n```",
          "loc": [
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L94)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Named imports of parent contracts are missing",
      "description": "Parent contracts should use [named imports](https://docs.soliditylang.org/en/latest/layout-of-source-files.html#syntax-and-semantics) to improve the code readability.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit Ownable, IInterestRateModel, IErrors\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit IV3Oracle, Ownable, IErrors\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit Automator\n10: \t\tcontract AutoExit is Automator {\n```",
          "loc": [
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit Swapper, Ownable\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit Automator, Multicall, ReentrancyGuard\n16: \t\tcontract AutoCompound is Automator, Multicall, ReentrancyGuard {\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit Automator\n11: \t\tcontract AutoRange is Automator {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n// @audit Swapper\n12: \t\tcontract LeverageTransformer is Swapper {\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit Swapper, IERC721Receiver\n15: \t\tcontract V3Utils is Swapper, IERC721Receiver {\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n// @audit Swapper, IUniswapV3FlashCallback\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit IUniswapV3SwapCallback, IErrors\n17: \t\tabstract contract Swapper is IUniswapV3SwapCallback, IErrors {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unused named `return`",
      "description": "Declaring named returns, but not using them, is confusing to the reader. Consider either completely removing them (by declaring just the type without a name), or remove the return statement and do a variable assignment.\n\nThis would improve the readability of the code, and it may also help reduce regressions during future code refactors.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n258: \t\t    function ownerOf(uint256 tokenId) external view override returns (address owner) {\n259: \t\t        return tokenOwner[tokenId];\n\n289: \t\t    function convertToShares(uint256 assets) external view override returns (uint256 shares) {\n\n291: \t\t        return _convertToShares(assets, lendExchangeRateX96, Math.Rounding.Down);\n\n295: \t\t    function convertToAssets(uint256 shares) external view override returns (uint256 assets) {\n\n297: \t\t        return _convertToAssets(shares, lendExchangeRateX96, Math.Rounding.Down);\n\n500: \t\t        returns (uint256 newTokenId)\n\n544: \t\t        return tokenId;\n```",
          "loc": [
            "[289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L289)",
            "[258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L258)",
            "[295](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L295)",
            "[500](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L500)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n100: \t\t        returns (uint256 newTokenId)\n\n107: \t\t        return execute(tokenId, instructions);\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L100)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "OpenZeppelin libraries should be upgraded to a newer version",
      "description": "These contracts import some OpenZeppelin libraries, but they are using an old version.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L15)",
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L14)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n12: \t\timport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n13: \t\timport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n16: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n17: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n18: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L15)",
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L16)",
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L17)",
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L18)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L13)",
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L12)",
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L14)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n```",
          "loc": [
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L6)",
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n4: \t\timport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L6)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n4: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L4)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Same `constant` is redefined elsewhere",
      "description": "Keeping the same constants in different files may cause some problems, as the values could become out of sync when only one location is updated; reading constants from a single file is preferable. This should also be preferred for gas optimizations.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit seen in src/V3Oracle.sol, src/V3Vault.sol, src/automators/Automator.sol\n12: \t\t    uint256 private constant Q96 = 2 ** 96;\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit seen in src/InterestRateModel.sol, src/V3Vault.sol, src/automators/Automator.sol\n27: \t\t    uint256 private constant Q96 = 2 ** 96;\n\n// @audit seen in src/V3Vault.sol, src/utils/Swapper.sol\n58: \t\t    address public immutable factory;\n\n// @audit seen in src/V3Vault.sol, src/utils/Swapper.sol\n59: \t\t    INonfungiblePositionManager public immutable nonfungiblePositionManager;\n```",
          "loc": [
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L27)",
            "[58](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L58)",
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L59)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit seen in src/InterestRateModel.sol, src/V3Oracle.sol, src/automators/Automator.sol\n34: \t\t    uint256 private constant Q96 = 2 ** 96;\n\n// @audit seen in src/V3Oracle.sol, src/utils/Swapper.sol\n50: \t\t    IUniswapV3Factory public immutable factory;\n\n// @audit seen in src/V3Oracle.sol, src/utils/Swapper.sol\n47: \t\t    INonfungiblePositionManager public immutable nonfungiblePositionManager;\n\n// @audit seen in src/transformers/V3Utils.sol\n59: \t\t    IPermit2 public immutable permit2;\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L59)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L34)",
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L50)",
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L47)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit seen in src/InterestRateModel.sol, src/V3Oracle.sol, src/V3Vault.sol\n21: \t\t    uint256 internal constant Q96 = 2 ** 96;\n```",
          "loc": [
            "[21](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L21)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit seen in src/V3Vault.sol\n19: \t\t    IPermit2 public immutable permit2;\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit seen in src/V3Oracle.sol, src/V3Vault.sol\n23: \t\t    address public immutable factory;\n\n// @audit seen in src/V3Oracle.sol, src/V3Vault.sol\n26: \t\t    INonfungiblePositionManager public immutable nonfungiblePositionManager;\n```",
          "loc": [
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L23)",
            "[26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L26)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Enum values should be used in place of constant array indexes",
      "description": "Consider using an enum instead of hardcoding an index access to make the code easier to understand.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n366: \t\t            secondsAgos[0] = 0; // from (before)\n\n367: \t\t            secondsAgos[1] = twapSeconds; // from (before)\n\n369: \t\t            int24 tick = int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapSeconds)));\n\n369: \t\t            int24 tick = int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapSeconds)));\n```",
          "loc": [
            "[366](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L366)",
            "[367](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L367)",
            "[369](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L369)",
            "[369](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L369)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n182: \t\t        secondsAgos[0] = 0; // from (before)\n\n183: \t\t        secondsAgos[1] = twapPeriod; // from (before)\n\n187: \t\t            return (int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapPeriod))), true);\n\n187: \t\t            return (int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapPeriod))), true);\n```",
          "loc": [
            "[182](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L182)",
            "[183](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L183)",
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L187)",
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L187)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n234: \t\t            uint256 balance = positionBalances[0][tokens[i]];\n```",
          "loc": [
            "[234](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L234)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Variable initialization with zero value",
      "description": "It's not necessary to initialize a variable with a zero value, as it's the default behaviour, and it's actually worse in gas terms as it adds an overhead.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n118: \t\t    uint32 public reserveFactorX32 = 0;\n\n124: \t\t    uint256 public debtSharesTotal = 0;\n\n127: \t\t    uint256 public lastExchangeRateUpdate = 0;\n\n131: \t\t    uint256 public globalDebtLimit = 0;\n\n132: \t\t    uint256 public globalLendLimit = 0;\n\n135: \t\t    uint256 public minLoanSize = 0;\n\n138: \t\t    uint256 public dailyLendIncreaseLimitMin = 0;\n\n139: \t\t    uint256 public dailyLendIncreaseLimitLeft = 0;\n\n140: \t\t    uint256 public dailyLendIncreaseLimitLastReset = 0;\n\n143: \t\t    uint256 public dailyDebtIncreaseLimitMin = 0;\n\n144: \t\t    uint256 public dailyDebtIncreaseLimitLeft = 0;\n\n145: \t\t    uint256 public dailyDebtIncreaseLimitLastReset = 0;\n\n161: \t\t    uint256 private transformedTokenId = 0; // transient storage (when available in dencun)\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L118)",
            "[124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L124)",
            "[127](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L127)",
            "[131](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L131)",
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L132)",
            "[135](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L135)",
            "[138](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L138)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L139)",
            "[140](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L140)",
            "[143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L143)",
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L145)",
            "[161](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L161)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding emergency-stop functionality",
      "description": "Consider adding `pausable` to the following contracts so it's possible to stop them in case of an emergency.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Duplicated `require/if` statements should be refactored",
      "description": "These statements should be refactored to a separate function, as there are multiple parts of the codebase that use the same logic, to improve the code readability and reduce code duplication.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit this if condition is duplicated on line 255\n211: \t\t        if (mode == Mode.NOT_SET) {\n212: \t\t            revert InvalidConfig();\n213: \t\t        }\n```",
          "loc": [
            "[211-213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L211-L213)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit this if condition is duplicated on line 687\n615: \t\t        if (transformedTokenId > 0) {\n616: \t\t            revert TransformNotAllowed();\n617: \t\t        }\n```",
          "loc": [
            "[615-617](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L615-L617)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit this if condition is duplicated on line 124\n105: \t\t        if (msg.sender != withdrawer) {\n106: \t\t            revert Unauthorized();\n107: \t\t        }\n\n// @audit this if condition is duplicated on line 222\n131: \t\t            if (!sent) {\n132: \t\t                revert EtherSendFailed();\n133: \t\t            }\n```",
          "loc": [
            "[105-107](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L105-L107)",
            "[131-133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L131-L133)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit this if condition is duplicated on line 149\n111: \t\t            if (amountOutDelta < params.amountOutMin) {\n112: \t\t                revert SlippageError();\n113: \t\t            }\n```",
          "loc": [
            "[111-113](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L111-L113)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Inconsistent usage of `require`/`error`",
      "description": "Some parts of the codebase use `require` statements, while others use custom `error`s. Consider refactoring the code to use the same approach: the following findings represent the minority of `require` vs `error`, and they show the first occurance in each file, for brevity.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n244: \t\t        require(_totalRewardX64 <= totalRewardX64, \">totalRewardX64\");\n```",
          "loc": [
            "[244](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L244)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n157: \t\t        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n```",
          "loc": [
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L157)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Some functions contain the same exact logic",
      "description": "These functions might be a problem if the logic changes before the contract is deployed, as the developer must remember to syncronize the logic between all the function instances.\n\nConsider using a single function instead of duplicating the code, for example by using a `library`, or through inheritance.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit duplicated logic in src/V3Oracle.sol -> setEmergencyAdmin, src/V3Vault.sol -> setEmergencyAdmin\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit duplicated logic in src/V3Oracle.sol -> setEmergencyAdmin, src/V3Vault.sol -> setEmergencyAdmin\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[870](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit duplicated logic in src/automators/Automator.sol -> _transferToken, src/transformers/V3Utils.sol -> _transferToken\n218: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n```",
          "loc": [
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L218)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit duplicated logic in src/automators/Automator.sol -> _transferToken, src/transformers/V3Utils.sol -> _transferToken\n864: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n```",
          "loc": [
            "[864](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L864)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unbounded loop may run out of gas",
      "description": "Consider limiting the number of iterations in loops with an explicit revert reason to avoid iterating an array that is too large.\n\nThe function would eventually revert if out of gas anyway, but by limiting it the user avoids wasting too much gas, as the loop doesn't execute if an excessive value is provided.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n111: \t\t        for (; i < count; ++i) {\n112: \t\t            uint256 balance = IERC20(tokens[i]).balanceOf(address(this));\n113: \t\t            if (balance > 0) {\n114: \t\t                _transferToken(to, IERC20(tokens[i]), balance, true);\n115: \t\t            }\n116: \t\t        }\n```",
          "loc": [
            "[111-116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L111-L116)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n233: \t\t        for (; i < count; ++i) {\n234: \t\t            uint256 balance = positionBalances[0][tokens[i]];\n235: \t\t            _withdrawBalanceInternal(0, tokens[i], to, balance, balance);\n236: \t\t        }\n```",
          "loc": [
            "[233-236](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L233-L236)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Public functions not called internally",
      "description": "Those functions should be declared as `external` instead of `public`, as they are never called internally by the contract.\n\nContracts are allowed to override their parents' functions and change the visibility from external to public.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n79: \t\t    function setVault(address _vault, bool _active) public onlyOwner {\n```",
          "loc": [
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L79)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n98: \t\t    function executeWithPermit(uint256 tokenId, Instructions memory instructions, uint8 v, bytes32 r, bytes32 s)\n```",
          "loc": [
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L98)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large multiples of ten should use scientific notation",
      "description": "Use a scientific notation rather than decimal literals (e.g. `1e6` instead of `1000000`), for better code readability.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit 10000 -> 1e4\n144: \t\t            ? (priceX96 - verifyPriceX96) * 10000 / priceX96\n\n// @audit 10000 -> 1e4\n145: \t\t            : (verifyPriceX96 - priceX96) * 10000 / verifyPriceX96;\n```",
          "loc": [
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L145)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit 10000 -> 1e4\n301: \t\t        if (fee == 10000) {\n```",
          "loc": [
            "[301](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L301)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing/malformed underscores for large numeric literals",
      "description": "Large hardcoded numbers in code can be difficult to read. Consider using underscores for number literals to improve readability (e.g `1234567` -> `1_234_567`). Consider using an underscore for every third digit from the right.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n13: \t\t    uint256 public constant YEAR_SECS = 31557600; // taking into account leap years\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n144: \t\t            ? (priceX96 - verifyPriceX96) * 10000 / priceX96\n\n145: \t\t            : (verifyPriceX96 - priceX96) * 10000 / verifyPriceX96;\n```",
          "loc": [
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L145)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n301: \t\t        if (fee == 10000) {\n```",
          "loc": [
            "[301](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L301)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Avoid complex casting",
      "description": "Consider refactoring the following code, as double casting is confusing, and, in some scenarios, it may introduce unexpected truncations or rounding issues.\n\nFurthermore, double type casting can make the code less readable and harder to maintain, increasing the likelihood of errors and misunderstandings during development and debugging.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit int56(uint56)\n369: \t\t            int24 tick = int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapSeconds)));\n```",
          "loc": [
            "[369](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L369)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit int56(uint56)\n187: \t\t            return (int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapPeriod))), true);\n```",
          "loc": [
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L187)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using the `using-for` syntax",
      "description": "The `using-for` [syntax](https://docs.soliditylang.org/en/latest/contracts.html#using-for) is the more common way of calling library functions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n211: \t\t        if (mode == Mode.NOT_SET) {\n\n236: \t\t                feed, maxFeedAge, feedDecimals, tokenDecimals, IUniswapV3Pool(address(0)), false, 0, Mode.CHAINLINK, 0\n\n255: \t\t        if (mode == Mode.NOT_SET) {\n\n283: \t\t        if (feedConfig.mode == Mode.NOT_SET) {\n\n290: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n\n290: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n\n291: \t\t                || feedConfig.mode == Mode.CHAINLINK\n\n294: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n\n294: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n\n295: \t\t                || feedConfig.mode == Mode.TWAP\n\n307: \t\t            if (feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY) {\n\n316: \t\t            if (feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY) {\n\n323: \t\t        if (feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY) {\n\n323: \t\t        if (feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY) {\n\n370: \t\t            sqrtPriceX96 = TickMath.getSqrtRatioAtTick(tick);\n\n373: \t\t        return FullMath.mulDiv(sqrtPriceX96, sqrtPriceX96, Q96);\n\n432: \t\t            state.sqrtPriceX96Lower = TickMath.getSqrtRatioAtTick(state.tickLower);\n\n433: \t\t            state.sqrtPriceX96Upper = TickMath.getSqrtRatioAtTick(state.tickUpper);\n\n434: \t\t            (amount0, amount1) = LiquidityAmounts.getAmountsForLiquidity(\n\n467: \t\t        fees0 = uint128(FullMath.mulDiv(feeGrowth0, position.liquidity, Q128));\n\n468: \t\t        fees1 = uint128(FullMath.mulDiv(feeGrowth1, position.liquidity, Q128));\n\n500: \t\t        return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n\n500: \t\t        return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n```",
          "loc": [
            "[211](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L211)",
            "[236](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L236)",
            "[255](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L255)",
            "[283](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L283)",
            "[290](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L290)",
            "[290](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L290)",
            "[291](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L291)",
            "[294](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L294)",
            "[294](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L294)",
            "[295](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L295)",
            "[307](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L307)",
            "[316](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L316)",
            "[323](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L323)",
            "[323](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L323)",
            "[370](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L370)",
            "[373](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L373)",
            "[432](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L432)",
            "[433](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L433)",
            "[434](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L434)",
            "[467](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L467)",
            "[468](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L468)",
            "[500](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L500)",
            "[500](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L500)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n212: \t\t        debt = _convertToAssets(debtSharesTotal, debtExchangeRateX96, Math.Rounding.Up);\n\n213: \t\t        lent = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Up);\n\n221: \t\t        amount = _convertToAssets(balanceOf(account), newLendExchangeRateX96, Math.Rounding.Down);\n\n245: \t\t        debt = _convertToAssets(loans[tokenId].debtShares, newDebtExchangeRateX96, Math.Rounding.Up);\n\n291: \t\t        return _convertToShares(assets, lendExchangeRateX96, Math.Rounding.Down);\n\n297: \t\t        return _convertToAssets(shares, lendExchangeRateX96, Math.Rounding.Down);\n\n303: \t\t        uint256 value = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Up);\n\n314: \t\t        uint256 value = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Up);\n\n318: \t\t            return _convertToShares(globalLendLimit - value, lendExchangeRateX96, Math.Rounding.Down);\n\n325: \t\t        return _convertToAssets(balanceOf(owner), lendExchangeRateX96, Math.Rounding.Down);\n\n336: \t\t        return _convertToShares(assets, lendExchangeRateX96, Math.Rounding.Down);\n\n342: \t\t        return _convertToAssets(shares, lendExchangeRateX96, Math.Rounding.Up);\n\n348: \t\t        return _convertToShares(assets, lendExchangeRateX96, Math.Rounding.Up);\n\n354: \t\t        return _convertToAssets(shares, lendExchangeRateX96, Math.Rounding.Down);\n\n476: \t\t        return IERC721Receiver.onERC721Received.selector;\n\n539: \t\t        uint256 debt = _convertToAssets(loans[tokenId].debtShares, newDebtExchangeRateX96, Math.Rounding.Up);\n\n565: \t\t        uint256 shares = _convertToShares(assets, newDebtExchangeRateX96, Math.Rounding.Up);\n\n571: \t\t        if (debtSharesTotal > _convertToShares(globalDebtLimit, newDebtExchangeRateX96, Math.Rounding.Down)) {\n\n584: \t\t        uint256 debt = _convertToAssets(loanDebtShares, newDebtExchangeRateX96, Math.Rounding.Up);\n\n599: \t\t        SafeERC20.safeTransfer(IERC20(asset), isTransformMode ? msg.sender : owner, assets);\n\n628: \t\t            INonfungiblePositionManager.DecreaseLiquidityParams(\n\n633: \t\t        INonfungiblePositionManager.CollectParams memory collectParams = INonfungiblePositionManager.CollectParams(\n\n636: \t\t            params.feeAmount0 == type(uint128).max ? type(uint128).max : SafeCast.toUint128(amount0 + params.feeAmount0),\n\n637: \t\t            params.feeAmount1 == type(uint128).max ? type(uint128).max : SafeCast.toUint128(amount1 + params.feeAmount1)\n\n642: \t\t        uint256 debt = _convertToAssets(loans[params.tokenId].debtShares, newDebtExchangeRateX96, Math.Rounding.Up);\n\n700: \t\t        state.debt = _convertToAssets(debtShares, state.newDebtExchangeRateX96, Math.Rounding.Up);\n\n719: \t\t                abi.decode(params.permitData, (ISignatureTransfer.PermitTransferFrom, bytes));\n\n722: \t\t                ISignatureTransfer.SignatureTransferDetails(address(this), state.liquidatorCost),\n\n728: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), state.liquidatorCost);\n\n769: \t\t            _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up) * reserveProtectionFactorX32 / Q32;\n\n779: \t\t            SafeERC20.safeTransfer(IERC20(asset), receiver, amount);\n\n887: \t\t            assets = _convertToAssets(shares, newLendExchangeRateX96, Math.Rounding.Up);\n\n890: \t\t            shares = _convertToShares(assets, newLendExchangeRateX96, Math.Rounding.Down);\n\n895: \t\t                abi.decode(permitData, (ISignatureTransfer.PermitTransferFrom, bytes));\n\n897: \t\t                permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n\n901: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n\n928: \t\t            assets = _convertToAssets(amount, newLendExchangeRateX96, Math.Rounding.Down);\n\n931: \t\t            shares = _convertToShares(amount, newLendExchangeRateX96, Math.Rounding.Up);\n\n946: \t\t        SafeERC20.safeTransfer(IERC20(asset), receiver, assets);\n\n966: \t\t            assets = _convertToAssets(amount, newDebtExchangeRateX96, Math.Rounding.Up);\n\n969: \t\t            shares = _convertToShares(amount, newDebtExchangeRateX96, Math.Rounding.Down);\n\n980: \t\t                    abi.decode(permitData, (ISignatureTransfer.PermitTransferFrom, bytes));\n\n982: \t\t                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n\n986: \t\t                SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n\n1008: \t\t            if (_convertToAssets(loanDebtShares, newDebtExchangeRateX96, Math.Rounding.Up) < minLoanSize) {\n\n1024: \t\t        uint256 debt = _convertToAssets(debtSharesTotal, debtExchangeRateX96, Math.Rounding.Up);\n\n1025: \t\t        uint256 lent = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Down);\n\n1066: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(tokenId, liquidity, 0, 0, block.timestamp)\n\n1071: \t\t            INonfungiblePositionManager.CollectParams(tokenId, recipient, fees0, fees1)\n\n1134: \t\t            uint256 totalLent = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up);\n\n1177: \t\t        uint256 debt = _convertToAssets(debtSharesTotal, oldDebtExchangeRateX96, Math.Rounding.Up);\n\n1217: \t\t                tokenConfigs[token0].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n\n1218: \t\t                tokenConfigs[token1].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n\n1220: \t\t                tokenConfigs[token0].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n\n1221: \t\t                tokenConfigs[token1].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n\n1225: \t\t                uint256 lentAssets = _convertToAssets(totalSupply(), lendExchangeRateX96, Math.Rounding.Up);\n\n1229: \t\t                        && _convertToAssets(tokenConfigs[token0].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n\n1237: \t\t                        && _convertToAssets(tokenConfigs[token1].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n\n1250: \t\t            uint256 lendIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n\n1262: \t\t            uint256 debtIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n```",
          "loc": [
            "[212](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L212)",
            "[213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L213)",
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L221)",
            "[245](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L245)",
            "[291](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L291)",
            "[297](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L297)",
            "[303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L303)",
            "[314](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L314)",
            "[318](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L318)",
            "[325](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L325)",
            "[336](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L336)",
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L342)",
            "[348](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L348)",
            "[354](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L354)",
            "[476](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L476)",
            "[539](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L539)",
            "[565](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L565)",
            "[571](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L571)",
            "[584](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L584)",
            "[599](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L599)",
            "[628](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L628)",
            "[633](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L633)",
            "[636](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L636)",
            "[637](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L637)",
            "[642](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L642)",
            "[700](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L700)",
            "[719](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L719)",
            "[722](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L722)",
            "[728](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L728)",
            "[769](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L769)",
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L779)",
            "[887](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L887)",
            "[890](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L890)",
            "[895](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L895)",
            "[897](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L897)",
            "[901](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L901)",
            "[928](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L928)",
            "[931](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L931)",
            "[946](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L946)",
            "[966](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L966)",
            "[969](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L969)",
            "[980](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L980)",
            "[982](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L982)",
            "[986](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L986)",
            "[1008](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1008)",
            "[1024](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1024)",
            "[1025](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1025)",
            "[1066](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1066)",
            "[1071](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1071)",
            "[1134](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1134)",
            "[1177](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1177)",
            "[1217](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1217)",
            "[1218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1218)",
            "[1220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1220)",
            "[1221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1221)",
            "[1225](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1225)",
            "[1229](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1229)",
            "[1237](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1237)",
            "[1250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1250)",
            "[1262](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1262)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n172: \t\t                Swapper.RouterSwapParams(\n```",
          "loc": [
            "[172](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L172)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n156: \t\t        priceX96 = FullMath.mulDiv(sqrtPriceX96, sqrtPriceX96, Q96);\n\n158: \t\t            amountOutMin = FullMath.mulDiv(amountIn * (Q64 - maxPriceDifferenceX64), priceX96, Q96 * Q64);\n\n160: \t\t            amountOutMin = FullMath.mulDiv(amountIn * (Q64 - maxPriceDifferenceX64), Q96, priceX96 * Q64);\n\n203: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(\n\n209: \t\t            INonfungiblePositionManager.CollectParams(tokenId, address(this), type(uint128).max, type(uint128).max)\n\n226: \t\t            SafeERC20.safeTransfer(token, to, amount);\n```",
          "loc": [
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L156)",
            "[158](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L158)",
            "[160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L160)",
            "[203](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L203)",
            "[209](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L209)",
            "[226](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L226)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n92: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoCompound.execute.selector, params)\n\n109: \t\t            INonfungiblePositionManager.CollectParams(\n\n143: \t\t                        Swapper.PoolSwapParams(\n\n164: \t\t                    INonfungiblePositionManager.IncreaseLiquidityParams(\n\n272: \t\t        SafeERC20.safeTransfer(IERC20(token), to, amount);\n\n280: \t\t            SafeERC20.safeApprove(IERC20(token0), address(nonfungiblePositionManager), type(uint256).max);\n\n284: \t\t            SafeERC20.safeApprove(IERC20(token1), address(nonfungiblePositionManager), type(uint256).max);\n```",
          "loc": [
            "[92](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L92)",
            "[109](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L109)",
            "[143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L143)",
            "[164](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L164)",
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L272)",
            "[280](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L280)",
            "[284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L284)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n102: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoRange.execute.selector, params)\n\n182: \t\t                Swapper.RouterSwapParams(\n\n198: \t\t            INonfungiblePositionManager.MintParams memory mintParams = INonfungiblePositionManager.MintParams(\n\n202: \t\t                SafeCast.toInt24(baseTick + config.lowerTickDelta), // reverts if out of valid range\n\n203: \t\t                SafeCast.toInt24(baseTick + config.upperTickDelta), // reverts if out of valid range\n\n213: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), state.maxAddAmount0);\n\n214: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), state.maxAddAmount1);\n\n220: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), 0);\n\n221: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), 0);\n```",
          "loc": [
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L102)",
            "[182](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L182)",
            "[198](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L198)",
            "[202](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L202)",
            "[203](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L203)",
            "[213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L213)",
            "[214](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L214)",
            "[220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L220)",
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L221)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n54: \t\t                Swapper.RouterSwapParams(\n\n66: \t\t                Swapper.RouterSwapParams(\n\n77: \t\t        SafeERC20.safeIncreaseAllowance(IERC20(token0), address(nonfungiblePositionManager), amount0);\n\n78: \t\t        SafeERC20.safeIncreaseAllowance(IERC20(token1), address(nonfungiblePositionManager), amount1);\n\n80: \t\t        INonfungiblePositionManager.IncreaseLiquidityParams memory increaseLiquidityParams = INonfungiblePositionManager\n\n88: \t\t            SafeERC20.safeTransfer(IERC20(token0), params.recipient, amount0 - added0);\n\n91: \t\t            SafeERC20.safeTransfer(IERC20(token1), params.recipient, amount1 - added1);\n\n94: \t\t            SafeERC20.safeTransfer(IERC20(token), params.recipient, amount);\n\n130: \t\t        INonfungiblePositionManager.DecreaseLiquidityParams memory decreaseLiquidityParams = INonfungiblePositionManager\n\n136: \t\t        INonfungiblePositionManager.CollectParams memory collectParams = INonfungiblePositionManager.CollectParams(\n\n139: \t\t            params.feeAmount0 == type(uint128).max ? type(uint128).max : SafeCast.toUint128(amount0 + params.feeAmount0),\n\n140: \t\t            params.feeAmount1 == type(uint128).max ? type(uint128).max : SafeCast.toUint128(amount1 + params.feeAmount1)\n\n148: \t\t                Swapper.RouterSwapParams(\n\n157: \t\t                Swapper.RouterSwapParams(\n\n165: \t\t        SafeERC20.safeApprove(IERC20(token), msg.sender, amount);\n\n170: \t\t            SafeERC20.safeTransfer(IERC20(token0), params.recipient, amount0);\n\n173: \t\t            SafeERC20.safeTransfer(IERC20(token1), params.recipient, amount1);\n```",
          "loc": [
            "[54](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L54)",
            "[66](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L66)",
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L77)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L78)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L80)",
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L88)",
            "[91](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L91)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L94)",
            "[130](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L130)",
            "[136](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L136)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L139)",
            "[140](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L140)",
            "[148](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L148)",
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L157)",
            "[165](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L165)",
            "[170](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L170)",
            "[173](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L173)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n146: \t\t        if (instructions.whatToDo == WhatToDo.COMPOUND_FEES) {\n\n219: \t\t        } else if (instructions.whatToDo == WhatToDo.CHANGE_RANGE) {\n\n304: \t\t        } else if (instructions.whatToDo == WhatToDo.WITHDRAW_AND_COLLECT_AND_SWAP) {\n\n308: \t\t                    Swapper.RouterSwapParams(\n\n325: \t\t                    Swapper.RouterSwapParams(\n\n378: \t\t        return IERC721Receiver.onERC721Received.selector;\n\n404: \t\t                abi.decode(params.permitData, (ISignatureTransfer.PermitBatchTransferFrom, bytes));\n\n414: \t\t            Swapper.RouterSwapParams(\n\n478: \t\t                abi.decode(params.permitData, (ISignatureTransfer.PermitBatchTransferFrom, bytes));\n\n541: \t\t                abi.decode(params.permitData, (ISignatureTransfer.PermitBatchTransferFrom, bytes));\n\n578: \t\t            SafeERC20.safeTransferFrom(token0, msg.sender, address(this), needed0);\n\n581: \t\t            SafeERC20.safeTransferFrom(token1, msg.sender, address(this), needed1);\n\n584: \t\t            SafeERC20.safeTransferFrom(otherToken, msg.sender, address(this), neededOther);\n\n619: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed0);\n\n623: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed1);\n\n627: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.neededOther);\n\n711: \t\t        INonfungiblePositionManager.MintParams memory mintParams = INonfungiblePositionManager.MintParams(\n\n766: \t\t        INonfungiblePositionManager.IncreaseLiquidityParams memory increaseLiquidityParams = INonfungiblePositionManager\n\n788: \t\t                Swapper.RouterSwapParams(\n\n799: \t\t                Swapper.RouterSwapParams(\n\n807: \t\t                Swapper.RouterSwapParams(\n\n812: \t\t                Swapper.RouterSwapParams(\n\n831: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), 0);\n\n832: \t\t            SafeERC20.safeApprove(params.token0, address(nonfungiblePositionManager), total0);\n\n835: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), 0);\n\n836: \t\t            SafeERC20.safeApprove(params.token1, address(nonfungiblePositionManager), total1);\n\n872: \t\t            SafeERC20.safeTransfer(token, to, amount);\n\n886: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(tokenId, liquidity, token0Min, token1Min, deadline)\n\n899: \t\t            INonfungiblePositionManager.CollectParams(tokenId, address(this), collectAmount0, collectAmount1)\n```",
          "loc": [
            "[146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L146)",
            "[219](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L219)",
            "[304](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L304)",
            "[308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L308)",
            "[325](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L325)",
            "[378](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L378)",
            "[404](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L404)",
            "[414](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L414)",
            "[478](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L478)",
            "[541](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L541)",
            "[578](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L578)",
            "[581](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L581)",
            "[584](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L584)",
            "[619](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L619)",
            "[623](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L623)",
            "[627](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L627)",
            "[711](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L711)",
            "[766](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L766)",
            "[788](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L788)",
            "[799](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L799)",
            "[807](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L807)",
            "[812](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L812)",
            "[831](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L831)",
            "[832](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L832)",
            "[835](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L835)",
            "[836](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L836)",
            "[872](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L872)",
            "[886](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L886)",
            "[899](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L899)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n72: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), data.liquidationCost);\n\n74: \t\t            IVault.LiquidateParams(\n\n78: \t\t        SafeERC20.safeApprove(data.asset, address(data.vault), 0);\n\n85: \t\t        SafeERC20.safeTransfer(data.asset, msg.sender, data.liquidationCost + (fee0 + fee1));\n\n91: \t\t                SafeERC20.safeTransfer(data.swap0.tokenIn, data.liquidator, balance);\n\n97: \t\t                SafeERC20.safeTransfer(data.swap1.tokenIn, data.liquidator, balance);\n\n106: \t\t                SafeERC20.safeTransfer(data.asset, data.liquidator, balance);\n```",
          "loc": [
            "[72](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L72)",
            "[74](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L74)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L78)",
            "[85](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L85)",
            "[91](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L91)",
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L97)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n87: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, params.amountIn);\n\n94: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, 0);\n\n98: \t\t                SafeERC20.safeTransfer(params.tokenIn, universalRouter, params.amountIn);\n\n138: \t\t                (params.swap0For1 ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1),\n\n138: \t\t                (params.swap0For1 ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1),\n\n167: \t\t        SafeERC20.safeTransfer(IERC20(tokenIn), msg.sender, amountToPay);\n\n172: \t\t        return IUniswapV3Pool(PoolAddress.computeAddress(address(factory), PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n\n172: \t\t        return IUniswapV3Pool(PoolAddress.computeAddress(address(factory), PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L87)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L94)",
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L98)",
            "[138](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L138)",
            "[138](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L138)",
            "[167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L167)",
            "[172](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L172)",
            "[172](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L172)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider making contracts `Upgradeable`",
      "description": "This allows for bugs to be fixed in production, at the expense of **significantly** increasing centralization.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n10: \t\tcontract AutoExit is Automator {\n```",
          "loc": [
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n16: \t\tcontract AutoCompound is Automator, Multicall, ReentrancyGuard {\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n11: \t\tcontract AutoRange is Automator {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n12: \t\tcontract LeverageTransformer is Swapper {\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n15: \t\tcontract V3Utils is Swapper, IERC721Receiver {\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n17: \t\tabstract contract Swapper is IUniswapV3SwapCallback, IErrors {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing timelock in critical functions",
      "description": "It is a good practice to give time for users to react and adjust to critical changes. A timelock provides more guarantees and reduces the level of trust required, thus decreasing risk for users. It also indicates that the project is legitimate (less risk of a malicious owner making a sandwich attack on a user). Consider adding a timelock to the following functions:",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n243: \t\t    function setReward(uint64 _totalRewardX64) external onlyOwner {\n```",
          "loc": [
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L243)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Dependence on external protocols",
      "description": "External protocols should be monitored as such dependencies may introduce vulnerabilities if a vulnerability is found in the external protocol.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n4: \t\timport \"v3-core/interfaces/IUniswapV3Factory.sol\";\n\n5: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n37: \t\t        CHAINLINK_TWAP_VERIFY, // using chainlink for price and TWAP to verify\n\n38: \t\t        TWAP_CHAINLINK_VERIFY, // using TWAP for price and chainlink to verify\n\n39: \t\t        CHAINLINK, // using only chainlink directly\n\n48: \t\t        IUniswapV3Pool pool; // reference pool\n\n68: \t\t    address public immutable chainlinkReferenceToken;\n\n77: \t\t        address _chainlinkReferenceToken\n\n83: \t\t        chainlinkReferenceToken = _chainlinkReferenceToken;\n\n104: \t\t        uint256 cachedChainlinkReferencePriceX96;\n\n106: \t\t        (price0X96, cachedChainlinkReferencePriceX96) =\n\n107: \t\t            _getReferenceTokenPriceX96(token0, cachedChainlinkReferencePriceX96);\n\n108: \t\t        (price1X96, cachedChainlinkReferencePriceX96) =\n\n109: \t\t            _getReferenceTokenPriceX96(token1, cachedChainlinkReferencePriceX96);\n\n117: \t\t            (priceTokenX96,) = _getReferenceTokenPriceX96(token, cachedChainlinkReferencePriceX96);\n\n134: \t\t        IUniswapV3Pool pool = _getPool(token0, token1, fee);\n\n205: \t\t        IUniswapV3Pool pool,\n\n236: \t\t                feed, maxFeedAge, feedDecimals, tokenDecimals, IUniswapV3Pool(address(0)), false, 0, Mode.CHAINLINK, 0\n\n272: \t\t    function _getReferenceTokenPriceX96(address token, uint256 cachedChainlinkReferencePriceX96)\n\n275: \t\t        returns (uint256 priceX96, uint256 chainlinkReferencePriceX96)\n\n278: \t\t            return (Q96, chainlinkReferencePriceX96);\n\n289: \t\t        bool usesChainlink = (\n\n290: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n\n291: \t\t                || feedConfig.mode == Mode.CHAINLINK\n\n294: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n\n298: \t\t        if (usesChainlink) {\n\n299: \t\t            uint256 chainlinkPriceX96 = _getChainlinkPriceX96(token);\n\n300: \t\t            chainlinkReferencePriceX96 = cachedChainlinkReferencePriceX96 == 0\n\n301: \t\t                ? _getChainlinkPriceX96(referenceToken)\n\n302: \t\t                : cachedChainlinkReferencePriceX96;\n\n304: \t\t            chainlinkPriceX96 = (10 ** referenceTokenDecimals) * chainlinkPriceX96 * Q96 / chainlinkReferencePriceX96\n\n307: \t\t            if (feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY) {\n\n308: \t\t                verifyPriceX96 = chainlinkPriceX96;\n\n310: \t\t                priceX96 = chainlinkPriceX96;\n\n316: \t\t            if (feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY) {\n\n323: \t\t        if (feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY) {\n\n329: \t\t    function _getChainlinkPriceX96(address token) internal view returns (uint256) {\n\n330: \t\t        if (token == chainlinkReferenceToken) {\n\n339: \t\t            revert ChainlinkPriceError();\n\n359: \t\t    function _getReferencePoolPriceX96(IUniswapV3Pool pool, uint32 twapSeconds) internal view returns (uint256) {\n\n388: \t\t        IUniswapV3Pool pool;\n\n473: \t\t        IUniswapV3Pool pool,\n\n499: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n\n500: \t\t        return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L5)",
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L14)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L15)",
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L37)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L38)",
            "[39](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L39)",
            "[48](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L48)",
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L68)",
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L77)",
            "[83](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L83)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L104)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L106)",
            "[107](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L107)",
            "[108](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L108)",
            "[109](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L109)",
            "[117](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L117)",
            "[134](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L134)",
            "[205](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L205)",
            "[236](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L236)",
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L272)",
            "[275](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L275)",
            "[278](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L278)",
            "[289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L289)",
            "[290](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L290)",
            "[291](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L291)",
            "[294](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L294)",
            "[298](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L298)",
            "[299](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L299)",
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L300)",
            "[301](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L301)",
            "[302](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L302)",
            "[304](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L304)",
            "[307](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L307)",
            "[308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L308)",
            "[310](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L310)",
            "[316](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L316)",
            "[323](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L323)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L329)",
            "[330](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L330)",
            "[339](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L339)",
            "[359](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L359)",
            "[388](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L388)",
            "[473](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L473)",
            "[499](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L499)",
            "[500](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L500)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n4: \t\timport \"v3-core/interfaces/IUniswapV3Factory.sol\";\n\n5: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n12: \t\timport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n13: \t\timport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n16: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n17: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n18: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n\n50: \t\t    IUniswapV3Factory public immutable factory;\n\n181: \t\t        factory = IUniswapV3Factory(_nonfungiblePositionManager.factory());\n\n434: \t\t        // only Uniswap v3 NFTs allowed - sent from other contract\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L5)",
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L12)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L13)",
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L14)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L15)",
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L16)",
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L17)",
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L18)",
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L50)",
            "[181](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L181)",
            "[434](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L434)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n87: \t\t        IUniswapV3Pool pool;\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L87)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n8: \t\timport \"v3-core/interfaces/IUniswapV3Factory.sol\";\n\n9: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n142: \t\t        IUniswapV3Pool pool,\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L6)",
            "[8](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L8)",
            "[9](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L9)",
            "[142](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L142)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n4: \t\timport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n128: \t\t                IUniswapV3Pool pool = _getPool(state.token0, state.token1, state.fee);\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L6)",
            "[128](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L128)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n68: \t\t        IUniswapV3Pool pool;\n\n308: \t\t            int24 spacing = IUniswapV3Factory(factory).feeAmountTickSpacing(fee);\n```",
          "loc": [
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L68)",
            "[308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L308)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n4: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n361: \t\t        // only Uniswap v3 NFTs allowed\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L5)",
            "[361](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L361)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n4: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n5: \t\timport \"v3-core/interfaces/callback/IUniswapV3FlashCallback.sol\";\n\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n\n32: \t\t        IUniswapV3Pool flashLoanPool; // pool which is used for flashloan - may not be used in the swaps below\n\n67: \t\t    function uniswapV3FlashCallback(uint256 fee0, uint256 fee1, bytes calldata callbackData) external {\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L5)",
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)",
            "[32](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L32)",
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L67)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n6: \t\timport \"v3-core/interfaces/callback/IUniswapV3SwapCallback.sol\";\n\n7: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n17: \t\tabstract contract Swapper is IUniswapV3SwapCallback, IErrors {\n\n121: \t\t        IUniswapV3Pool pool;\n\n156: \t\t    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external override {\n\n171: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n\n172: \t\t        return IUniswapV3Pool(PoolAddress.computeAddress(address(factory), PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L4)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L6)",
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L7)",
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L17)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L121)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L156)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L171)",
            "[172](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L172)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use transfer libraries instead of low level calls",
      "description": "Consider using `SafeTransferLib.safeTransferETH` or `Address.sendValue` for clearer semantic meaning instead of using a low level `call`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n130: \t\t            (bool sent,) = to.call{value: balance}(\"\");\n\n221: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n```",
          "loc": [
            "[130](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L130)",
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L221)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n867: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n```",
          "loc": [
            "[867](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L867)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`2**<n> - 1` should be re-written as `type(uint<n>).max`",
      "description": "Earlier versions of solidity can use `uint<n>(-1)` instead. Expressions not including the `- 1` can often be re-written to accomodate the change (e.g. by using a `>` rather than a `>=`, which will also save some gas).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n12: \t\t    uint256 private constant Q96 = 2 ** 96;\n\n12: \t\t    uint256 private constant Q96 = 2 ** 96;\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L12)",
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n27: \t\t    uint256 private constant Q96 = 2 ** 96;\n\n27: \t\t    uint256 private constant Q96 = 2 ** 96;\n\n28: \t\t    uint256 private constant Q128 = 2 ** 128;\n\n28: \t\t    uint256 private constant Q128 = 2 ** 128;\n```",
          "loc": [
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L27)",
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L27)",
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L28)",
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L28)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n33: \t\t    uint256 private constant Q32 = 2 ** 32;\n\n33: \t\t    uint256 private constant Q32 = 2 ** 32;\n\n34: \t\t    uint256 private constant Q96 = 2 ** 96;\n\n34: \t\t    uint256 private constant Q96 = 2 ** 96;\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L33)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L33)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L34)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L34)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n20: \t\t    uint256 internal constant Q64 = 2 ** 64;\n\n20: \t\t    uint256 internal constant Q64 = 2 ** 64;\n\n21: \t\t    uint256 internal constant Q96 = 2 ** 96;\n\n21: \t\t    uint256 internal constant Q96 = 2 ** 96;\n```",
          "loc": [
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L20)",
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L20)",
            "[21](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L21)",
            "[21](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L21)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use of non-named numeric constants",
      "description": "Constants should be defined instead of using magic numbers.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit 10000\n144: \t\t            ? (priceX96 - verifyPriceX96) * 10000 / priceX96\n\n// @audit 10000\n145: \t\t            : (verifyPriceX96 - priceX96) * 10000 / verifyPriceX96;\n\n// @audit 10\n304: \t\t            chainlinkPriceX96 = (10 ** referenceTokenDecimals) * chainlinkPriceX96 * Q96 / chainlinkReferencePriceX96\n\n// @audit 10\n305: \t\t                / (10 ** feedConfig.tokenDecimals);\n\n// @audit 10\n342: \t\t        return uint256(answer) * Q96 / (10 ** feedConfig.feedDecimals);\n```",
          "loc": [
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L145)",
            "[304](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L304)",
            "[305](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L305)",
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L342)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit 10000\n301: \t\t        if (fee == 10000) {\n\n// @audit 200\n302: \t\t            return 200;\n\n// @audit 3000\n303: \t\t        } else if (fee == 3000) {\n\n// @audit 60\n304: \t\t            return 60;\n\n// @audit 500\n305: \t\t        } else if (fee == 500) {\n\n// @audit 10\n306: \t\t            return 10;\n```",
          "loc": [
            "[301](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L301)",
            "[302](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L302)",
            "[303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L303)",
            "[304](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L304)",
            "[305](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L305)",
            "[306](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L306)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider splitting complex checks into multiple steps",
      "description": "Assign the expression's parts to intermediate local variables, and check against those instead.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n227: \t\t            if (!(token0 == token && token1 == referenceToken || token0 == referenceToken && token1 == token)) {\n\n227: \t\t            if (!(token0 == token && token1 == referenceToken || token0 == referenceToken && token1 == token)) {\n\n227: \t\t            if (!(token0 == token && token1 == referenceToken || token0 == referenceToken && token1 == token)) {\n\n250: \t\t        if (msg.sender != emergencyAdmin && msg.sender != owner()) {\n\n289: \t\t        bool usesChainlink = (\n290: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n291: \t\t                || feedConfig.mode == Mode.CHAINLINK\n292: \t\t        );\n\n293: \t\t        bool usesTWAP = (\n294: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n295: \t\t                || feedConfig.mode == Mode.TWAP\n296: \t\t        );\n\n290: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n291: \t\t                || feedConfig.mode == Mode.CHAINLINK\n\n290: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n\n294: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n295: \t\t                || feedConfig.mode == Mode.TWAP\n\n294: \t\t            feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY\n\n323: \t\t        if (feedConfig.mode == Mode.CHAINLINK_TWAP_VERIFY || feedConfig.mode == Mode.TWAP_CHAINLINK_VERIFY) {\n```",
          "loc": [
            "[227](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L227)",
            "[227](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L227)",
            "[227](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L227)",
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L250)",
            "[289-292](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L289-L292)",
            "[293-296](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L293-L296)",
            "[290-291](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L290-L291)",
            "[290](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L290)",
            "[294-295](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L294-L295)",
            "[294](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L294)",
            "[323](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L323)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n435: \t\t        if (msg.sender != address(nonfungiblePositionManager) || from == address(this)) {\n\n551: \t\t        bool isTransformMode =\n552: \t\t            transformedTokenId > 0 && transformedTokenId == tokenId && transformerAllowList[msg.sender];\n\n552: \t\t            transformedTokenId > 0 && transformedTokenId == tokenId && transformerAllowList[msg.sender];\n\n561: \t\t        if (!isTransformMode && tokenOwner[tokenId] != msg.sender && address(this) != msg.sender) {\n\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n792: \t\t                || transformer == address(nonfungiblePositionManager)\n\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n\n814: \t\t        if (msg.sender != emergencyAdmin && msg.sender != owner()) {\n```",
          "loc": [
            "[435](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L435)",
            "[551-552](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L551-L552)",
            "[552](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L552)",
            "[561](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L561)",
            "[791-792](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L791-L792)",
            "[791](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L791)",
            "[791](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L791)",
            "[814](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L814)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n113: \t\t            config.onlyFees && params.rewardX64 > config.maxRewardX64\n114: \t\t                || !config.onlyFees && params.rewardX64 > config.maxRewardX64\n\n140: \t\t        state.isSwap = !state.isAbove && config.token0Swap || state.isAbove && config.token1Swap;\n\n140: \t\t        state.isSwap = !state.isAbove && config.token0Swap || state.isAbove && config.token1Swap;\n```",
          "loc": [
            "[113-114](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L113-L114)",
            "[140](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L140)",
            "[140](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L140)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n123: \t\t            config.onlyFees && params.rewardX64 > config.maxRewardX64\n124: \t\t                || !config.onlyFees && params.rewardX64 > config.maxRewardX64\n\n149: \t\t        if (params.swap0To1 && params.amountIn > state.amount0 || !params.swap0To1 && params.amountIn > state.amount1) {\n\n175: \t\t                baseTick + config.lowerTickDelta == state.tickLower\n176: \t\t                    && baseTick + config.upperTickDelta == state.tickUpper\n```",
          "loc": [
            "[123-124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L123-L124)",
            "[149](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L149)",
            "[175-176](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L175-L176)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n93: \t\t        if (token != token0 && token != token1 && amount > 0) {\n\n93: \t\t        if (token != token0 && token != token1 && amount > 0) {\n```",
          "loc": [
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L93)",
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L93)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n342: \t\t            if (targetAmount != 0 && instructions.targetToken != address(0)) {\n\n697: \t\t            amountOther > amountAddedOther && address(otherToken) != address(0) && token0 != otherToken\n698: \t\t                && token1 != otherToken\n\n697: \t\t            amountOther > amountAddedOther && address(otherToken) != address(0) && token0 != otherToken\n```",
          "loc": [
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L342)",
            "[697-698](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L697-L698)",
            "[697](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L697)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n77: \t\t        if (params.amountIn != 0 && params.swapData.length != 0 && address(params.tokenOut) != address(0)) {\n\n77: \t\t        if (params.amountIn != 0 && params.swapData.length != 0 && address(params.tokenOut) != address(0)) {\n```",
          "loc": [
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L77)",
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L77)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Complex math should be split into multiple steps",
      "description": "Consider splitting long arithmetic calculations into multiple steps to improve the code readability.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n50: \t\t        return debt * Q96 / (cash + debt);\n\n69: \t\t            uint256 normalRateX96 = (kinkX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n\n67: \t\t            borrowRateX96 = (utilizationRateX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n\n71: \t\t            borrowRateX96 = (excessUtilX96 * jumpMultiplierPerSecondX96 / Q96) + normalRateX96;\n```",
          "loc": [
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L50)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L69)",
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L67)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L71)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n120: \t\t        value = (price0X96 * (amount0 + fees0) / Q96 + price1X96 * (amount1 + fees1) / Q96) * Q96 / priceTokenX96;\n\n121: \t\t        feeValue = (price0X96 * fees0 / Q96 + price1X96 * fees1 / Q96) * Q96 / priceTokenX96;\n\n304: \t\t            chainlinkPriceX96 = (10 ** referenceTokenDecimals) * chainlinkPriceX96 * Q96 / chainlinkReferencePriceX96\n305: \t\t                / (10 ** feedConfig.tokenDecimals);\n\n342: \t\t        return uint256(answer) * Q96 / (10 ** feedConfig.feedDecimals);\n```",
          "loc": [
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L120)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L121)",
            "[304-305](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L304-L305)",
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L342)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n1060: \t\t                liquidity = uint128((liquidationValue - feeValue) * liquidity / (fullValue - feeValue));\n\n1100: \t\t        uint256 maxPenaltyValue = debt * (Q32 + MAX_LIQUIDATION_PENALTY_X32) / Q32;\n\n1106: \t\t            uint256 penaltyFractionX96 =\n1107: \t\t                (Q96 - ((fullValue - maxPenaltyValue) * Q96 / (startLiquidationValue - maxPenaltyValue)));\n\n1108: \t\t            uint256 penaltyX32 = MIN_LIQUIDATION_PENALTY_X32\n1109: \t\t                + (MAX_LIQUIDATION_PENALTY_X32 - MIN_LIQUIDATION_PENALTY_X32) * penaltyFractionX96 / Q96;\n\n1116: \t\t            uint256 penaltyValue = fullValue * (Q32 - MAX_LIQUIDATION_PENALTY_X32) / Q32;\n\n1111: \t\t            liquidationValue = debt * (Q32 + penaltyX32) / Q32;\n\n1137: \t\t            newLendExchangeRateX96 = (totalLent - missing) * newLendExchangeRateX96 / totalLent;\n\n1187: \t\t            newDebtExchangeRateX96 = oldDebtExchangeRateX96\n1188: \t\t                + oldDebtExchangeRateX96 * (block.timestamp - lastRateUpdate) * borrowRateX96 / Q96;\n\n1189: \t\t            newLendExchangeRateX96 = oldLendExchangeRateX96\n1190: \t\t                + oldLendExchangeRateX96 * (block.timestamp - lastRateUpdate) * supplyRateX96 / Q96;\n\n1250: \t\t            uint256 lendIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n1251: \t\t                * (Q32 + MAX_DAILY_LEND_INCREASE_X32) / Q32;\n\n1262: \t\t            uint256 debtIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n1263: \t\t                * (Q32 + MAX_DAILY_DEBT_INCREASE_X32) / Q32;\n```",
          "loc": [
            "[1060](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1060)",
            "[1100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1100)",
            "[1106-1107](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1106-L1107)",
            "[1108-1109](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1108-L1109)",
            "[1116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1116)",
            "[1111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1111)",
            "[1137](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1137)",
            "[1187-1188](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1187-L1188)",
            "[1189-1190](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1189-L1190)",
            "[1250-1251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1250-L1251)",
            "[1262-1263](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1262-L1263)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n155: \t\t                state.amount0 -= state.feeAmount0 * params.rewardX64 / Q64;\n\n156: \t\t                state.amount1 -= state.feeAmount1 * params.rewardX64 / Q64;\n\n187: \t\t                    state.amount0 -= state.amount0 * params.rewardX64 / Q64;\n\n189: \t\t                    state.amount1 -= state.amount1 * params.rewardX64 / Q64;\n\n194: \t\t            state.amount0 -= (config.onlyFees ? state.feeAmount0 : state.amount0) * params.rewardX64 / Q64;\n\n195: \t\t            state.amount1 -= (config.onlyFees ? state.feeAmount1 : state.amount1) * params.rewardX64 / Q64;\n```",
          "loc": [
            "[155](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L155)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L156)",
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L187)",
            "[189](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L189)",
            "[194](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L194)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L195)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n158: \t\t            amountOutMin = FullMath.mulDiv(amountIn * (Q64 - maxPriceDifferenceX64), priceX96, Q96 * Q64);\n\n160: \t\t            amountOutMin = FullMath.mulDiv(amountIn * (Q64 - maxPriceDifferenceX64), Q96, priceX96 * Q64);\n```",
          "loc": [
            "[158](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L158)",
            "[160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L160)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n156: \t\t            state.maxAddAmount0 = state.amount0 * Q64 / (rewardX64 + Q64);\n\n157: \t\t            state.maxAddAmount1 = state.amount1 * Q64 / (rewardX64 + Q64);\n```",
          "loc": [
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L156)",
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L157)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n171: \t\t            int24 baseTick = state.currentTick - (((state.currentTick % tickSpacing) + tickSpacing) % tickSpacing);\n```",
          "loc": [
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L171)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n820: \t\t            uint256 leftOver = params.amountIn0 + params.amountIn1 - amountInDelta0 - amountInDelta1;\n```",
          "loc": [
            "[820](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L820)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Time related variables should use time units instead of numbers",
      "description": "There are [units](https://docs.soliditylang.org/en/latest/units-and-global-variables.html#time-units) for seconds, minutes, hours, days, and weeks, and since they're defined, they should be used",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n13: \t\t    uint256 public constant YEAR_SECS = 31557600; // taking into account leap years\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n23: \t\t    uint32 public constant MIN_TWAP_SECONDS = 60; // 1 minute\n```",
          "loc": [
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L23)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Some functions don't have any logic",
      "description": "Some functions don't have a body, consider commenting why, or refactor the code and remove these functions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n33: \t\t    constructor(\n34: \t\t        INonfungiblePositionManager _npm,\n35: \t\t        address _operator,\n36: \t\t        address _withdrawer,\n37: \t\t        uint32 _TWAPSeconds,\n38: \t\t        uint16 _maxTWAPTickDifference,\n39: \t\t        address _zeroxRouter,\n40: \t\t        address _universalRouter\n41: \t\t    ) Automator(_npm, _operator, _withdrawer, _TWAPSeconds, _maxTWAPTickDifference, _zeroxRouter, _universalRouter) {}\n```",
          "loc": [
            "[33-41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L33-L41)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n37: \t\t    constructor(\n38: \t\t        INonfungiblePositionManager _npm,\n39: \t\t        address _operator,\n40: \t\t        address _withdrawer,\n41: \t\t        uint32 _TWAPSeconds,\n42: \t\t        uint16 _maxTWAPTickDifference\n43: \t\t    ) Automator(_npm, _operator, _withdrawer, _TWAPSeconds, _maxTWAPTickDifference, address(0), address(0)) {}\n```",
          "loc": [
            "[37-43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L37-L43)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n25: \t\t    constructor(\n26: \t\t        INonfungiblePositionManager _npm,\n27: \t\t        address _operator,\n28: \t\t        address _withdrawer,\n29: \t\t        uint32 _TWAPSeconds,\n30: \t\t        uint16 _maxTWAPTickDifference,\n31: \t\t        address _zeroxRouter,\n32: \t\t        address _universalRouter\n33: \t\t    ) Automator(_npm, _operator, _withdrawer, _TWAPSeconds, _maxTWAPTickDifference, _zeroxRouter, _universalRouter) {}\n```",
          "loc": [
            "[25-33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L25-L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n13: \t\t    constructor(INonfungiblePositionManager _nonfungiblePositionManager, address _zeroxRouter, address _universalRouter)\n14: \t\t        Swapper(_nonfungiblePositionManager, _zeroxRouter, _universalRouter)\n15: \t\t    {}\n```",
          "loc": [
            "[13-15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L13-L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n24: \t\t    constructor(INonfungiblePositionManager _nonfungiblePositionManager, address _zeroxRouter, address _universalRouter)\n25: \t\t        Swapper(_nonfungiblePositionManager, _zeroxRouter, _universalRouter)\n26: \t\t    {}\n```",
          "loc": [
            "[24-26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L24-L26)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Control structures do not comply with best practices",
      "description": "This is a [best practice](https://docs.soliditylang.org/en/latest/style-guide.html#control-structures) that should be followed. ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n88: \t\t        if (\n```",
          "loc": [
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L88)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n790: \t\t        if (\n\n1227: \t\t                if (\n\n1235: \t\t                if (\n```",
          "loc": [
            "[790](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L790)",
            "[1227](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1227)",
            "[1235](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1235)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n112: \t\t        if (\n```",
          "loc": [
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L112)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n122: \t\t        if (\n\n166: \t\t        if (\n\n174: \t\t            if (\n```",
          "loc": [
            "[122](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L122)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L166)",
            "[174](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L174)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n696: \t\t        if (\n```",
          "loc": [
            "[696](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L696)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use a single file for system wide constants",
      "description": "Consider grouping all the system constants under a single file. This finding shows only the first constant for each file, for brevity.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n12: \t\t    uint256 private constant Q96 = 2 ** 96;\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n25: \t\t    uint16 public constant MIN_PRICE_DIFFERENCE = 200; //2%\n```",
          "loc": [
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L25)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n33: \t\t    uint256 private constant Q32 = 2 ** 32;\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n20: \t\t    uint256 internal constant Q64 = 2 ** 64;\n```",
          "loc": [
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n47: \t\t    uint64 public constant MAX_REWARD_X64 = uint64(Q64 / 50); // 2%\n```",
          "loc": [
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L47)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Event does not have proper `indexed` fields",
      "description": "Index event fields make the field more quickly accessible to off-chain tools that parse events. However, note that each index field costs extra gas during emission, so it's not necessarily best to index the maximum allowed per event (three fields).\n\nEach event should use three `indexed` fields if there are three or more fields, and gas usage is not particularly of concern for the events in question. If there are fewer than three fields, all of the fields should be indexed.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit emergencyAdmin\n33: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit owner, target\n68: \t\t    event ApprovedTransform(uint256 indexed tokenId, address owner, address target, bool isActive);\n\n// @audit owner\n70: \t\t    event Add(uint256 indexed tokenId, address owner, uint256 oldTokenId); // when a token is added replacing another token - oldTokenId > 0\n\n// @audit recipient\n71: \t\t    event Remove(uint256 indexed tokenId, address recipient);\n\n// @audit owner, recipient\n75: \t\t    event WithdrawCollateral(\n76: \t\t        uint256 indexed tokenId, address owner, address recipient, uint128 liquidity, uint256 amount0, uint256 amount1\n77: \t\t    );\n\n// @audit owner\n78: \t\t    event Borrow(uint256 indexed tokenId, address owner, uint256 assets, uint256 shares);\n\n// @audit repayer, owner\n79: \t\t    event Repay(uint256 indexed tokenId, address repayer, address owner, uint256 assets, uint256 shares);\n\n// @audit liquidator, owner\n80: \t\t    event Liquidate(\n81: \t\t        uint256 indexed tokenId,\n82: \t\t        address liquidator,\n83: \t\t        address owner,\n84: \t\t        uint256 value,\n85: \t\t        uint256 cost,\n86: \t\t        uint256 amount0,\n87: \t\t        uint256 amount1,\n88: \t\t        uint256 reserve,\n89: \t\t        uint256 missing\n90: \t\t    ); // shows exactly how liquidation amounts were divided\n\n// @audit receiver\n93: \t\t    event WithdrawReserves(uint256 amount, address receiver);\n\n// @audit transformer\n94: \t\t    event SetTransformer(address transformer, bool active);\n\n// @audit token\n104: \t\t    event SetTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32);\n\n// @audit emergencyAdmin\n106: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L68)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L70)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L71)",
            "[75-77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L75-L77)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L78)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L79)",
            "[80-90](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L80-L90)",
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L93)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L94)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L104)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit account, token0, token1\n11: \t\t    event Executed(\n12: \t\t        uint256 indexed tokenId,\n13: \t\t        address account,\n14: \t\t        bool isSwap,\n15: \t\t        uint256 amountReturned0,\n16: \t\t        uint256 amountReturned1,\n17: \t\t        address token0,\n18: \t\t        address token1\n19: \t\t    );\n```",
          "loc": [
            "[11-19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L11-L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit newOperator\n27: \t\t    event OperatorChanged(address newOperator, bool active);\n\n// @audit newVault\n28: \t\t    event VaultChanged(address newVault, bool active);\n\n// @audit newWithdrawer\n30: \t\t    event WithdrawerChanged(address newWithdrawer);\n```",
          "loc": [
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L27)",
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L28)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit account, token0, token1\n18: \t\t    event AutoCompounded(\n19: \t\t        address account,\n20: \t\t        uint256 tokenId,\n21: \t\t        uint256 amountAdded0,\n22: \t\t        uint256 amountAdded1,\n23: \t\t        uint256 reward0,\n24: \t\t        uint256 reward1,\n25: \t\t        address token0,\n26: \t\t        address token1\n27: \t\t    );\n\n// @audit account\n30: \t\t    event RewardUpdated(address account, uint64 totalRewardX64);\n\n// @audit token\n33: \t\t    event BalanceAdded(uint256 tokenId, address token, uint256 amount);\n\n// @audit token\n34: \t\t    event BalanceRemoved(uint256 tokenId, address token, uint256 amount);\n\n// @audit token, to\n35: \t\t    event BalanceWithdrawn(uint256 tokenId, address token, address to, uint256 amount);\n```",
          "loc": [
            "[18-27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L18-L27)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L30)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L33)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L34)",
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit token\n24: \t\t    event WithdrawAndCollectAndSwap(uint256 indexed tokenId, address token, uint256 amount);\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L24)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Old Solidity version",
      "description": "Use a more recent version of Solidity: the latest version is 0.8.24, but it's safer to use at least the version 0.8.19 to get the latest bugfixes and features when deploying on L2.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use of floating pragma",
      "description": "Locking the pragma helps avoid accidental deploys with an outdated compiler version that may introduce bugs and unexpected vulnerabilities.\n\nFloating pragma is meant to be used for libraries and contracts that have external users and need backward compatibility.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contract functions should use an `interface`",
      "description": "All `external`/`public` functions should override an `interface`. This is useful to make sure that the whole API is extracted.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n46: \t\t    function getUtilizationRateX96(uint256 cash, uint256 debt) public pure returns (uint256) {\n\n82: \t\t    function setValues(\n```",
          "loc": [
            "[46](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L46)",
            "[82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L82)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n201: \t\t    function setTokenConfig(\n\n249: \t\t    function setOracleMode(address token, Mode mode) external {\n\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)",
            "[201](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201)",
            "[249](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L249)",
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n765: \t\t    function withdrawReserves(uint256 amount, address receiver) external onlyOwner {\n\n788: \t\t    function setTransformer(address transformer, bool active) external onlyOwner {\n\n807: \t\t    function setLimits(\n\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n856: \t\t    function setTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32)\n\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[765](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L765)",
            "[788](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L788)",
            "[807](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L807)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[856](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L856)",
            "[870](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n100: \t\t    function execute(ExecuteParams calldata params) external {\n\n218: \t\t    function configToken(uint256 tokenId, PositionConfig calldata config) external {\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L100)",
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L218)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n59: \t\t    function setWithdrawer(address _withdrawer) public onlyOwner {\n\n69: \t\t    function setOperator(address _operator, bool _active) public onlyOwner {\n\n79: \t\t    function setVault(address _vault, bool _active) public onlyOwner {\n\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n\n104: \t\t    function withdrawBalances(address[] calldata tokens, address to) external virtual {\n\n123: \t\t    function withdrawETH(address to) external {\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L59)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L69)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L79)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L104)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L123)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n87: \t\t    function executeWithVault(ExecuteParams calldata params, address vault) external {\n\n101: \t\t    function execute(ExecuteParams calldata params) external nonReentrant {\n\n200: \t\t    function withdrawLeftoverBalances(uint256 tokenId, address to) external nonReentrant {\n\n243: \t\t    function setReward(uint64 _totalRewardX64) external onlyOwner {\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L87)",
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L101)",
            "[200](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L200)",
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L243)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n97: \t\t    function executeWithVault(ExecuteParams calldata params, address vault) external {\n\n111: \t\t    function execute(ExecuteParams calldata params) external {\n\n276: \t\t    function configToken(uint256 tokenId, address vault, PositionConfig calldata config) external {\n```",
          "loc": [
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L97)",
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L111)",
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L276)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n40: \t\t    function leverageUp(LeverageUpParams calldata params) external {\n\n123: \t\t    function leverageDown(LeverageDownParams calldata params) external {\n```",
          "loc": [
            "[40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L40)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L123)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n98: \t\t    function executeWithPermit(uint256 tokenId, Instructions memory instructions, uint8 v, bytes32 r, bytes32 s)\n\n115: \t\t    function execute(uint256 tokenId, Instructions memory instructions) public returns (uint256 newTokenId) {\n\n397: \t\t    function swap(SwapParams calldata params) external payable returns (uint256 amountOut) {\n\n467: \t\t    function swapAndMint(SwapAndMintParams calldata params)\n\n532: \t\t    function swapAndIncreaseLiquidity(SwapAndIncreaseLiquidityParams calldata params)\n```",
          "loc": [
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L98)",
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L115)",
            "[397](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L397)",
            "[467](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L467)",
            "[532](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L532)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n41: \t\t    function liquidate(LiquidateParams calldata params) external {\n\n67: \t\t    function uniswapV3FlashCallback(uint256 fee0, uint256 fee1, bytes calldata callbackData) external {\n```",
          "loc": [
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L41)",
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L67)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`require`/`revert` without any message",
      "description": "If a transaction reverts, it can be confusing to debug if there aren't any messages. Add a descriptive message to all `require`/`revert` statements.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n157: \t\t        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n```",
          "loc": [
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L157)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Some error strings are not descriptive",
      "description": "Consider adding more detail to the following error messages. It is recommended to keep the message size under 32 chars to avoid adding a gas overhead.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n244: \t\t        require(_totalRewardX64 <= totalRewardX64, \">totalRewardX64\");\n```",
          "loc": [
            "[244](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L244)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`else` block is not required",
      "description": "Consider moving the logic outside the `else` block, and then removing it (it's not required, as the function is returning a value). There will be one less level of nesting, which will improve the quality of the codebase.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n306: \t\t        } else {\n307: \t\t            return globalLendLimit - value;\n308: \t\t        }\n\n317: \t\t        } else {\n318: \t\t            return _convertToShares(globalLendLimit - value, lendExchangeRateX96, Math.Rounding.Down);\n319: \t\t        }\n```",
          "loc": [
            "[306-308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L306-L308)",
            "[317-319](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L317-L319)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n174: \t\t        } else {\n175: \t\t            return false;\n176: \t\t        }\n```",
          "loc": [
            "[174-176](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L174-L176)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n269: \t\t        } else {\n270: \t\t            revert NotReady();\n271: \t\t        }\n```",
          "loc": [
            "[269-271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L269-L271)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n349: \t\t        } else {\n350: \t\t            revert NotSupportedWhatToDo();\n351: \t\t        }\n```",
          "loc": [
            "[349-351](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L349-L351)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n100: \t\t            } else {\n101: \t\t                revert WrongContract();\n102: \t\t            }\n```",
          "loc": [
            "[100-102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L100-L102)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Multiple `address`/ID mappings can be combined into a single mapping of an `address`/ID to a `struct`, for readability",
      "description": "Well-organized data structures make code reviews easier, which may lead to fewer bugs. Consider combining related mappings into mappings to structs, so it's clear what data is related.",
      "gasSavings": 40924,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit consider merging ownedTokensIndex, tokenOwner\n158: \t\t    mapping(uint256 => uint256) private ownedTokensIndex; // Mapping from token ID to index of the owner tokens list (for removal without loop)\n159: \t\t    mapping(uint256 => address) private tokenOwner; // Mapping from token ID to owner\n\n// @audit consider merging transformerAllowList, transformApprovals\n163: \t\t    mapping(address => bool) public transformerAllowList; // contracts allowed to transform positions (selected audited contracts e.g. V3Utils)\n164: \t\t    mapping(address => mapping(uint256 => mapping(address => bool))) public transformApprovals; // owners permissions for other addresses to call transform on owners behalf (e.g. AutoRange contract)\n```",
          "loc": [
            "[158](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L158)",
            "[163](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L163)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Lack of specific `import` identifier",
      "description": "It is better to use `import {<identifier>} from \"<file.sol>\"` instead of `import \"<file.sol>\"` to improve readability and speed up the compilation time.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n6: \t\timport \"./interfaces/IInterestRateModel.sol\";\n\n7: \t\timport \"./interfaces/IErrors.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L4)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L6)",
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L7)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n4: \t\timport \"v3-core/interfaces/IUniswapV3Factory.sol\";\n\n5: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n7: \t\timport \"v3-core/libraries/TickMath.sol\";\n\n9: \t\timport \"v3-periphery/libraries/PoolAddress.sol\";\n\n10: \t\timport \"v3-periphery/libraries/LiquidityAmounts.sol\";\n\n12: \t\timport \"v3-periphery/interfaces/INonfungiblePositionManager.sol\";\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n17: \t\timport \"../lib/AggregatorV3Interface.sol\";\n\n19: \t\timport \"./interfaces/IV3Oracle.sol\";\n\n20: \t\timport \"./interfaces/IErrors.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L5)",
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L7)",
            "[9](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L9)",
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L10)",
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L12)",
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L14)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L15)",
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L17)",
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L19)",
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n4: \t\timport \"v3-core/interfaces/IUniswapV3Factory.sol\";\n\n5: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n6: \t\timport \"v3-core/libraries/TickMath.sol\";\n\n7: \t\timport \"v3-core/libraries/FixedPoint128.sol\";\n\n9: \t\timport \"v3-periphery/libraries/LiquidityAmounts.sol\";\n\n10: \t\timport \"v3-periphery/interfaces/INonfungiblePositionManager.sol\";\n\n12: \t\timport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n13: \t\timport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n16: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n17: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n18: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n\n20: \t\timport \"permit2/interfaces/IPermit2.sol\";\n\n22: \t\timport \"./interfaces/IVault.sol\";\n\n23: \t\timport \"./interfaces/IV3Oracle.sol\";\n\n24: \t\timport \"./interfaces/IInterestRateModel.sol\";\n\n25: \t\timport \"./interfaces/IErrors.sol\";\n```",
          "loc": [
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L5)",
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L7)",
            "[9](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L9)",
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L10)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L6)",
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L12)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L13)",
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L14)",
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L4)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L15)",
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L16)",
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L17)",
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L18)",
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L20)",
            "[22](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L22)",
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L23)",
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L24)",
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L25)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n4: \t\timport \"./Automator.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n8: \t\timport \"v3-core/interfaces/IUniswapV3Factory.sol\";\n\n9: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n10: \t\timport \"v3-core/libraries/TickMath.sol\";\n\n11: \t\timport \"v3-core/libraries/FullMath.sol\";\n\n13: \t\timport \"v3-periphery/interfaces/INonfungiblePositionManager.sol\";\n\n15: \t\timport \"../../lib/IWETH9.sol\";\n\n16: \t\timport \"../utils/Swapper.sol\";\n\n17: \t\timport \"../interfaces/IVault.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L6)",
            "[8](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L8)",
            "[9](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L9)",
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L10)",
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L11)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L13)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L15)",
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L16)",
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L17)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n4: \t\timport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n8: \t\timport \"v3-periphery/interfaces/INonfungiblePositionManager.sol\";\n\n10: \t\timport \"../automators/Automator.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L6)",
            "[8](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L8)",
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n4: \t\timport \"../automators/Automator.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n4: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n7: \t\timport \"../utils/Swapper.sol\";\n\n8: \t\timport \"../interfaces/IVault.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L5)",
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L7)",
            "[8](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L8)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n7: \t\timport \"permit2/interfaces/IPermit2.sol\";\n\n9: \t\timport \"../utils/Swapper.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L5)",
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L7)",
            "[9](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L9)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n4: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n5: \t\timport \"v3-core/interfaces/callback/IUniswapV3FlashCallback.sol\";\n\n7: \t\timport \"../interfaces/IVault.sol\";\n\n8: \t\timport \"./Swapper.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L5)",
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L7)",
            "[8](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L8)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n6: \t\timport \"v3-core/interfaces/callback/IUniswapV3SwapCallback.sol\";\n\n7: \t\timport \"v3-core/interfaces/IUniswapV3Pool.sol\";\n\n8: \t\timport \"v3-core/libraries/TickMath.sol\";\n\n10: \t\timport \"v3-periphery/interfaces/INonfungiblePositionManager.sol\";\n\n12: \t\timport \"../../lib/IWETH9.sol\";\n\n13: \t\timport \"../../lib/IUniversalRouter.sol\";\n\n14: \t\timport \"../interfaces/IErrors.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L4)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L6)",
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L7)",
            "[8](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L8)",
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L10)",
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L12)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L13)",
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L14)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Imports should be organized more systematically",
      "description": "The contract's interface should be imported first, followed by each of the interfaces it uses, followed by all other files. The examples below do not follow this layout.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n6: \t\timport \"./interfaces/IInterestRateModel.sol\";\n```",
          "loc": [
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L6)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n15: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n13: \t\timport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n16: \t\timport \"../utils/Swapper.sol\";\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n10: \t\timport \"../automators/Automator.sol\";\n```",
          "loc": [
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n7: \t\timport \"../utils/Swapper.sol\";\n```",
          "loc": [
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L7)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n9: \t\timport \"../utils/Swapper.sol\";\n```",
          "loc": [
            "[9](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L9)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n5: \t\timport \"v3-core/interfaces/callback/IUniswapV3FlashCallback.sol\";\n```",
          "loc": [
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n6: \t\timport \"v3-core/interfaces/callback/IUniswapV3SwapCallback.sol\";\n```",
          "loc": [
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L6)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Top-level declarations should be separated by at least two lines",
      "description": "Surround top level declarations in Solidity source with two blank lines. [Documentation](https://docs.soliditylang.org/en/latest/style-guide.html#blank-lines)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n131: \t\t    }\n132: \t\t\n133: \t\t    function _checkPoolPrice(address token0, address token1, uint24 fee, uint256 derivedPoolPriceX96) internal view {\n\n137: \t\t    }\n138: \t\t\n139: \t\t    function _requireMaxDifference(uint256 priceX96, uint256 verifyPriceX96, uint256 maxDifferenceX10000)\n```",
          "loc": [
            "[131-133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L131-L133)",
            "[137-139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L137-L139)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n952: \t\t    }\n953: \t\t\n954: \t\t    function _repay(uint256 tokenId, uint256 amount, bool isShare, bytes memory permitData) internal {\n\n1141: \t\t    }\n1142: \t\t\n1143: \t\t    function _calculateTokenCollateralFactorX32(uint256 tokenId) internal view returns (uint32) {\n\n1148: \t\t    }\n1149: \t\t\n1150: \t\t    function _updateGlobalInterest()\n\n1165: \t\t    }\n1166: \t\t\n1167: \t\t    function _calculateGlobalInterest()\n\n1195: \t\t    }\n1196: \t\t\n1197: \t\t    function _requireLoanIsHealthy(uint256 tokenId, uint256 debt) internal view {\n\n1244: \t\t    }\n1245: \t\t\n1246: \t\t    function _resetDailyLendIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n1256: \t\t    }\n1257: \t\t\n1258: \t\t    function _resetDailyDebtIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n1268: \t\t    }\n1269: \t\t\n1270: \t\t    function _checkLoanIsHealthy(uint256 tokenId, uint256 debt)\n\n1279: \t\t    }\n1280: \t\t\n1281: \t\t    function _convertToShares(uint256 amount, uint256 exchangeRateX96, Math.Rounding rounding)\n\n1287: \t\t    }\n1288: \t\t\n1289: \t\t    function _convertToAssets(uint256 shares, uint256 exchangeRateX96, Math.Rounding rounding)\n\n1295: \t\t    }\n1296: \t\t\n1297: \t\t    function _addTokenToOwner(address to, uint256 tokenId) internal {\n\n1301: \t\t    }\n1302: \t\t\n1303: \t\t    function _removeTokenFromOwner(address from, uint256 tokenId) internal {\n```",
          "loc": [
            "[952-954](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L952-L954)",
            "[1141-1143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1141-L1143)",
            "[1148-1150](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1148-L1150)",
            "[1165-1167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1165-L1167)",
            "[1195-1197](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1195-L1197)",
            "[1244-1246](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1244-L1246)",
            "[1256-1258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1256-L1258)",
            "[1268-1270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1268-L1270)",
            "[1279-1281](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1279-L1281)",
            "[1287-1289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1287-L1289)",
            "[1295-1297](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1295-L1297)",
            "[1301-1303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1301-L1303)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n191: \t\t    }\n192: \t\t\n193: \t\t    function _decreaseFullLiquidityAndCollect(\n\n228: \t\t    }\n229: \t\t\n230: \t\t    function _validateOwner(uint256 tokenId, address vault) internal returns (address owner) {\n```",
          "loc": [
            "[191-193](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L191-L193)",
            "[228-230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L228-L230)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n247: \t\t    }\n248: \t\t\n249: \t\t    function _increaseBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n252: \t\t    }\n253: \t\t\n254: \t\t    function _setBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n264: \t\t    }\n265: \t\t\n266: \t\t    function _withdrawBalanceInternal(uint256 tokenId, address token, address to, uint256 balance, uint256 amount)\n\n274: \t\t    }\n275: \t\t\n276: \t\t    function _checkApprovals(address token0, address token1) internal {\n```",
          "loc": [
            "[247-249](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L247-L249)",
            "[252-254](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L252-L254)",
            "[264-266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L264-L266)",
            "[274-276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L274-L276)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n564: \t\t    }\n565: \t\t\n566: \t\t    function _prepareAddApproved(\n```",
          "loc": [
            "[564-566](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L564-L566)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n65: \t\t    }\n66: \t\t\n67: \t\t    function uniswapV3FlashCallback(uint256 fee0, uint256 fee1, bytes calldata callbackData) external {\n```",
          "loc": [
            "[65-67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L65-L67)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use a struct to encapsulate multiple function parameters",
      "description": "If a function has too many parameters, replacing them with a struct can improve code readability and maintainability, increase reusability, and reduce the likelihood of errors when passing the parameters.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n201: \t\t    function setTokenConfig(\n202: \t\t        address token,\n203: \t\t        AggregatorV3Interface feed,\n204: \t\t        uint32 maxFeedAge,\n205: \t\t        IUniswapV3Pool pool,\n206: \t\t        uint32 twapSeconds,\n207: \t\t        Mode mode,\n208: \t\t        uint16 maxDifference\n\n472: \t\t    function _getFeeGrowthInside(\n473: \t\t        IUniswapV3Pool pool,\n474: \t\t        int24 tickLower,\n475: \t\t        int24 tickUpper,\n476: \t\t        int24 tickCurrent,\n477: \t\t        uint256 feeGrowthGlobal0X128,\n478: \t\t        uint256 feeGrowthGlobal1X128\n```",
          "loc": [
            "[201-208](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201-L208)",
            "[472-478](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L472-L478)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n169: \t\t    constructor(\n170: \t\t        string memory name,\n171: \t\t        string memory symbol,\n172: \t\t        address _asset,\n173: \t\t        INonfungiblePositionManager _nonfungiblePositionManager,\n174: \t\t        IInterestRateModel _interestRateModel,\n175: \t\t        IV3Oracle _oracle,\n176: \t\t        IPermit2 _permit2\n\n410: \t\t    function createWithPermit(\n411: \t\t        uint256 tokenId,\n412: \t\t        address owner,\n413: \t\t        address recipient,\n414: \t\t        uint256 deadline,\n415: \t\t        uint8 v,\n416: \t\t        bytes32 r,\n417: \t\t        bytes32 s\n\n807: \t\t    function setLimits(\n808: \t\t        uint256 _minLoanSize,\n809: \t\t        uint256 _globalLendLimit,\n810: \t\t        uint256 _globalDebtLimit,\n811: \t\t        uint256 _dailyLendIncreaseLimitMin,\n812: \t\t        uint256 _dailyDebtIncreaseLimitMin\n\n1032: \t\t    function _sendPositionValue(\n1033: \t\t        uint256 tokenId,\n1034: \t\t        uint256 liquidationValue,\n1035: \t\t        uint256 fullValue,\n1036: \t\t        uint256 feeValue,\n1037: \t\t        address recipient\n\n1205: \t\t    function _updateAndCheckCollateral(\n1206: \t\t        uint256 tokenId,\n1207: \t\t        uint256 debtExchangeRateX96,\n1208: \t\t        uint256 lendExchangeRateX96,\n1209: \t\t        uint256 oldShares,\n1210: \t\t        uint256 newShares\n```",
          "loc": [
            "[169-176](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L169-L176)",
            "[410-417](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L410-L417)",
            "[807-812](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L807-L812)",
            "[1032-1037](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1032-L1037)",
            "[1205-1210](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1205-L1210)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n33: \t\t    constructor(\n34: \t\t        INonfungiblePositionManager _npm,\n35: \t\t        address _operator,\n36: \t\t        address _withdrawer,\n37: \t\t        uint32 _TWAPSeconds,\n38: \t\t        uint16 _maxTWAPTickDifference,\n39: \t\t        address _zeroxRouter,\n40: \t\t        address _universalRouter\n```",
          "loc": [
            "[33-40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L33-L40)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n41: \t\t    constructor(\n42: \t\t        INonfungiblePositionManager npm,\n43: \t\t        address _operator,\n44: \t\t        address _withdrawer,\n45: \t\t        uint32 _TWAPSeconds,\n46: \t\t        uint16 _maxTWAPTickDifference,\n47: \t\t        address _zeroxRouter,\n48: \t\t        address _universalRouter\n\n139: \t\t    function _validateSwap(\n140: \t\t        bool swap0For1,\n141: \t\t        uint256 amountIn,\n142: \t\t        IUniswapV3Pool pool,\n143: \t\t        uint32 twapPeriod,\n144: \t\t        uint16 maxTickDifference,\n145: \t\t        uint64 maxPriceDifferenceX64\n\n193: \t\t    function _decreaseFullLiquidityAndCollect(\n194: \t\t        uint256 tokenId,\n195: \t\t        uint128 liquidity,\n196: \t\t        uint256 amountRemoveMin0,\n197: \t\t        uint256 amountRemoveMin1,\n198: \t\t        uint256 deadline\n```",
          "loc": [
            "[41-48](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L41-L48)",
            "[139-145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L139-L145)",
            "[193-198](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L193-L198)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n37: \t\t    constructor(\n38: \t\t        INonfungiblePositionManager _npm,\n39: \t\t        address _operator,\n40: \t\t        address _withdrawer,\n41: \t\t        uint32 _TWAPSeconds,\n42: \t\t        uint16 _maxTWAPTickDifference\n\n266: \t\t    function _withdrawBalanceInternal(uint256 tokenId, address token, address to, uint256 balance, uint256 amount)\n```",
          "loc": [
            "[37-42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L37-L42)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L266)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n25: \t\t    constructor(\n26: \t\t        INonfungiblePositionManager _npm,\n27: \t\t        address _operator,\n28: \t\t        address _withdrawer,\n29: \t\t        uint32 _TWAPSeconds,\n30: \t\t        uint16 _maxTWAPTickDifference,\n31: \t\t        address _zeroxRouter,\n32: \t\t        address _universalRouter\n```",
          "loc": [
            "[25-32](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L25-L32)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n98: \t\t    function executeWithPermit(uint256 tokenId, Instructions memory instructions, uint8 v, bytes32 r, bytes32 s)\n\n566: \t\t    function _prepareAddApproved(\n567: \t\t        IERC20 token0,\n568: \t\t        IERC20 token1,\n569: \t\t        IERC20 otherToken,\n570: \t\t        uint256 amount0,\n571: \t\t        uint256 amount1,\n572: \t\t        uint256 amountOther\n\n598: \t\t    function _prepareAddPermit2(\n599: \t\t        IERC20 token0,\n600: \t\t        IERC20 token1,\n601: \t\t        IERC20 otherToken,\n602: \t\t        uint256 amount0,\n603: \t\t        uint256 amount1,\n604: \t\t        uint256 amountOther,\n605: \t\t        IPermit2.PermitBatchTransferFrom memory permit,\n606: \t\t        bytes memory signature\n\n653: \t\t    function _prepareAdd(\n654: \t\t        IERC20 token0,\n655: \t\t        IERC20 token1,\n656: \t\t        IERC20 otherToken,\n657: \t\t        uint256 amount0,\n658: \t\t        uint256 amount1,\n659: \t\t        uint256 amountOther\n\n841: \t\t    function _returnLeftoverTokens(\n842: \t\t        address to,\n843: \t\t        IERC20 token0,\n844: \t\t        IERC20 token1,\n845: \t\t        uint256 total0,\n846: \t\t        uint256 total1,\n847: \t\t        uint256 added0,\n848: \t\t        uint256 added1,\n849: \t\t        bool unwrap\n\n877: \t\t    function _decreaseLiquidity(\n878: \t\t        uint256 tokenId,\n879: \t\t        uint128 liquidity,\n880: \t\t        uint256 deadline,\n881: \t\t        uint256 token0Min,\n882: \t\t        uint256 token1Min\n\n892: \t\t    function _collectFees(uint256 tokenId, IERC20 token0, IERC20 token1, uint128 collectAmount0, uint128 collectAmount1)\n```",
          "loc": [
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L98)",
            "[566-572](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L566-L572)",
            "[598-606](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L598-L606)",
            "[653-659](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L653-L659)",
            "[841-849](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L841-L849)",
            "[877-882](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L877-L882)",
            "[892](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L892)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Returning a struct instead of returning many variables is better",
      "description": "If a function returns [too many variables](https://docs.soliditylang.org/en/latest/contracts.html#returning-multiple-values), replacing them with a struct can improve code readability, maintainability and reusability.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n95: \t\t    function getValue(uint256 tokenId, address token)\n96: \t\t        external\n97: \t\t        view\n98: \t\t        override\n99: \t\t        returns (uint256 value, uint256 feeValue, uint256 price0X96, uint256 price1X96)\n\n162: \t\t    function getPositionBreakdown(uint256 tokenId)\n163: \t\t        public\n164: \t\t        view\n165: \t\t        override\n166: \t\t        returns (\n167: \t\t            address token0,\n168: \t\t            address token1,\n169: \t\t            uint24 fee,\n170: \t\t            uint128 liquidity,\n171: \t\t            uint256 amount0,\n172: \t\t            uint256 amount1,\n173: \t\t            uint128 fees0,\n174: \t\t            uint128 fees1\n\n426: \t\t    function _getAmounts(PositionState memory state)\n427: \t\t        internal\n428: \t\t        view\n429: \t\t        returns (uint256 amount0, uint256 amount1, uint128 fees0, uint128 fees1)\n```",
          "loc": [
            "[95-99](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L95-L99)",
            "[162-174](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L162-L174)",
            "[426-429](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L426-L429)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n195: \t\t    function vaultInfo()\n196: \t\t        external\n197: \t\t        view\n198: \t\t        override\n199: \t\t        returns (\n200: \t\t            uint256 debt,\n201: \t\t            uint256 lent,\n202: \t\t            uint256 balance,\n203: \t\t            uint256 available,\n204: \t\t            uint256 reserves,\n205: \t\t            uint256 debtExchangeRateX96,\n206: \t\t            uint256 lendExchangeRateX96\n\n231: \t\t    function loanInfo(uint256 tokenId)\n232: \t\t        external\n233: \t\t        view\n234: \t\t        override\n235: \t\t        returns (\n236: \t\t            uint256 debt,\n237: \t\t            uint256 fullValue,\n238: \t\t            uint256 collateralValue,\n239: \t\t            uint256 liquidationCost,\n240: \t\t            uint256 liquidationValue\n\n1270: \t\t    function _checkLoanIsHealthy(uint256 tokenId, uint256 debt)\n1271: \t\t        internal\n1272: \t\t        view\n1273: \t\t        returns (bool isHealthy, uint256 fullValue, uint256 collateralValue, uint256 feeValue)\n```",
          "loc": [
            "[195-206](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L195-L206)",
            "[231-240](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L231-L240)",
            "[1270-1273](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1270-L1273)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n139: \t\t    function _validateSwap(\n140: \t\t        bool swap0For1,\n141: \t\t        uint256 amountIn,\n142: \t\t        IUniswapV3Pool pool,\n143: \t\t        uint32 twapPeriod,\n144: \t\t        uint16 maxTickDifference,\n145: \t\t        uint64 maxPriceDifferenceX64\n146: \t\t    ) internal view returns (uint256 amountOutMin, int24 currentTick, uint160 sqrtPriceX96, uint256 priceX96) {\n\n193: \t\t    function _decreaseFullLiquidityAndCollect(\n194: \t\t        uint256 tokenId,\n195: \t\t        uint128 liquidity,\n196: \t\t        uint256 amountRemoveMin0,\n197: \t\t        uint256 amountRemoveMin1,\n198: \t\t        uint256 deadline\n199: \t\t    ) internal returns (uint256 amount0, uint256 amount1, uint256 feeAmount0, uint256 feeAmount1) {\n```",
          "loc": [
            "[139-146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L139-L146)",
            "[193-199](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L193-L199)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n467: \t\t    function swapAndMint(SwapAndMintParams calldata params)\n468: \t\t        external\n469: \t\t        payable\n470: \t\t        returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1)\n\n705: \t\t    function _swapAndMint(SwapAndMintParams memory params, bool unwrap)\n706: \t\t        internal\n707: \t\t        returns (uint256 tokenId, uint128 liquidity, uint256 added0, uint256 added1)\n```",
          "loc": [
            "[467-470](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L467-L470)",
            "[705-707](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L705-L707)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Event is missing `msg.sender` parameter",
      "description": "The following functions are missing some parameters when emitting an event: when dealing with a source address which uses the value of `msg.sender`, the `msg.sender` value should be specified in every event.\n\nOtherwise, a contract or web page listening to events cannot react to connected users: basically, those events cannot be used properly.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n100: \t\t        emit SetValues(baseRatePerYearX96, multiplierPerYearX96, jumpMultiplierPerYearX96, _kinkX96);\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L100)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n190: \t\t        emit SetMaxPoolPriceDifference(_maxPoolPriceDifference);\n\n242: \t\t        emit TokenConfigUpdated(token, config);\n\n243: \t\t        emit OracleModeUpdated(token, mode);\n\n260: \t\t        emit OracleModeUpdated(token, mode);\n\n267: \t\t        emit SetEmergencyAdmin(admin);\n```",
          "loc": [
            "[190](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L190)",
            "[242](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L242)",
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L243)",
            "[260](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L260)",
            "[267](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L267)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n449: \t\t            emit Add(tokenId, owner, 0);\n\n464: \t\t                emit Add(tokenId, owner, oldTokenId);\n\n601: \t\t        emit Borrow(tokenId, owner, assets, shares);\n\n645: \t\t        emit WithdrawCollateral(params.tokenId, owner, params.recipient, params.liquidity, amount0, amount1);\n\n782: \t\t        emit WithdrawReserves(amount, receiver);\n\n798: \t\t        emit SetTransformer(transformer, active);\n\n830: \t\t        emit SetLimits(\n831: \t\t            _minLoanSize, _globalLendLimit, _globalDebtLimit, _dailyLendIncreaseLimitMin, _dailyDebtIncreaseLimitMin\n832: \t\t        );\n\n839: \t\t        emit SetReserveFactor(_reserveFactorX32);\n\n849: \t\t        emit SetReserveProtectionFactor(_reserveProtectionFactorX32);\n\n865: \t\t        emit SetTokenConfig(token, collateralFactorX32, collateralValueLimitFactorX32);\n\n872: \t\t        emit SetEmergencyAdmin(admin);\n\n1084: \t\t        emit Remove(tokenId, owner);\n\n1139: \t\t            emit ExchangeRateUpdate(newDebtExchangeRateX96, newLendExchangeRateX96);\n\n1160: \t\t            emit ExchangeRateUpdate(newDebtExchangeRateX96, newLendExchangeRateX96);\n```",
          "loc": [
            "[782](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L782)",
            "[449](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L449)",
            "[464](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L464)",
            "[601](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L601)",
            "[645](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L645)",
            "[798](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L798)",
            "[830-832](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L830-L832)",
            "[839](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L839)",
            "[849](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L849)",
            "[865](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L865)",
            "[872](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L872)",
            "[1084](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1084)",
            "[1139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1139)",
            "[1160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1160)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n208: \t\t        emit PositionConfigured(params.tokenId, false, false, false, 0, 0, 0, 0, false, 0);\n\n232: \t\t        emit PositionConfigured(\n233: \t\t            tokenId,\n234: \t\t            config.isActive,\n235: \t\t            config.token0Swap,\n236: \t\t            config.token1Swap,\n237: \t\t            config.token0TriggerTick,\n238: \t\t            config.token1TriggerTick,\n239: \t\t            config.token0SlippageX64,\n240: \t\t            config.token1SlippageX64,\n241: \t\t            config.onlyFees,\n242: \t\t            config.maxRewardX64\n243: \t\t        );\n```",
          "loc": [
            "[208](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L208)",
            "[232-243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L232-L243)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n60: \t\t        emit WithdrawerChanged(_withdrawer);\n\n70: \t\t        emit OperatorChanged(_operator, _active);\n\n80: \t\t        emit VaultChanged(_vault, _active);\n\n94: \t\t        emit TWAPConfigChanged(_TWAPSeconds, _maxTWAPTickDifference);\n```",
          "loc": [
            "[60](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L60)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L70)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L80)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L94)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n251: \t\t        emit BalanceAdded(tokenId, token, amount);\n\n259: \t\t                emit BalanceAdded(tokenId, token, amount - currentBalance);\n\n261: \t\t                emit BalanceRemoved(tokenId, token, currentBalance - amount);\n\n271: \t\t        emit BalanceRemoved(tokenId, token, amount);\n\n273: \t\t        emit BalanceWithdrawn(tokenId, token, to, amount);\n```",
          "loc": [
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L251)",
            "[259](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L259)",
            "[261](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L261)",
            "[271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L271)",
            "[273](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L273)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n252: \t\t            emit PositionConfigured(\n253: \t\t                state.newTokenId,\n254: \t\t                config.lowerTickLimit,\n255: \t\t                config.upperTickLimit,\n256: \t\t                config.lowerTickDelta,\n257: \t\t                config.upperTickDelta,\n258: \t\t                config.token0SlippageX64,\n259: \t\t                config.token1SlippageX64,\n260: \t\t                config.onlyFees,\n261: \t\t                config.maxRewardX64\n262: \t\t            );\n\n266: \t\t            emit PositionConfigured(params.tokenId, 0, 0, 0, 0, 0, 0, false, 0);\n\n268: \t\t            emit RangeChanged(params.tokenId, state.newTokenId);\n\n286: \t\t        emit PositionConfigured(\n287: \t\t            tokenId,\n288: \t\t            config.lowerTickLimit,\n289: \t\t            config.upperTickLimit,\n290: \t\t            config.lowerTickDelta,\n291: \t\t            config.upperTickDelta,\n292: \t\t            config.token0SlippageX64,\n293: \t\t            config.token1SlippageX64,\n294: \t\t            config.onlyFees,\n295: \t\t            config.maxRewardX64\n296: \t\t        );\n```",
          "loc": [
            "[252-262](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L252-L262)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L266)",
            "[268](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L268)",
            "[286-296](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L286-L296)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n218: \t\t            emit CompoundFees(tokenId, liquidity, amount0, amount1);\n\n303: \t\t            emit ChangeRange(tokenId, newTokenId);\n\n348: \t\t            emit WithdrawAndCollectAndSwap(tokenId, instructions.targetToken, targetAmount);\n\n729: \t\t        emit SwapAndMint(tokenId, liquidity, added0, added1);\n\n773: \t\t        emit SwapAndIncreaseLiquidity(params.tokenId, liquidity, added0, added1);\n```",
          "loc": [
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L218)",
            "[303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L303)",
            "[348](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L348)",
            "[729](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L729)",
            "[773](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L773)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n116: \t\t            emit Swap(address(params.tokenIn), address(params.tokenOut), amountInDelta, amountOutDelta);\n```",
          "loc": [
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L116)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Events should emit both new and old values",
      "description": "Events are generally emitted when sensitive changes are made to the contracts.\n\nHowever, some are missing important parameters, as they should include both the new value and old value where possible.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n100: \t\t        emit SetValues(baseRatePerYearX96, multiplierPerYearX96, jumpMultiplierPerYearX96, _kinkX96);\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L100)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n190: \t\t        emit SetMaxPoolPriceDifference(_maxPoolPriceDifference);\n\n242: \t\t        emit TokenConfigUpdated(token, config);\n\n243: \t\t        emit OracleModeUpdated(token, mode);\n\n260: \t\t        emit OracleModeUpdated(token, mode);\n\n267: \t\t        emit SetEmergencyAdmin(admin);\n```",
          "loc": [
            "[190](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L190)",
            "[242](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L242)",
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L243)",
            "[260](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L260)",
            "[267](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L267)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n798: \t\t        emit SetTransformer(transformer, active);\n\n830: \t\t        emit SetLimits(\n831: \t\t            _minLoanSize, _globalLendLimit, _globalDebtLimit, _dailyLendIncreaseLimitMin, _dailyDebtIncreaseLimitMin\n832: \t\t        );\n\n839: \t\t        emit SetReserveFactor(_reserveFactorX32);\n\n849: \t\t        emit SetReserveProtectionFactor(_reserveProtectionFactorX32);\n\n865: \t\t        emit SetTokenConfig(token, collateralFactorX32, collateralValueLimitFactorX32);\n\n872: \t\t        emit SetEmergencyAdmin(admin);\n```",
          "loc": [
            "[798](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L798)",
            "[830-832](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L830-L832)",
            "[839](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L839)",
            "[849](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L849)",
            "[865](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L865)",
            "[872](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L872)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n60: \t\t        emit WithdrawerChanged(_withdrawer);\n\n70: \t\t        emit OperatorChanged(_operator, _active);\n\n80: \t\t        emit VaultChanged(_vault, _active);\n\n94: \t\t        emit TWAPConfigChanged(_TWAPSeconds, _maxTWAPTickDifference);\n```",
          "loc": [
            "[60](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L60)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L70)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L80)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L94)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n246: \t\t        emit RewardUpdated(msg.sender, _totalRewardX64);\n\n259: \t\t                emit BalanceAdded(tokenId, token, amount - currentBalance);\n\n261: \t\t                emit BalanceRemoved(tokenId, token, currentBalance - amount);\n```",
          "loc": [
            "[246](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L246)",
            "[259](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L259)",
            "[261](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L261)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Events may be emitted out of order due to reentrancy",
      "description": "If a reentrancy occurs, some events may be emitted in an unexpected order, and this may be a problem if a third party expects a specific order for these events. Ensure that events follow the best practice of CEI.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit feed.decimals()\n242: \t\t        emit TokenConfigUpdated(token, config);\n\n// @audit feed.decimals()\n243: \t\t        emit OracleModeUpdated(token, mode);\n```",
          "loc": [
            "[242](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L242)",
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L243)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit nonfungiblePositionManager.decreaseLiquidity(\r\n            INonfungiblePositionManager.DecreaseLiquidityParams(\r\n                params.tokenId, params.liquidity, params.amount0Min, params.amount1Min, params.deadline\r\n            )\r\n        )\n645: \t\t        emit WithdrawCollateral(params.tokenId, owner, params.recipient, params.liquidity, amount0, amount1);\n\n// @audit permit2.permitTransferFrom(\r\n                permit,\r\n                ISignatureTransfer.SignatureTransferDetails(address(this), state.liquidatorCost),\r\n                msg.sender,\r\n                signature\r\n            )\n746: \t\t        emit Liquidate(\n747: \t\t            params.tokenId,\n748: \t\t            msg.sender,\n749: \t\t            owner,\n750: \t\t            state.fullValue,\n751: \t\t            state.liquidatorCost,\n752: \t\t            amount0,\n753: \t\t            amount1,\n754: \t\t            state.reserveCost,\n755: \t\t            state.missing\n756: \t\t        );\n\n// @audit permit2.permitTransferFrom(\r\n                permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\r\n            )\n916: \t\t        emit Deposit(msg.sender, receiver, assets, shares);\n\n// @audit permit2.permitTransferFrom(\r\n                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\r\n                )\n1013: \t\t        emit Repay(tokenId, msg.sender, owner, assets, shares);\n\n// @audit nonfungiblePositionManager.safeTransferFrom(address(this), owner, tokenId)\n1084: \t\t        emit Remove(tokenId, owner);\n```",
          "loc": [
            "[645](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L645)",
            "[746-756](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L746-L756)",
            "[916](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L916)",
            "[1013](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1013)",
            "[1084](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1084)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit nonfungiblePositionManager.positions(params.tokenId)\n208: \t\t        emit PositionConfigured(params.tokenId, false, false, false, 0, 0, 0, 0, false, 0);\n\n// @audit nonfungiblePositionManager.positions(params.tokenId)\n211: \t\t        emit Executed(\n212: \t\t            params.tokenId, msg.sender, state.isSwap, state.amount0, state.amount1, state.token0, state.token1\n213: \t\t        );\n\n// @audit nonfungiblePositionManager.ownerOf(tokenId)\n232: \t\t        emit PositionConfigured(\n233: \t\t            tokenId,\n234: \t\t            config.isActive,\n235: \t\t            config.token0Swap,\n236: \t\t            config.token1Swap,\n237: \t\t            config.token0TriggerTick,\n238: \t\t            config.token1TriggerTick,\n239: \t\t            config.token0SlippageX64,\n240: \t\t            config.token1SlippageX64,\n241: \t\t            config.onlyFees,\n242: \t\t            config.maxRewardX64\n243: \t\t        );\n```",
          "loc": [
            "[208](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L208)",
            "[211-213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L211-L213)",
            "[232-243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L232-L243)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit nonfungiblePositionManager.collect(\r\n            INonfungiblePositionManager.CollectParams(\r\n                params.tokenId, address(this), type(uint128).max, type(uint128).max\r\n            )\r\n        )\n183: \t\t        emit AutoCompounded(\n184: \t\t            msg.sender,\n185: \t\t            params.tokenId,\n186: \t\t            state.compounded0,\n187: \t\t            state.compounded1,\n188: \t\t            state.amount0Fees,\n189: \t\t            state.amount1Fees,\n190: \t\t            state.token0,\n191: \t\t            state.token1\n192: \t\t        );\n```",
          "loc": [
            "[183-192](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L183-L192)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit nonfungiblePositionManager.positions(params.tokenId)\n252: \t\t            emit PositionConfigured(\n253: \t\t                state.newTokenId,\n254: \t\t                config.lowerTickLimit,\n255: \t\t                config.upperTickLimit,\n256: \t\t                config.lowerTickDelta,\n257: \t\t                config.upperTickDelta,\n258: \t\t                config.token0SlippageX64,\n259: \t\t                config.token1SlippageX64,\n260: \t\t                config.onlyFees,\n261: \t\t                config.maxRewardX64\n262: \t\t            );\n\n// @audit nonfungiblePositionManager.positions(params.tokenId)\n266: \t\t            emit PositionConfigured(params.tokenId, 0, 0, 0, 0, 0, 0, false, 0);\n\n// @audit nonfungiblePositionManager.positions(params.tokenId)\n268: \t\t            emit RangeChanged(params.tokenId, state.newTokenId);\n```",
          "loc": [
            "[252-262](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L252-L262)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L266)",
            "[268](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L268)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit nonfungiblePositionManager.positions(tokenId)\n218: \t\t            emit CompoundFees(tokenId, liquidity, amount0, amount1);\n\n// @audit nonfungiblePositionManager.positions(tokenId)\n303: \t\t            emit ChangeRange(tokenId, newTokenId);\n\n// @audit nonfungiblePositionManager.positions(tokenId)\n348: \t\t            emit WithdrawAndCollectAndSwap(tokenId, instructions.targetToken, targetAmount);\n\n// @audit nonfungiblePositionManager.mint(mintParams)\n729: \t\t        emit SwapAndMint(tokenId, liquidity, added0, added1);\n\n// @audit nonfungiblePositionManager.increaseLiquidity(increaseLiquidityParams)\n773: \t\t        emit SwapAndIncreaseLiquidity(params.tokenId, liquidity, added0, added1);\n```",
          "loc": [
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L218)",
            "[303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L303)",
            "[348](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L348)",
            "[729](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L729)",
            "[773](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L773)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit params.tokenIn.balanceOf(address(this))\n116: \t\t            emit Swap(address(params.tokenIn), address(params.tokenOut), amountInDelta, amountOutDelta);\n```",
          "loc": [
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L116)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use of polymorphism is discouraged for security audits",
      "description": "A duplicated function name in the same contract might have problems with automated auditing tools, so it should be avoided. Consider always using a different name for functions to improve the readability of the code.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit found also on line 360\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n// @audit found also on line 366\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n// @audit found also on line 652\n661: \t\t    function repay(uint256 tokenId, uint256 amount, bool isShare, bytes calldata permitData) external override {\n```",
          "loc": [
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[661](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L661)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Constants in comparisons should appear on the left side",
      "description": "This is useful to avoid doing some [typo bugs](https://www.moserware.com/2008/01/constants-on-left-are-better-but-this.html).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n47: \t\t        if (debt == 0) {\n```",
          "loc": [
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L47)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n300: \t\t            chainlinkReferencePriceX96 = cachedChainlinkReferencePriceX96 == 0\n\n362: \t\t        if (twapSeconds == 0) {\n```",
          "loc": [
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L300)",
            "[362](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L362)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n441: \t\t        if (transformedTokenId == 0) {\n\n502: \t\t        if (tokenId == 0 || !transformerAllowList[transformer]) {\n```",
          "loc": [
            "[441](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L441)",
            "[502](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L502)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n124: \t\t        if (state.liquidity == 0) {\n\n149: \t\t            if (params.swapData.length == 0) {\n```",
          "loc": [
            "[124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L124)",
            "[149](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L149)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n279: \t\t        if (allowance0 == 0) {\n\n283: \t\t        if (allowance1 == 0) {\n```",
          "loc": [
            "[279](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L279)",
            "[283](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L283)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n301: \t\t        if (fee == 10000) {\n\n303: \t\t        } else if (fee == 3000) {\n\n305: \t\t        } else if (fee == 500) {\n```",
          "loc": [
            "[303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L303)",
            "[301](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L301)",
            "[305](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L305)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n120: \t\t        if (instructions.liquidity != 0) {\n\n342: \t\t            if (targetAmount != 0 && instructions.targetToken != address(0)) {\n\n420: \t\t        if (amountOut != 0) {\n\n426: \t\t        if (leftOver != 0) {\n\n500: \t\t        (tokenId, liquidity, amount0, amount1) = _swapAndMint(params, msg.value != 0);\n\n563: \t\t        (liquidity, amount0, amount1) = _swapAndIncrease(params, IERC20(token0), IERC20(token1), msg.value != 0);\n\n666: \t\t        if (msg.value != 0) {\n\n822: \t\t            if (leftOver != 0) {\n\n830: \t\t        if (total0 != 0) {\n\n834: \t\t        if (total1 != 0) {\n\n855: \t\t        if (left0 != 0) {\n\n858: \t\t        if (left1 != 0) {\n\n884: \t\t        if (liquidity != 0) {\n```",
          "loc": [
            "[858](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L858)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L120)",
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L342)",
            "[420](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L420)",
            "[426](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L426)",
            "[500](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L500)",
            "[563](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L563)",
            "[666](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L666)",
            "[822](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L822)",
            "[830](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L830)",
            "[834](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L834)",
            "[855](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L855)",
            "[884](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L884)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n43: \t\t        if (liquidationCost == 0) {\n```",
          "loc": [
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L43)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n77: \t\t        if (params.amountIn != 0 && params.swapData.length != 0 && address(params.tokenOut) != address(0)) {\n\n77: \t\t        if (params.amountIn != 0 && params.swapData.length != 0 && address(params.tokenOut) != address(0)) {\n```",
          "loc": [
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L77)",
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L77)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using `delete` instead of assigning zero/false to clear values",
      "description": "The `delete` keyword more closely matches the semantics of what is being done, and draws more attention to the changing of state, which may lead to a more thorough audit of its associated logic.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n366: \t\t            secondsAgos[0] = 0; // from (before)\n```",
          "loc": [
            "[366](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L366)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n542: \t\t        transformedTokenId = 0;\n\n1053: \t\t                liquidity = 0;\n```",
          "loc": [
            "[542](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L542)",
            "[1053](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1053)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n182: \t\t        secondsAgos[0] = 0; // from (before)\n```",
          "loc": [
            "[182](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L182)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n136: \t\t                        amountIn = 0;\n```",
          "loc": [
            "[136](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L136)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use a ternary statement instead of `if`/`else` when appropriate",
      "description": "The `if`/`else` statement can be written in a shorthand way using the ternary operator, as it increases readability and reduces the number of lines of code.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n315: \t\t        if (value >= globalLendLimit) {\n316: \t\t            return 0;\n317: \t\t        } else {\n318: \t\t            return _convertToShares(globalLendLimit - value, lendExchangeRateX96, Math.Rounding.Down);\n319: \t\t        }\n```",
          "loc": [
            "[315-319](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L315-L319)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n157: \t\t        if (swap0For1) {\n158: \t\t            amountOutMin = FullMath.mulDiv(amountIn * (Q64 - maxPriceDifferenceX64), priceX96, Q96 * Q64);\n159: \t\t        } else {\n160: \t\t            amountOutMin = FullMath.mulDiv(amountIn * (Q64 - maxPriceDifferenceX64), Q96, priceX96 * Q64);\n161: \t\t        }\n\n172: \t\t        if (twapOk) {\n173: \t\t            return twapTick - currentTick >= -int16(maxDifference) && twapTick - currentTick <= int16(maxDifference);\n174: \t\t        } else {\n175: \t\t            return false;\n176: \t\t        }\n```",
          "loc": [
            "[172-176](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L172-L176)",
            "[157-161](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L157-L161)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named mappings",
      "description": "Named mappings improve the readability of the code, even if they are optional, as it's possible to infer the usage of both key and value, instead of looking just at the type.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n56: \t\t    mapping(address => TokenConfig) public feedConfigs;\n```",
          "loc": [
            "[56](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L56)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n115: \t\t    mapping(address => TokenConfig) public tokenConfigs;\n\n154: \t\t    mapping(uint256 => Loan) public loans; // tokenID -> loan mapping\n\n157: \t\t    mapping(address => uint256[]) private ownedTokens; // Mapping from owner address to list of owned token IDs\n\n158: \t\t    mapping(uint256 => uint256) private ownedTokensIndex; // Mapping from token ID to index of the owner tokens list (for removal without loop)\n\n159: \t\t    mapping(uint256 => address) private tokenOwner; // Mapping from token ID to owner\n\n163: \t\t    mapping(address => bool) public transformerAllowList; // contracts allowed to transform positions (selected audited contracts e.g. V3Utils)\n\n164: \t\t    mapping(address => mapping(uint256 => mapping(address => bool))) public transformApprovals; // owners permissions for other addresses to call transform on owners behalf (e.g. AutoRange contract)\n\n164: \t\t    mapping(address => mapping(uint256 => mapping(address => bool))) public transformApprovals; // owners permissions for other addresses to call transform on owners behalf (e.g. AutoRange contract)\n\n164: \t\t    mapping(address => mapping(uint256 => mapping(address => bool))) public transformApprovals; // owners permissions for other addresses to call transform on owners behalf (e.g. AutoRange contract)\n```",
          "loc": [
            "[164](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L164)",
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L115)",
            "[154](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L154)",
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L157)",
            "[158](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L158)",
            "[159](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L159)",
            "[163](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L163)",
            "[164](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L164)",
            "[164](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L164)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n60: \t\t    mapping(uint256 => PositionConfig) public positionConfigs;\n```",
          "loc": [
            "[60](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L60)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n34: \t\t    mapping(address => bool) public operators;\n\n35: \t\t    mapping(address => bool) public vaults;\n```",
          "loc": [
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L34)",
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n45: \t\t    mapping(uint256 => mapping(address => uint256)) public positionBalances;\n\n45: \t\t    mapping(uint256 => mapping(address => uint256)) public positionBalances;\n```",
          "loc": [
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L45)",
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L45)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n50: \t\t    mapping(uint256 => PositionConfig) public positionConfigs;\n```",
          "loc": [
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L50)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named returns",
      "description": "Using named returns makes the code more self-documenting, makes it easier to fill out NatSpec, and in some cases can save gas. The cases below are where there currently is at most one return statement, which is ideal for named returns.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n46: \t\t    function getUtilizationRateX96(uint256 cash, uint256 debt) public pure returns (uint256) {\n```",
          "loc": [
            "[46](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L46)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n329: \t\t    function _getChainlinkPriceX96(address token) internal view returns (uint256) {\n\n359: \t\t    function _getReferencePoolPriceX96(IUniswapV3Pool pool, uint32 twapSeconds) internal view returns (uint256) {\n\n499: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[359](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L359)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L329)",
            "[499](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L499)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n264: \t\t    function loanCount(address owner) external view override returns (uint256) {\n\n271: \t\t    function loanAtIndex(address owner, uint256 index) external view override returns (uint256) {\n\n277: \t\t    function decimals() public view override(IERC20Metadata, ERC20) returns (uint8) {\n\n284: \t\t    function totalAssets() public view override returns (uint256) {\n\n301: \t\t    function maxDeposit(address) external view override returns (uint256) {\n\n312: \t\t    function maxMint(address) external view override returns (uint256) {\n\n323: \t\t    function maxWithdraw(address owner) external view override returns (uint256) {\n\n329: \t\t    function maxRedeem(address owner) external view override returns (uint256) {\n\n334: \t\t    function previewDeposit(uint256 assets) public view override returns (uint256) {\n\n340: \t\t    function previewMint(uint256 shares) public view override returns (uint256) {\n\n346: \t\t    function previewWithdraw(uint256 assets) public view override returns (uint256) {\n\n352: \t\t    function previewRedeem(uint256 shares) public view override returns (uint256) {\n\n360: \t\t    function deposit(uint256 assets, address receiver) external override returns (uint256) {\n\n366: \t\t    function mint(uint256 shares, address receiver) external override returns (uint256) {\n\n372: \t\t    function withdraw(uint256 assets, address receiver, address owner) external override returns (uint256) {\n\n378: \t\t    function redeem(uint256 shares, address receiver, address owner) external override returns (uint256) {\n\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n429: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n430: \t\t        external\n431: \t\t        override\n432: \t\t        returns (bytes4)\n\n1143: \t\t    function _calculateTokenCollateralFactorX32(uint256 tokenId) internal view returns (uint32) {\n\n1281: \t\t    function _convertToShares(uint256 amount, uint256 exchangeRateX96, Math.Rounding rounding)\n1282: \t\t        internal\n1283: \t\t        pure\n1284: \t\t        returns (uint256)\n\n1289: \t\t    function _convertToAssets(uint256 shares, uint256 exchangeRateX96, Math.Rounding rounding)\n1290: \t\t        internal\n1291: \t\t        pure\n1292: \t\t        returns (uint256)\n```",
          "loc": [
            "[271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L271)",
            "[264](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L264)",
            "[277](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L277)",
            "[284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L284)",
            "[301](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L301)",
            "[312](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L312)",
            "[323](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L323)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L329)",
            "[334](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L334)",
            "[340](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L340)",
            "[346](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L346)",
            "[352](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L352)",
            "[360](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L360)",
            "[366](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L366)",
            "[372](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L372)",
            "[378](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L378)",
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[429-432](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L429-L432)",
            "[1143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1143)",
            "[1281-1284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1281-L1284)",
            "[1289-1292](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1289-L1292)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n167: \t\t        internal\n168: \t\t        view\n169: \t\t        returns (bool)\n\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n```",
          "loc": [
            "[166-169](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166-L169)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n300: \t\t    function _getTickSpacing(uint24 fee) internal view returns (int24) {\n```",
          "loc": [
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L300)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n356: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n357: \t\t        external\n358: \t\t        override\n359: \t\t        returns (bytes4)\n```",
          "loc": [
            "[356-359](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L356-L359)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n171: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L171)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Layout order does not comply with best practices",
      "description": "This is a [best practice](https://docs.soliditylang.org/en/latest/style-guide.html#order-of-layout) that should be followed.\n\nInside each contract, library or interface, use the following order:\n\n1. Type declarations\n2. State variables\n3. Events\n4. Errors\n5. Modifiers\n6. Functions",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit event SetValues found on line 18\n23: \t\t    uint256 public multiplierPerSecondX96;\n```",
          "loc": [
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L23)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit event SetEmergencyAdmin found on line 33\n56: \t\t    mapping(address => TokenConfig) public feedConfigs;\n```",
          "loc": [
            "[56](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L56)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit event SetEmergencyAdmin found on line 106\n115: \t\t    mapping(address => TokenConfig) public tokenConfigs;\n```",
          "loc": [
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L115)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit function constructor found on line 33\n60: \t\t    mapping(uint256 => PositionConfig) public positionConfigs;\n```",
          "loc": [
            "[60](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L60)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit event TWAPConfigChanged found on line 31\n34: \t\t    mapping(address => bool) public operators;\n```",
          "loc": [
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L34)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit function constructor found on line 37\n45: \t\t    mapping(uint256 => mapping(address => uint256)) public positionBalances;\n```",
          "loc": [
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L45)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit function constructor found on line 25\n50: \t\t    mapping(uint256 => PositionConfig) public positionConfigs;\n```",
          "loc": [
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L50)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit event Swap found on line 18\n21: \t\t    IWETH9 public immutable weth;\n```",
          "loc": [
            "[21](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L21)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`mapping` definitions do not comply with best practices",
      "description": "This is a [best practice](https://docs.soliditylang.org/en/latest/style-guide.html#mappings) that should be followed. In variable declarations, do not separate the keyword mapping from its type by a space. Do not separate any nested mapping keyword from its type by whitespace.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n154: \t\t    mapping(uint256 => Loan) public loans; // tokenID -> loan mapping\n```",
          "loc": [
            "[154](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L154)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Function visibility order does not comply with best practices",
      "description": "This is a [best practice](https://docs.soliditylang.org/en/latest/style-guide.html#order-of-functions) that should be followed.\n\nFunctions should be grouped according to their visibility and ordered:\n\n1. constructor\n2. receive function (if exists)\n3. fallback function (if exists)\n4. external\n5. public\n6. internal\n7. private\n\nWithin a grouping, place the view and pure functions last.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit _requireMaxDifference on line 139, which is internal\n162: \t\t    function getPositionBreakdown(uint256 tokenId)\n\n// @audit _requireMaxDifference on line 139, which is internal\n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n// @audit _requireMaxDifference on line 139, which is internal\n201: \t\t    function setTokenConfig(\n\n// @audit _requireMaxDifference on line 139, which is internal\n249: \t\t    function setOracleMode(address token, Mode mode) external {\n\n// @audit _requireMaxDifference on line 139, which is internal\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[162](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L162)",
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)",
            "[201](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201)",
            "[249](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L249)",
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit totalAssets on line 284, which is public\n289: \t\t    function convertToShares(uint256 assets) external view override returns (uint256 shares) {\n\n// @audit totalAssets on line 284, which is public\n295: \t\t    function convertToAssets(uint256 shares) external view override returns (uint256 assets) {\n\n// @audit totalAssets on line 284, which is public\n301: \t\t    function maxDeposit(address) external view override returns (uint256) {\n\n// @audit totalAssets on line 284, which is public\n312: \t\t    function maxMint(address) external view override returns (uint256) {\n\n// @audit totalAssets on line 284, which is public\n323: \t\t    function maxWithdraw(address owner) external view override returns (uint256) {\n\n// @audit totalAssets on line 284, which is public\n329: \t\t    function maxRedeem(address owner) external view override returns (uint256) {\n\n// @audit previewRedeem on line 352, which is public\n360: \t\t    function deposit(uint256 assets, address receiver) external override returns (uint256) {\n\n// @audit previewRedeem on line 352, which is public\n366: \t\t    function mint(uint256 shares, address receiver) external override returns (uint256) {\n\n// @audit previewRedeem on line 352, which is public\n372: \t\t    function withdraw(uint256 assets, address receiver, address owner) external override returns (uint256) {\n\n// @audit previewRedeem on line 352, which is public\n378: \t\t    function redeem(uint256 shares, address receiver, address owner) external override returns (uint256) {\n\n// @audit previewRedeem on line 352, which is public\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n// @audit previewRedeem on line 352, which is public\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n// @audit previewRedeem on line 352, which is public\n400: \t\t    function create(uint256 tokenId, address recipient) external override {\n\n// @audit previewRedeem on line 352, which is public\n410: \t\t    function createWithPermit(\n\n// @audit previewRedeem on line 352, which is public\n429: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n\n// @audit previewRedeem on line 352, which is public\n483: \t\t    function approveTransform(uint256 tokenId, address target, bool isActive) external override {\n\n// @audit previewRedeem on line 352, which is public\n497: \t\t    function transform(uint256 tokenId, address transformer, bytes calldata data)\n\n// @audit previewRedeem on line 352, which is public\n550: \t\t    function borrow(uint256 tokenId, uint256 assets) external override {\n\n// @audit previewRedeem on line 352, which is public\n609: \t\t    function decreaseLiquidityAndCollect(DecreaseLiquidityAndCollectParams calldata params)\n\n// @audit previewRedeem on line 352, which is public\n652: \t\t    function repay(uint256 tokenId, uint256 amount, bool isShare) external override {\n\n// @audit previewRedeem on line 352, which is public\n661: \t\t    function repay(uint256 tokenId, uint256 amount, bool isShare, bytes calldata permitData) external override {\n\n// @audit previewRedeem on line 352, which is public\n685: \t\t    function liquidate(LiquidateParams calldata params) external override returns (uint256 amount0, uint256 amount1) {\n\n// @audit previewRedeem on line 352, which is public\n765: \t\t    function withdrawReserves(uint256 amount, address receiver) external onlyOwner {\n\n// @audit previewRedeem on line 352, which is public\n788: \t\t    function setTransformer(address transformer, bool active) external onlyOwner {\n\n// @audit previewRedeem on line 352, which is public\n807: \t\t    function setLimits(\n\n// @audit previewRedeem on line 352, which is public\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n// @audit previewRedeem on line 352, which is public\n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n// @audit previewRedeem on line 352, which is public\n856: \t\t    function setTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32)\n\n// @audit previewRedeem on line 352, which is public\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L289)",
            "[295](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L295)",
            "[301](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L301)",
            "[312](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L312)",
            "[323](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L323)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L329)",
            "[360](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L360)",
            "[366](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L366)",
            "[372](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L372)",
            "[378](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L378)",
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[400](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L400)",
            "[410](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L410)",
            "[429](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L429)",
            "[483](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L483)",
            "[497](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L497)",
            "[550](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L550)",
            "[609](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L609)",
            "[652](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L652)",
            "[661](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L661)",
            "[685](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L685)",
            "[765](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L765)",
            "[788](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L788)",
            "[807](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L807)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[856](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L856)",
            "[870](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit setTWAPConfig on line 87, which is public\n104: \t\t    function withdrawBalances(address[] calldata tokens, address to) external virtual {\n\n// @audit setTWAPConfig on line 87, which is public\n123: \t\t    function withdrawETH(address to) external {\n\n// @audit _validateOwner on line 230, which is internal\n251: \t\t    receive() external payable {\n```",
          "loc": [
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L104)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L123)",
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L251)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit execute on line 115, which is public\n356: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n\n// @audit execute on line 115, which is public\n397: \t\t    function swap(SwapParams calldata params) external payable returns (uint256 amountOut) {\n\n// @audit execute on line 115, which is public\n467: \t\t    function swapAndMint(SwapAndMintParams calldata params)\n\n// @audit execute on line 115, which is public\n532: \t\t    function swapAndIncreaseLiquidity(SwapAndIncreaseLiquidityParams calldata params)\n\n// @audit _collectFees on line 892, which is internal\n914: \t\t    receive() external payable {\n```",
          "loc": [
            "[356](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L356)",
            "[397](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L397)",
            "[467](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L467)",
            "[532](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L532)",
            "[914](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L914)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit _poolSwap on line 132, which is internal\n156: \t\t    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external override {\n```",
          "loc": [
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L156)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Long functions should be refactored into multiple functions",
      "description": "Consider splitting long functions into multiple, smaller functions to improve the code readability.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n272: \t\t    function _getReferenceTokenPriceX96(address token, uint256 cachedChainlinkReferencePriceX96)\n```",
          "loc": [
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L272)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n550: \t\t    function borrow(uint256 tokenId, uint256 assets) external override {\n\n685: \t\t    function liquidate(LiquidateParams calldata params) external override returns (uint256 amount0, uint256 amount1) {\n\n954: \t\t    function _repay(uint256 tokenId, uint256 amount, bool isShare, bytes memory permitData) internal {\n```",
          "loc": [
            "[550](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L550)",
            "[685](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L685)",
            "[954](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L954)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n100: \t\t    function execute(ExecuteParams calldata params) external {\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L100)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n101: \t\t    function execute(ExecuteParams calldata params) external nonReentrant {\n```",
          "loc": [
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L101)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n111: \t\t    function execute(ExecuteParams calldata params) external {\n```",
          "loc": [
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L111)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n40: \t\t    function leverageUp(LeverageUpParams calldata params) external {\n\n123: \t\t    function leverageDown(LeverageDownParams calldata params) external {\n```",
          "loc": [
            "[40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L40)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L123)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n115: \t\t    function execute(uint256 tokenId, Instructions memory instructions) public returns (uint256 newTokenId) {\n\n598: \t\t    function _prepareAddPermit2(\n\n779: \t\t    function _swapAndPrepareAmounts(SwapAndMintParams memory params, bool unwrap)\n```",
          "loc": [
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L115)",
            "[598](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L598)",
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L779)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider providing a ranged getter for array state variables",
      "description": "While the compiler automatically provides a getter for accessing single elements within a public state variable array, it doesn't provide a way to fetch the whole array, or subsets thereof.\n\nConsider adding a function to allow the fetching of slices of the array, especially if the contract doesn't already have multicall functionality.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n157: \t\t    mapping(address => uint256[]) private ownedTokens; // Mapping from owner address to list of owned token IDs\n```",
          "loc": [
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L157)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Lines are too long",
      "description": "Maximum suggested line length is 120 characters according to the [documentation](https://docs.soliditylang.org/en/latest/style-guide.html#maximum-line-length).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n65: \t\t    uint16 public maxPoolPriceDifference = MIN_PRICE_DIFFERENCE; // max price difference between oracle derived price and pool price x10000\n\n152: \t\t    /// @notice Gets breakdown of a uniswap v3 position (tokens and fee tier, liquidity, current liquidity amounts, uncollected fees)\n\n368: \t\t            (int56[] memory tickCumulatives,) = pool.observe(secondsAgos); // pool observe may fail when there is not enough history available (only use pool with enough history!)\n```",
          "loc": [
            "[65](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L65)",
            "[152](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L152)",
            "[368](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L368)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n28: \t\t/// @notice The vault manages ONE ERC20 (eg. USDC) asset for lending / borrowing, but collateral positions can be composed of any 2 tokens configured each with a collateralFactor > 0\n\n70: \t\t    event Add(uint256 indexed tokenId, address owner, uint256 oldTokenId); // when a token is added replacing another token - oldTokenId > 0\n\n158: \t\t    mapping(uint256 => uint256) private ownedTokensIndex; // Mapping from token ID to index of the owner tokens list (for removal without loop)\n\n163: \t\t    mapping(address => bool) public transformerAllowList; // contracts allowed to transform positions (selected audited contracts e.g. V3Utils)\n\n164: \t\t    mapping(address => mapping(uint256 => mapping(address => bool))) public transformApprovals; // owners permissions for other addresses to call transform on owners behalf (e.g. AutoRange contract)\n\n230: \t\t    /// @return liquidationValue If position is liquidatable - the value of the (partial) position which the liquidator recieves - otherwise 0\n\n427: \t\t    /// @notice Whenever a token is recieved it either creates a new loan, or modifies an existing one when in transform mode.\n\n496: \t\t    /// @return newTokenId Final token ID (may be different than input token ID when the position was replaced by transformation)\n\n605: \t\t    /// This function is not allowed during transformation (if a transformer wants to decreaseLiquidity he can call the methods directly on the NonfungiblePositionManager)\n\n606: \t\t    /// @param params Struct containing various parameters for the operation. Includes tokenId, liquidity amount, minimum asset amounts, and deadline.\n\n842: \t\t    /// @notice sets reserve protection factor - percentage of globalLendAmount which can't be withdrawn by owner (onlyOwner)\n\n855: \t\t    /// @param collateralValueLimitFactorX32 how much of it maybe used as collateral measured as percentage of total lent assets mutiplied by Q32\n\n1089: \t\t    //  if position is not valuable enough - missing part is covered by reserves - if not enough reserves - collectively by other borrowers\n\n1096: \t\t        // if position has less than enough value - liquidation cost maybe less - rest is payed by protocol or lenders collectively\n\n1204: \t\t    // updates collateral token configs - and check if limit is not surpassed (check is only done on increasing debt shares)\n```",
          "loc": [
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L28)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L70)",
            "[158](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L158)",
            "[163](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L163)",
            "[164](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L164)",
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L230)",
            "[427](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L427)",
            "[496](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L496)",
            "[605](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L605)",
            "[606](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L606)",
            "[842](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L842)",
            "[855](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L855)",
            "[1089](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1089)",
            "[1096](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1096)",
            "[1204](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1204)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n7: \t\t/// @notice Lets a v3 position to be automatically removed (limit order) or swapped to the opposite token (stop loss order) when it reaches a certain tick.\n\n9: \t\t/// Positions need to be approved (approve or setApprovalForAll) for the contract and configured with configToken method\n\n184: \t\t            // when swap and !onlyFees - protocol reward is removed only from target token (to incentivize optimal swap done by operator)\n```",
          "loc": [
            "[7](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L7)",
            "[9](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L9)",
            "[184](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L184)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n39: \t\t        int32 lowerTickLimit; // if negative also in-range positions may be adjusted / if 0 out of range positions may be adjusted\n\n40: \t\t        int32 upperTickLimit; // if negative also in-range positions may be adjusted / if 0 out of range positions may be adjusted\n\n41: \t\t        int32 lowerTickDelta; // this amount is added to current tick (floored to tickspacing) to define lowerTick of new position\n\n42: \t\t        int32 upperTickDelta; // this amount is added to current tick (floored to tickspacing) to define upperTick of new position\n```",
          "loc": [
            "[39](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L39)",
            "[40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L40)",
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L41)",
            "[42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L42)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n47: \t\t    /// @notice Complete description of what should be executed on provided NFT - different fields are used depending on specified WhatToDo\n\n73: \t\t        // remove liquidity amount for COMPOUND_FEES (in this case should be probably 0) / CHANGE_RANGE / WITHDRAW_AND_COLLECT_AND_SWAP\n\n109: \t\t        // NOTE: previous operator can not be reset as operator set by permit can not change operator - so this operator will stay until reset\n\n354: \t\t    /// @notice ERC721 callback function. Called on safeTransferFrom and does manipulation as configured in encoded Instructions parameter.\n\n355: \t\t    /// At the end the NFT (and any newly minted NFT) is returned to sender. The leftover tokens are sent to instructions.recipient.\n\n395: \t\t    /// If tokenIn is wrapped native token - both the token or the wrapped token can be sent (the sum of both must be equal to amountIn)\n\n445: \t\t        // if swapSourceToken is another token than token0 or token1 -> amountIn0 + amountIn1 of swapSourceToken are expected to be available\n\n464: \t\t    /// @notice Does 1 or 2 swaps from swapSourceToken to token0 and token1 and adds as much as possible liquidity to a newly minted position.\n\n512: \t\t        // if swapSourceToken is another token than token0 or token1 -> amountIn0 + amountIn1 of swapSourceToken are expected to be available\n\n529: \t\t    /// @notice Does 1 or 2 swaps from swapSourceToken to token0 and token1 and adds as much as possible liquidity to any existing position (no need to be position owner).\n```",
          "loc": [
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L47)",
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L73)",
            "[109](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L109)",
            "[354](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L354)",
            "[355](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L355)",
            "[395](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L395)",
            "[445](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L445)",
            "[464](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L464)",
            "[512](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L512)",
            "[529](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L529)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n68: \t\t        // no origin check is needed - because the contract doesn't hold any funds - there is no benefit in calling uniswapV3FlashCallback() from another context\n```",
          "loc": [
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L68)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Avoid the use of sensitive terms",
      "description": "Use [alternative variants](https://www.zdnet.com/article/mysql-drops-master-slave-and-blacklist-whitelist-terminology/), e.g. allowlist/denylist instead of whitelist/blacklist.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n494: \t\t    /// @param transformer The address of a whitelisted transformer contract\n```",
          "loc": [
            "[494](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L494)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding a block/deny-list",
      "description": "This can help to prevent hackers from using stolen tokens, but as a side effect it will increase the project centralization.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use of `override` is unnecessary",
      "description": "Starting with Solidity version [0.8.8](https://docs.soliditylang.org/en/latest/contracts.html#function-overriding), using the override keyword when the function solely overrides an interface function, and the function doesn't exist in multiple base contracts, is unnecessary.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n58: \t\t    function getRatesPerSecondX96(uint256 cash, uint256 debt)\n```",
          "loc": [
            "[58](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L58)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n95: \t\t    function getValue(uint256 tokenId, address token)\n\n162: \t\t    function getPositionBreakdown(uint256 tokenId)\n```",
          "loc": [
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L95)",
            "[162](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L162)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n195: \t\t    function vaultInfo()\n\n219: \t\t    function lendInfo(address account) external view override returns (uint256 amount) {\n\n231: \t\t    function loanInfo(uint256 tokenId)\n\n258: \t\t    function ownerOf(uint256 tokenId) external view override returns (address owner) {\n\n264: \t\t    function loanCount(address owner) external view override returns (uint256) {\n\n271: \t\t    function loanAtIndex(address owner, uint256 index) external view override returns (uint256) {\n\n284: \t\t    function totalAssets() public view override returns (uint256) {\n\n289: \t\t    function convertToShares(uint256 assets) external view override returns (uint256 shares) {\n\n295: \t\t    function convertToAssets(uint256 shares) external view override returns (uint256 assets) {\n\n301: \t\t    function maxDeposit(address) external view override returns (uint256) {\n\n312: \t\t    function maxMint(address) external view override returns (uint256) {\n\n323: \t\t    function maxWithdraw(address owner) external view override returns (uint256) {\n\n329: \t\t    function maxRedeem(address owner) external view override returns (uint256) {\n\n334: \t\t    function previewDeposit(uint256 assets) public view override returns (uint256) {\n\n340: \t\t    function previewMint(uint256 shares) public view override returns (uint256) {\n\n346: \t\t    function previewWithdraw(uint256 assets) public view override returns (uint256) {\n\n352: \t\t    function previewRedeem(uint256 shares) public view override returns (uint256) {\n\n360: \t\t    function deposit(uint256 assets, address receiver) external override returns (uint256) {\n\n366: \t\t    function mint(uint256 shares, address receiver) external override returns (uint256) {\n\n372: \t\t    function withdraw(uint256 assets, address receiver, address owner) external override returns (uint256) {\n\n378: \t\t    function redeem(uint256 shares, address receiver, address owner) external override returns (uint256) {\n\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n400: \t\t    function create(uint256 tokenId, address recipient) external override {\n\n410: \t\t    function createWithPermit(\n\n429: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n\n483: \t\t    function approveTransform(uint256 tokenId, address target, bool isActive) external override {\n\n497: \t\t    function transform(uint256 tokenId, address transformer, bytes calldata data)\n\n550: \t\t    function borrow(uint256 tokenId, uint256 assets) external override {\n\n609: \t\t    function decreaseLiquidityAndCollect(DecreaseLiquidityAndCollectParams calldata params)\n\n652: \t\t    function repay(uint256 tokenId, uint256 amount, bool isShare) external override {\n\n661: \t\t    function repay(uint256 tokenId, uint256 amount, bool isShare, bytes calldata permitData) external override {\n\n685: \t\t    function liquidate(LiquidateParams calldata params) external override returns (uint256 amount0, uint256 amount1) {\n```",
          "loc": [
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L195)",
            "[219](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L219)",
            "[231](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L231)",
            "[258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L258)",
            "[264](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L264)",
            "[271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L271)",
            "[284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L284)",
            "[289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L289)",
            "[295](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L295)",
            "[301](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L301)",
            "[312](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L312)",
            "[323](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L323)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L329)",
            "[334](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L334)",
            "[340](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L340)",
            "[346](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L346)",
            "[352](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L352)",
            "[360](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L360)",
            "[366](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L366)",
            "[372](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L372)",
            "[378](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L378)",
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[400](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L400)",
            "[410](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L410)",
            "[429](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L429)",
            "[483](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L483)",
            "[497](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L497)",
            "[550](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L550)",
            "[609](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L609)",
            "[652](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L652)",
            "[661](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L661)",
            "[685](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L685)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n227: \t\t    function withdrawBalances(address[] calldata tokens, address to) external override nonReentrant {\n```",
          "loc": [
            "[227](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L227)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n356: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n```",
          "loc": [
            "[356](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L356)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n156: \t\t    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external override {\n```",
          "loc": [
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L156)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing variable names",
      "description": "Consider adding a comment with the variable name even if it's not used, to improve the code readability.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n301: \t\t    function maxDeposit(address) external view override returns (uint256) {\n\n312: \t\t    function maxMint(address) external view override returns (uint256) {\n\n429: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n```",
          "loc": [
            "[301](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L301)",
            "[312](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L312)",
            "[429](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L429)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n356: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n```",
          "loc": [
            "[356](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L356)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Typos in comments",
      "description": "Avoid typos, and proper nouns should be capitalized.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit verfies\n87: \t\t    /// @dev uses configured oracles and verfies price on second oracle - if fails - reverts\n\n// @audit arbitrageurs\n127: \t\t        // when a pool is in this state, liquidations will be disabled - but arbitrageurs (or liquidator himself)\n\n// @audit twap\n361: \t\t        // if twap seconds set to 0 just use pool price\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L87)",
            "[127](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L127)",
            "[361](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L361)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit dencun\n161: \t\t    uint256 private transformedTokenId = 0; // transient storage (when available in dencun)\n\n// @audit recieves\n230: \t\t    /// @return liquidationValue If position is liquidatable - the value of the (partial) position which the liquidator recieves - otherwise 0\n\n// @audit tokenid\n268: \t\t    /// @notice Retrieves tokenid of loan at given index for owner (for enumerating owners loans)\n\n// @audit recieve\n399: \t\t    /// @param recipient Address to recieve the position in the vault\n\n// @audit recieve\n407: \t\t    /// @param recipient Address to recieve the position in the vault\n\n// @audit recieved\n427: \t\t    /// @notice Whenever a token is recieved it either creates a new loan, or modifies an existing one when in transform mode.\n\n// @audit nftmanager\n614: \t\t        // this method is not allowed during transform - can be called directly on nftmanager if needed from transform contract\n\n// @audit transfering\n711: \t\t        // calculate reserve (before transfering liquidation money - otherwise calculation is off)\n\n// @audit mutiplied\n854: \t\t    /// @param collateralFactorX32 collateral factor for this token mutiplied by Q32\n\n// @audit mutiplied\n855: \t\t    /// @param collateralValueLimitFactorX32 how much of it maybe used as collateral measured as percentage of total lent assets mutiplied by Q32\n\n// @audit liquididated\n1088: \t\t    //  if position is too valuable - not all of the position is liquididated - only needed amount\n\n// @audit liquidaton\n1122: \t\t    // calculates if there are enough reserves to cover liquidaton - if not its shared between lenders\n```",
          "loc": [
            "[161](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L161)",
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L230)",
            "[268](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L268)",
            "[399](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L399)",
            "[407](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L407)",
            "[427](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L427)",
            "[614](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L614)",
            "[711](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L711)",
            "[854](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L854)",
            "[855](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L855)",
            "[1088](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1088)",
            "[1122](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1122)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit stoploss\n43: \t\t    // define how stoploss / limit should be handled\n\n// @audit tokenid\n64: \t\t        uint256 tokenId; // tokenid to process\n\n// @audit incentivize\n184: \t\t            // when swap and !onlyFees - protocol reward is removed only from target token (to incentivize optimal swap done by operator)\n```",
          "loc": [
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L43)",
            "[64](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L64)",
            "[184](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L184)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit twap\n179: \t\t    // gets twap tick from pool history if enough history available\n\n// @audit temporarely\n201: \t\t            // store in temporarely \"misnamed\" variables - see comment below\n```",
          "loc": [
            "[179](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L179)",
            "[201](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L201)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit autocompound\n17: \t\t    // autocompound event\n\n// @audit tokenid, autocompound\n52: \t\t        // tokenid to autocompound\n\n// @audit autocompound\n60: \t\t    // state used during autocompound execution\n\n// @audit autocompounding\n122: \t\t        // only if there are balances to work with - start autocompounding process\n\n// @audit incentivize\n169: \t\t                // fees are always calculated based on added amount (to incentivize optimal swap)\n\n// @audit overriden, automator\n223: \t\t     * @dev The method is overriden, because it differs from standard automator fee handling\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L17)",
            "[52](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L52)",
            "[60](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L60)",
            "[122](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L122)",
            "[169](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L169)",
            "[223](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L223)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit tickspacing\n41: \t\t        int32 lowerTickDelta; // this amount is added to current tick (floored to tickspacing) to define lowerTick of new position\n\n// @audit tickspacing\n42: \t\t        int32 upperTickDelta; // this amount is added to current tick (floored to tickspacing) to define upperTick of new position\n\n// @audit npm\n212: \t\t            // approve npm\n\n// @audit safemint\n216: \t\t            // mint is done to address(this) first - its not a safemint\n\n// @audit incentivize\n234: \t\t            // protocol reward is calculated based on added amount (to incentivize optimal swap done by operator)\n```",
          "loc": [
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L41)",
            "[42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L42)",
            "[212](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L212)",
            "[216](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L216)",
            "[234](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L234)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n// @audit deleverage\n11: \t\t/// @notice Functionality to leverage / deleverage positions direcly in one tx\n\n// @audit api\n25: \t\t        bytes swapData0; // encoded data from 0x api call (address,bytes) - allowanceTarget,data\n\n// @audit api\n29: \t\t        bytes swapData1; // encoded data from 0x api call (address,bytes) - allowanceTarget,data\n\n// @audit deadlineable\n35: \t\t        // for all uniswap deadlineable functions\n\n// @audit api\n111: \t\t        bytes swapData0; // encoded data from 0x api call (address,bytes) - allowanceTarget,data\n\n// @audit api\n115: \t\t        bytes swapData1; // encoded data from 0x api call (address,bytes) - allowanceTarget,data\n\n// @audit deadlineable\n118: \t\t        // for all uniswap deadlineable functions\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L11)",
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L25)",
            "[29](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L29)",
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L35)",
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L111)",
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L115)",
            "[118](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L118)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit api\n60: \t\t        bytes swapData0; // encoded data from 0x api call (address,bytes) - allowanceTarget,data\n\n// @audit api\n65: \t\t        bytes swapData1; // encoded data from 0x api call (address,bytes) - allowanceTarget,data\n\n// @audit deadlineable\n78: \t\t        // for all uniswap deadlineable functions\n\n// @audit transfered\n458: \t\t        // data to be sent along newly created NFT when transfered to recipientNFT (sent to IERC721Receiver callback)\n\n// @audit recieved\n633: \t\t        // check if recieved correct amount of tokens\n\n// @audit safemint\n725: \t\t        // mint is done to address(this) because it is not a safemint and safeTransferFrom needs to be done manually afterwards\n```",
          "loc": [
            "[60](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L60)",
            "[65](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L65)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L78)",
            "[458](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L458)",
            "[633](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L633)",
            "[725](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L725)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit transfered\n97: \t\t                // tokens are transfered to Universalrouter directly (data.commands must include sweep action!)\n```",
          "loc": [
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L97)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contracts should have full test coverage",
      "description": "A 100% test coverage is not foolproof, but it helps immensely in reducing the amount of bugs that may occur.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: All in-scope files\n```",
          "loc": []
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large or complicated code bases should implement invariant tests",
      "description": "This includes: large code bases, or code with lots of inline-assembly, complicated math, or complicated interactions between multiple contracts.\n\nInvariant fuzzers such as Echidna require the test writer to come up with invariants which should not be violated under any circumstances, and the fuzzer tests various inputs and function calls to ensure that the invariants always hold.\n\nEven code with 100% code coverage can still have bugs due to the order of the operations a user performs, and invariant fuzzers may help significantly.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: All in-scope files\n```",
          "loc": []
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Codebase should implement formal verification testing",
      "description": "Formal verification is the act of proving or disproving the correctness of intended algorithms underlying a system with respect to a certain formal specification/property/invariant, using formal methods of mathematics.\n\nSome tools that are currently available to perform these tests on smart contracts are [SMTChecker](https://docs.soliditylang.org/en/latest/smtchecker.html) and [Certora Prover](https://www.certora.com/).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: All in-scope files\n```",
          "loc": []
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Inconsistent spacing in comments",
      "description": "Some lines use `// x` and some use `//x`. The instances below point out the usages that don't follow the majority, within each file.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n25: \t\t    uint16 public constant MIN_PRICE_DIFFERENCE = 200; //2%\n```",
          "loc": [
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L25)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n41: \t\t    uint32 public constant MIN_RESERVE_PROTECTION_FACTOR_X32 = uint32(Q32 / 100); //1%\n\n43: \t\t    uint32 public constant MAX_DAILY_LEND_INCREASE_X32 = uint32(Q32 / 10); //10%\n\n44: \t\t    uint32 public constant MAX_DAILY_DEBT_INCREASE_X32 = uint32(Q32 / 10); //10%\n```",
          "loc": [
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L41)",
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L43)",
            "[44](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L44)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "State variables should include comments",
      "description": "Consider adding some comments on critical state variables to explain what they are supposed to do: this will help for future code reviews.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n24: \t\t    uint256 public baseRatePerSecondX96;\n\n25: \t\t    uint256 public jumpMultiplierPerSecondX96;\n\n26: \t\t    uint256 public kinkX96;\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L24)",
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L25)",
            "[26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L26)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n27: \t\t    uint256 private constant Q96 = 2 ** 96;\n\n28: \t\t    uint256 private constant Q128 = 2 ** 128;\n\n58: \t\t    address public immutable factory;\n\n59: \t\t    INonfungiblePositionManager public immutable nonfungiblePositionManager;\n\n63: \t\t    uint8 public immutable referenceTokenDecimals;\n```",
          "loc": [
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L27)",
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L28)",
            "[58](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L58)",
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L59)",
            "[63](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L63)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n33: \t\t    uint256 private constant Q32 = 2 ** 32;\n\n34: \t\t    uint256 private constant Q96 = 2 ** 96;\n\n115: \t\t    mapping(address => TokenConfig) public tokenConfigs;\n\n128: \t\t    uint256 public lastDebtExchangeRateX96 = Q96;\n\n129: \t\t    uint256 public lastLendExchangeRateX96 = Q96;\n\n131: \t\t    uint256 public globalDebtLimit = 0;\n\n132: \t\t    uint256 public globalLendLimit = 0;\n\n139: \t\t    uint256 public dailyLendIncreaseLimitLeft = 0;\n\n140: \t\t    uint256 public dailyLendIncreaseLimitLastReset = 0;\n\n144: \t\t    uint256 public dailyDebtIncreaseLimitLeft = 0;\n\n145: \t\t    uint256 public dailyDebtIncreaseLimitLastReset = 0;\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L33)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L34)",
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L115)",
            "[128](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L128)",
            "[129](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L129)",
            "[131](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L131)",
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L132)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L139)",
            "[140](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L140)",
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L145)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n20: \t\t    uint256 internal constant Q64 = 2 ** 64;\n\n21: \t\t    uint256 internal constant Q96 = 2 ** 96;\n\n35: \t\t    mapping(address => bool) public vaults;\n\n37: \t\t    address public withdrawer;\n\n38: \t\t    uint32 public TWAPSeconds;\n\n39: \t\t    uint16 public maxTWAPTickDifference;\n```",
          "loc": [
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L20)",
            "[21](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L21)",
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L35)",
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L37)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L38)",
            "[39](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L39)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n45: \t\t    mapping(uint256 => mapping(address => uint256)) public positionBalances;\n```",
          "loc": [
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L45)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n23: \t\t    address public immutable factory;\n```",
          "loc": [
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L23)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Complex functions should have explicit comments",
      "description": "Large and/or complex functions should have more comments to better explain the purpose of each logic step.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n685: \t\t    function liquidate(LiquidateParams calldata params) external override returns (uint256 amount0, uint256 amount1) {\n```",
          "loc": [
            "[685](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L685)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n100: \t\t    function execute(ExecuteParams calldata params) external {\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L100)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n101: \t\t    function execute(ExecuteParams calldata params) external nonReentrant {\n```",
          "loc": [
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L101)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n111: \t\t    function execute(ExecuteParams calldata params) external {\n```",
          "loc": [
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L111)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n115: \t\t    function execute(uint256 tokenId, Instructions memory instructions) public returns (uint256 newTokenId) {\n```",
          "loc": [
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L115)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use `@inheritdoc` for overridden functions",
      "description": "`@inheritdoc` Copies all missing tags from the base function. [Documentation](https://docs.soliditylang.org/en/latest/natspec-format.html#tags)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n58: \t\t    function getRatesPerSecondX96(uint256 cash, uint256 debt)\n```",
          "loc": [
            "[58](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L58)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n95: \t\t    function getValue(uint256 tokenId, address token)\n\n162: \t\t    function getPositionBreakdown(uint256 tokenId)\n```",
          "loc": [
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L95)",
            "[162](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L162)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n195: \t\t    function vaultInfo()\n\n219: \t\t    function lendInfo(address account) external view override returns (uint256 amount) {\n\n231: \t\t    function loanInfo(uint256 tokenId)\n\n258: \t\t    function ownerOf(uint256 tokenId) external view override returns (address owner) {\n\n264: \t\t    function loanCount(address owner) external view override returns (uint256) {\n\n271: \t\t    function loanAtIndex(address owner, uint256 index) external view override returns (uint256) {\n\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n400: \t\t    function create(uint256 tokenId, address recipient) external override {\n\n410: \t\t    function createWithPermit(\n\n483: \t\t    function approveTransform(uint256 tokenId, address target, bool isActive) external override {\n\n497: \t\t    function transform(uint256 tokenId, address transformer, bytes calldata data)\n\n550: \t\t    function borrow(uint256 tokenId, uint256 assets) external override {\n\n609: \t\t    function decreaseLiquidityAndCollect(DecreaseLiquidityAndCollectParams calldata params)\n\n652: \t\t    function repay(uint256 tokenId, uint256 amount, bool isShare) external override {\n\n661: \t\t    function repay(uint256 tokenId, uint256 amount, bool isShare, bytes calldata permitData) external override {\n\n685: \t\t    function liquidate(LiquidateParams calldata params) external override returns (uint256 amount0, uint256 amount1) {\n```",
          "loc": [
            "[400](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L400)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L195)",
            "[219](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L219)",
            "[231](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L231)",
            "[258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L258)",
            "[264](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L264)",
            "[271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L271)",
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[410](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L410)",
            "[483](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L483)",
            "[497](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L497)",
            "[550](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L550)",
            "[609](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L609)",
            "[652](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L652)",
            "[661](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L661)",
            "[685](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L685)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n227: \t\t    function withdrawBalances(address[] calldata tokens, address to) external override nonReentrant {\n```",
          "loc": [
            "[227](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L227)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n356: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n```",
          "loc": [
            "[356](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L356)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n156: \t\t    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external override {\n```",
          "loc": [
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L156)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Variable names don't follow the Solidity naming convention",
      "description": "Use `mixedCase` for local and state variables that are not constants, and add a trailing underscore for non-external variables. [Documentation](https://docs.soliditylang.org/en/latest/style-guide.html#local-and-state-variable-names)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit _TWAPSeconds\n37: \t\t        uint32 _TWAPSeconds,\n```",
          "loc": [
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L37)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit TWAPSeconds\n31: \t\t    event TWAPConfigChanged(uint32 TWAPSeconds, uint16 maxTWAPTickDifference);\n\n// @audit TWAPSeconds\n38: \t\t    uint32 public TWAPSeconds;\n\n// @audit _TWAPSeconds\n45: \t\t        uint32 _TWAPSeconds,\n\n// @audit _TWAPSeconds\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n```",
          "loc": [
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L31)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L38)",
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L45)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit _TWAPSeconds\n41: \t\t        uint32 _TWAPSeconds,\n```",
          "loc": [
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L41)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit _TWAPSeconds\n29: \t\t        uint32 _TWAPSeconds,\n```",
          "loc": [
            "[29](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L29)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`immutable` variable names should be uppercase",
      "description": "`immutable` variables should be named with all capital letters with underscores separating words. Examples: `TOKEN_ADDRESS`, `ROOT`. [Documentation](https://docs.soliditylang.org/en/latest/style-guide.html#constants)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n58: \t\t    address public immutable factory;\n\n59: \t\t    INonfungiblePositionManager public immutable nonfungiblePositionManager;\n\n62: \t\t    address public immutable referenceToken;\n\n63: \t\t    uint8 public immutable referenceTokenDecimals;\n\n68: \t\t    address public immutable chainlinkReferenceToken;\n```",
          "loc": [
            "[58](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L58)",
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L59)",
            "[62](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L62)",
            "[63](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L63)",
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L68)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n47: \t\t    INonfungiblePositionManager public immutable nonfungiblePositionManager;\n\n50: \t\t    IUniswapV3Factory public immutable factory;\n\n53: \t\t    IInterestRateModel public immutable interestRateModel;\n\n56: \t\t    IV3Oracle public immutable oracle;\n\n59: \t\t    IPermit2 public immutable permit2;\n\n62: \t\t    address public immutable override asset;\n\n65: \t\t    uint8 private immutable assetDecimals;\n```",
          "loc": [
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L47)",
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L50)",
            "[53](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L53)",
            "[56](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L56)",
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L59)",
            "[62](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L62)",
            "[65](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L65)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n19: \t\t    IPermit2 public immutable permit2;\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n21: \t\t    IWETH9 public immutable weth;\n\n23: \t\t    address public immutable factory;\n\n26: \t\t    INonfungiblePositionManager public immutable nonfungiblePositionManager;\n\n29: \t\t    address public immutable zeroxRouter;\n\n32: \t\t    address public immutable universalRouter;\n```",
          "loc": [
            "[21](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L21)",
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L23)",
            "[26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L26)",
            "[29](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L29)",
            "[32](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L32)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing underscore prefix for non-external variables",
      "description": "This convention is suggested for non-external state variables (private or internal). [Documentation](https://docs.soliditylang.org/en/latest/style-guide.html#underscore-prefix-for-non-external-functions-and-variables)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n65: \t\t    uint8 private immutable assetDecimals;\n\n157: \t\t    mapping(address => uint256[]) private ownedTokens; // Mapping from owner address to list of owned token IDs\n\n158: \t\t    mapping(uint256 => uint256) private ownedTokensIndex; // Mapping from token ID to index of the owner tokens list (for removal without loop)\n\n159: \t\t    mapping(uint256 => address) private tokenOwner; // Mapping from token ID to owner\n\n161: \t\t    uint256 private transformedTokenId = 0; // transient storage (when available in dencun)\n```",
          "loc": [
            "[65](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L65)",
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L157)",
            "[158](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L158)",
            "[159](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L159)",
            "[161](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L161)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Invalid NatSpec comment style",
      "description": "NatSpec [must](https://docs.soliditylang.org/en/latest/natspec-format.html#documentation-example) begin with `///`, or use the `/* ... */` syntax.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n18: \t\t    // @notice Permit2 contract\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L18)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec from contract declarations",
      "description": "Some contracts miss a `@dev/@notice` NatSpec, which should be a [best practice](https://docs.soliditylang.org/en/latest/natspec-format.html) to add as a documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@author` from contract declaration",
      "description": "Some contract definitions have an incomplete NatSpec: add a `@author` notation to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n10: \t\tcontract AutoExit is Automator {\n```",
          "loc": [
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n16: \t\tcontract AutoCompound is Automator, Multicall, ReentrancyGuard {\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n11: \t\tcontract AutoRange is Automator {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n12: \t\tcontract LeverageTransformer is Swapper {\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n15: \t\tcontract V3Utils is Swapper, IERC721Receiver {\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n17: \t\tabstract contract Swapper is IUniswapV3SwapCallback, IErrors {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@dev` from contract declaration",
      "description": "Some contract definitions have an incomplete NatSpec: add a `@dev` notation to describe the contract to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n10: \t\tcontract AutoExit is Automator {\n```",
          "loc": [
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n16: \t\tcontract AutoCompound is Automator, Multicall, ReentrancyGuard {\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n11: \t\tcontract AutoRange is Automator {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n12: \t\tcontract LeverageTransformer is Swapper {\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n15: \t\tcontract V3Utils is Swapper, IERC721Receiver {\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n17: \t\tabstract contract Swapper is IUniswapV3SwapCallback, IErrors {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@notice` from contract declaration",
      "description": "Some contract definitions have an incomplete NatSpec: add a `@notice` notation to describe the contract to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n17: \t\tabstract contract Swapper is IUniswapV3SwapCallback, IErrors {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@title` from contract declaration",
      "description": "Some contract definitions have an incomplete NatSpec: add a `@title` notation to describe the contract to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n17: \t\tabstract contract Swapper is IUniswapV3SwapCallback, IErrors {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec from event declaration",
      "description": "Consider adding some comments on event declarations to explain what they are supposed to do: this will help for future code reviews.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n18: \t\t    event SetValues(\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n30: \t\t    event TokenConfigUpdated(address indexed token, TokenConfig config);\n\n31: \t\t    event OracleModeUpdated(address indexed token, Mode mode);\n\n32: \t\t    event SetMaxPoolPriceDifference(uint16 maxPoolPriceDifference);\n\n33: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L30)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L31)",
            "[32](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L32)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n68: \t\t    event ApprovedTransform(uint256 indexed tokenId, address owner, address target, bool isActive);\n\n70: \t\t    event Add(uint256 indexed tokenId, address owner, uint256 oldTokenId); // when a token is added replacing another token - oldTokenId > 0\n\n71: \t\t    event Remove(uint256 indexed tokenId, address recipient);\n\n73: \t\t    event ExchangeRateUpdate(uint256 debtExchangeRateX96, uint256 lendExchangeRateX96);\n\n75: \t\t    event WithdrawCollateral(\n\n78: \t\t    event Borrow(uint256 indexed tokenId, address owner, uint256 assets, uint256 shares);\n\n79: \t\t    event Repay(uint256 indexed tokenId, address repayer, address owner, uint256 assets, uint256 shares);\n\n80: \t\t    event Liquidate(\n\n93: \t\t    event WithdrawReserves(uint256 amount, address receiver);\n\n94: \t\t    event SetTransformer(address transformer, bool active);\n\n95: \t\t    event SetLimits(\n\n102: \t\t    event SetReserveFactor(uint32 reserveFactorX32);\n\n103: \t\t    event SetReserveProtectionFactor(uint32 reserveProtectionFactorX32);\n\n104: \t\t    event SetTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32);\n\n106: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L68)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L70)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L71)",
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L73)",
            "[75](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L75)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L78)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L79)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L80)",
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L93)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L94)",
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L95)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L102)",
            "[103](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L103)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L104)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n11: \t\t    event Executed(\n\n20: \t\t    event PositionConfigured(\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L11)",
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n27: \t\t    event OperatorChanged(address newOperator, bool active);\n\n28: \t\t    event VaultChanged(address newVault, bool active);\n\n30: \t\t    event WithdrawerChanged(address newWithdrawer);\n\n31: \t\t    event TWAPConfigChanged(uint32 TWAPSeconds, uint16 maxTWAPTickDifference);\n```",
          "loc": [
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L27)",
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L28)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L30)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L31)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n18: \t\t    event AutoCompounded(\n\n30: \t\t    event RewardUpdated(address account, uint64 totalRewardX64);\n\n33: \t\t    event BalanceAdded(uint256 tokenId, address token, uint256 amount);\n\n34: \t\t    event BalanceRemoved(uint256 tokenId, address token, uint256 amount);\n\n35: \t\t    event BalanceWithdrawn(uint256 tokenId, address token, address to, uint256 amount);\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L18)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L30)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L33)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L34)",
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n12: \t\t    event RangeChanged(uint256 indexed oldTokenId, uint256 indexed newTokenId);\n\n13: \t\t    event PositionConfigured(\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L12)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n22: \t\t    event CompoundFees(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n23: \t\t    event ChangeRange(uint256 indexed tokenId, uint256 newTokenId);\n\n24: \t\t    event WithdrawAndCollectAndSwap(uint256 indexed tokenId, address token, uint256 amount);\n\n25: \t\t    event SwapAndMint(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n26: \t\t    event SwapAndIncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n```",
          "loc": [
            "[22](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L22)",
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L23)",
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L24)",
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L25)",
            "[26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L26)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n18: \t\t    event Swap(address indexed tokenIn, address indexed tokenOut, uint256 amountIn, uint256 amountOut);\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L18)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@dev` from event declaration",
      "description": "Some events have an incomplete NatSpec: add a `@dev` notation to describe the event to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n18: \t\t    event SetValues(\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n30: \t\t    event TokenConfigUpdated(address indexed token, TokenConfig config);\n\n31: \t\t    event OracleModeUpdated(address indexed token, Mode mode);\n\n32: \t\t    event SetMaxPoolPriceDifference(uint16 maxPoolPriceDifference);\n\n33: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L30)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L31)",
            "[32](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L32)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n68: \t\t    event ApprovedTransform(uint256 indexed tokenId, address owner, address target, bool isActive);\n\n70: \t\t    event Add(uint256 indexed tokenId, address owner, uint256 oldTokenId); // when a token is added replacing another token - oldTokenId > 0\n\n71: \t\t    event Remove(uint256 indexed tokenId, address recipient);\n\n73: \t\t    event ExchangeRateUpdate(uint256 debtExchangeRateX96, uint256 lendExchangeRateX96);\n\n75: \t\t    event WithdrawCollateral(\n\n78: \t\t    event Borrow(uint256 indexed tokenId, address owner, uint256 assets, uint256 shares);\n\n79: \t\t    event Repay(uint256 indexed tokenId, address repayer, address owner, uint256 assets, uint256 shares);\n\n80: \t\t    event Liquidate(\n\n93: \t\t    event WithdrawReserves(uint256 amount, address receiver);\n\n94: \t\t    event SetTransformer(address transformer, bool active);\n\n95: \t\t    event SetLimits(\n\n102: \t\t    event SetReserveFactor(uint32 reserveFactorX32);\n\n103: \t\t    event SetReserveProtectionFactor(uint32 reserveProtectionFactorX32);\n\n104: \t\t    event SetTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32);\n\n106: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L68)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L70)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L71)",
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L73)",
            "[75](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L75)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L78)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L79)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L80)",
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L93)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L94)",
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L95)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L102)",
            "[103](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L103)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L104)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n11: \t\t    event Executed(\n\n20: \t\t    event PositionConfigured(\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L11)",
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n27: \t\t    event OperatorChanged(address newOperator, bool active);\n\n28: \t\t    event VaultChanged(address newVault, bool active);\n\n30: \t\t    event WithdrawerChanged(address newWithdrawer);\n\n31: \t\t    event TWAPConfigChanged(uint32 TWAPSeconds, uint16 maxTWAPTickDifference);\n```",
          "loc": [
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L27)",
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L28)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L30)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L31)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n18: \t\t    event AutoCompounded(\n\n30: \t\t    event RewardUpdated(address account, uint64 totalRewardX64);\n\n33: \t\t    event BalanceAdded(uint256 tokenId, address token, uint256 amount);\n\n34: \t\t    event BalanceRemoved(uint256 tokenId, address token, uint256 amount);\n\n35: \t\t    event BalanceWithdrawn(uint256 tokenId, address token, address to, uint256 amount);\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L18)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L30)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L33)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L34)",
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n12: \t\t    event RangeChanged(uint256 indexed oldTokenId, uint256 indexed newTokenId);\n\n13: \t\t    event PositionConfigured(\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L12)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n22: \t\t    event CompoundFees(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n23: \t\t    event ChangeRange(uint256 indexed tokenId, uint256 newTokenId);\n\n24: \t\t    event WithdrawAndCollectAndSwap(uint256 indexed tokenId, address token, uint256 amount);\n\n25: \t\t    event SwapAndMint(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n26: \t\t    event SwapAndIncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n```",
          "loc": [
            "[22](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L22)",
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L23)",
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L24)",
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L25)",
            "[26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L26)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n18: \t\t    event Swap(address indexed tokenIn, address indexed tokenOut, uint256 amountIn, uint256 amountOut);\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L18)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@notice` from event declaration",
      "description": "Some events have an incomplete NatSpec: add a `@notice` notation to describe the event to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n18: \t\t    event SetValues(\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n30: \t\t    event TokenConfigUpdated(address indexed token, TokenConfig config);\n\n31: \t\t    event OracleModeUpdated(address indexed token, Mode mode);\n\n32: \t\t    event SetMaxPoolPriceDifference(uint16 maxPoolPriceDifference);\n\n33: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L30)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L31)",
            "[32](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L32)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n68: \t\t    event ApprovedTransform(uint256 indexed tokenId, address owner, address target, bool isActive);\n\n70: \t\t    event Add(uint256 indexed tokenId, address owner, uint256 oldTokenId); // when a token is added replacing another token - oldTokenId > 0\n\n71: \t\t    event Remove(uint256 indexed tokenId, address recipient);\n\n73: \t\t    event ExchangeRateUpdate(uint256 debtExchangeRateX96, uint256 lendExchangeRateX96);\n\n75: \t\t    event WithdrawCollateral(\n\n78: \t\t    event Borrow(uint256 indexed tokenId, address owner, uint256 assets, uint256 shares);\n\n79: \t\t    event Repay(uint256 indexed tokenId, address repayer, address owner, uint256 assets, uint256 shares);\n\n80: \t\t    event Liquidate(\n\n93: \t\t    event WithdrawReserves(uint256 amount, address receiver);\n\n94: \t\t    event SetTransformer(address transformer, bool active);\n\n95: \t\t    event SetLimits(\n\n102: \t\t    event SetReserveFactor(uint32 reserveFactorX32);\n\n103: \t\t    event SetReserveProtectionFactor(uint32 reserveProtectionFactorX32);\n\n104: \t\t    event SetTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32);\n\n106: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L68)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L70)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L71)",
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L73)",
            "[75](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L75)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L78)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L79)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L80)",
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L93)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L94)",
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L95)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L102)",
            "[103](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L103)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L104)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n11: \t\t    event Executed(\n\n20: \t\t    event PositionConfigured(\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L11)",
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n27: \t\t    event OperatorChanged(address newOperator, bool active);\n\n28: \t\t    event VaultChanged(address newVault, bool active);\n\n30: \t\t    event WithdrawerChanged(address newWithdrawer);\n\n31: \t\t    event TWAPConfigChanged(uint32 TWAPSeconds, uint16 maxTWAPTickDifference);\n```",
          "loc": [
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L27)",
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L28)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L30)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L31)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n18: \t\t    event AutoCompounded(\n\n30: \t\t    event RewardUpdated(address account, uint64 totalRewardX64);\n\n33: \t\t    event BalanceAdded(uint256 tokenId, address token, uint256 amount);\n\n34: \t\t    event BalanceRemoved(uint256 tokenId, address token, uint256 amount);\n\n35: \t\t    event BalanceWithdrawn(uint256 tokenId, address token, address to, uint256 amount);\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L18)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L30)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L33)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L34)",
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n12: \t\t    event RangeChanged(uint256 indexed oldTokenId, uint256 indexed newTokenId);\n\n13: \t\t    event PositionConfigured(\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L12)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n22: \t\t    event CompoundFees(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n23: \t\t    event ChangeRange(uint256 indexed tokenId, uint256 newTokenId);\n\n24: \t\t    event WithdrawAndCollectAndSwap(uint256 indexed tokenId, address token, uint256 amount);\n\n25: \t\t    event SwapAndMint(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n26: \t\t    event SwapAndIncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n```",
          "loc": [
            "[22](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L22)",
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L23)",
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L24)",
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L25)",
            "[26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L26)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n18: \t\t    event Swap(address indexed tokenIn, address indexed tokenOut, uint256 amountIn, uint256 amountOut);\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L18)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@param` from event declaration",
      "description": "Some events have an incomplete NatSpec: add a `@param` notation to describe the event to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit missing baseRatePerYearX96, multiplierPerYearX96, jumpMultiplierPerYearX96, kinkX96\n18: \t\t    event SetValues(\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit missing token, config\n30: \t\t    event TokenConfigUpdated(address indexed token, TokenConfig config);\n\n// @audit missing token, mode\n31: \t\t    event OracleModeUpdated(address indexed token, Mode mode);\n\n// @audit missing maxPoolPriceDifference\n32: \t\t    event SetMaxPoolPriceDifference(uint16 maxPoolPriceDifference);\n\n// @audit missing emergencyAdmin\n33: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L30)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L31)",
            "[32](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L32)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit missing tokenId, owner, target, isActive\n68: \t\t    event ApprovedTransform(uint256 indexed tokenId, address owner, address target, bool isActive);\n\n// @audit missing tokenId, owner, oldTokenId\n70: \t\t    event Add(uint256 indexed tokenId, address owner, uint256 oldTokenId); // when a token is added replacing another token - oldTokenId > 0\n\n// @audit missing tokenId, recipient\n71: \t\t    event Remove(uint256 indexed tokenId, address recipient);\n\n// @audit missing debtExchangeRateX96, lendExchangeRateX96\n73: \t\t    event ExchangeRateUpdate(uint256 debtExchangeRateX96, uint256 lendExchangeRateX96);\n\n// @audit missing tokenId, owner, recipient, liquidity, amount0, amount1\n75: \t\t    event WithdrawCollateral(\n\n// @audit missing tokenId, owner, assets, shares\n78: \t\t    event Borrow(uint256 indexed tokenId, address owner, uint256 assets, uint256 shares);\n\n// @audit missing tokenId, repayer, owner, assets, shares\n79: \t\t    event Repay(uint256 indexed tokenId, address repayer, address owner, uint256 assets, uint256 shares);\n\n// @audit missing tokenId, liquidator, owner, value, cost, amount0, amount1, reserve, missing\n80: \t\t    event Liquidate(\n\n// @audit missing amount, receiver\n93: \t\t    event WithdrawReserves(uint256 amount, address receiver);\n\n// @audit missing transformer, active\n94: \t\t    event SetTransformer(address transformer, bool active);\n\n// @audit missing minLoanSize, globalLendLimit, globalDebtLimit, dailyLendIncreaseLimitMin, dailyDebtIncreaseLimitMin\n95: \t\t    event SetLimits(\n\n// @audit missing reserveFactorX32\n102: \t\t    event SetReserveFactor(uint32 reserveFactorX32);\n\n// @audit missing reserveProtectionFactorX32\n103: \t\t    event SetReserveProtectionFactor(uint32 reserveProtectionFactorX32);\n\n// @audit missing token, collateralFactorX32, collateralValueLimitFactorX32\n104: \t\t    event SetTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32);\n\n// @audit missing emergencyAdmin\n106: \t\t    event SetEmergencyAdmin(address emergencyAdmin);\n```",
          "loc": [
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L68)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L70)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L71)",
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L73)",
            "[75](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L75)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L78)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L79)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L80)",
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L93)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L94)",
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L95)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L102)",
            "[103](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L103)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L104)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit missing tokenId, account, isSwap, amountReturned0, amountReturned1, token0, token1\n11: \t\t    event Executed(\n\n// @audit missing tokenId, isActive, token0Swap, token1Swap, token0TriggerTick, token1TriggerTick, token0SlippageX64, token1SlippageX64, onlyFees, maxRewardX64\n20: \t\t    event PositionConfigured(\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L11)",
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L20)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit missing newOperator, active\n27: \t\t    event OperatorChanged(address newOperator, bool active);\n\n// @audit missing newVault, active\n28: \t\t    event VaultChanged(address newVault, bool active);\n\n// @audit missing newWithdrawer\n30: \t\t    event WithdrawerChanged(address newWithdrawer);\n\n// @audit missing TWAPSeconds, maxTWAPTickDifference\n31: \t\t    event TWAPConfigChanged(uint32 TWAPSeconds, uint16 maxTWAPTickDifference);\n```",
          "loc": [
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L27)",
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L28)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L30)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L31)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit missing account, tokenId, amountAdded0, amountAdded1, reward0, reward1, token0, token1\n18: \t\t    event AutoCompounded(\n\n// @audit missing account, totalRewardX64\n30: \t\t    event RewardUpdated(address account, uint64 totalRewardX64);\n\n// @audit missing tokenId, token, amount\n33: \t\t    event BalanceAdded(uint256 tokenId, address token, uint256 amount);\n\n// @audit missing tokenId, token, amount\n34: \t\t    event BalanceRemoved(uint256 tokenId, address token, uint256 amount);\n\n// @audit missing tokenId, token, to, amount\n35: \t\t    event BalanceWithdrawn(uint256 tokenId, address token, address to, uint256 amount);\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L18)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L30)",
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L33)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L34)",
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L35)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit missing oldTokenId, newTokenId\n12: \t\t    event RangeChanged(uint256 indexed oldTokenId, uint256 indexed newTokenId);\n\n// @audit missing tokenId, lowerTickLimit, upperTickLimit, lowerTickDelta, upperTickDelta, token0SlippageX64, token1SlippageX64, onlyFees, maxRewardX64\n13: \t\t    event PositionConfigured(\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L12)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit missing tokenId, liquidity, amount0, amount1\n22: \t\t    event CompoundFees(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n// @audit missing tokenId, newTokenId\n23: \t\t    event ChangeRange(uint256 indexed tokenId, uint256 newTokenId);\n\n// @audit missing tokenId, token, amount\n24: \t\t    event WithdrawAndCollectAndSwap(uint256 indexed tokenId, address token, uint256 amount);\n\n// @audit missing tokenId, liquidity, amount0, amount1\n25: \t\t    event SwapAndMint(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n// @audit missing tokenId, liquidity, amount0, amount1\n26: \t\t    event SwapAndIncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n```",
          "loc": [
            "[22](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L22)",
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L23)",
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L24)",
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L25)",
            "[26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L26)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit missing tokenIn, tokenOut, amountIn, amountOut\n18: \t\t    event Swap(address indexed tokenIn, address indexed tokenOut, uint256 amountIn, uint256 amountOut);\n```",
          "loc": [
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L18)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec from function definitions",
      "description": "Some functions miss a NatSpec, which should be a [best practice](https://docs.soliditylang.org/en/latest/natspec-format.html) to add as a documentation.\n\nEven if Natspec for internal and private function is not parsed (but this may change in the future, according to the official docs), it still helps while reviewing the codebase.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n133: \t\t    function _checkPoolPrice(address token0, address token1, uint24 fee, uint256 derivedPoolPriceX96) internal view {\n\n139: \t\t    function _requireMaxDifference(uint256 priceX96, uint256 verifyPriceX96, uint256 maxDifferenceX10000)\n\n272: \t\t    function _getReferenceTokenPriceX96(address token, uint256 cachedChainlinkReferencePriceX96)\n\n329: \t\t    function _getChainlinkPriceX96(address token) internal view returns (uint256) {\n\n346: \t\t    function _getTWAPPriceX96(TokenConfig memory feedConfig) internal view returns (uint256 poolTWAPPriceX96) {\n\n359: \t\t    function _getReferencePoolPriceX96(IUniswapV3Pool pool, uint32 twapSeconds) internal view returns (uint256) {\n\n395: \t\t    function _initializeState(uint256 tokenId) internal view returns (PositionState memory state) {\n\n426: \t\t    function _getAmounts(PositionState memory state)\n\n445: \t\t    function _getUncollectedFees(PositionState memory position, int24 tick)\n\n472: \t\t    function _getFeeGrowthInside(\n\n499: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L133)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L139)",
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L272)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L329)",
            "[346](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L346)",
            "[359](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L359)",
            "[395](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L395)",
            "[426](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L426)",
            "[445](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L445)",
            "[472](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L472)",
            "[499](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L499)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n877: \t\t    function _deposit(address receiver, uint256 amount, bool isShare, bytes memory permitData)\n\n920: \t\t    function _withdraw(address receiver, address owner, uint256 amount, bool isShare)\n\n954: \t\t    function _repay(uint256 tokenId, uint256 amount, bool isShare, bytes memory permitData) internal {\n\n1017: \t\t    function _getAvailableBalance(uint256 debtExchangeRateX96, uint256 lendExchangeRateX96)\n\n1032: \t\t    function _sendPositionValue(\n\n1077: \t\t    function _cleanupLoan(uint256 tokenId, uint256 debtExchangeRateX96, uint256 lendExchangeRateX96, address owner)\n\n1090: \t\t    function _calculateLiquidation(uint256 debt, uint256 fullValue, uint256 collateralValue)\n\n1123: \t\t    function _handleReserveLiquidation(\n\n1143: \t\t    function _calculateTokenCollateralFactorX32(uint256 tokenId) internal view returns (uint32) {\n\n1150: \t\t    function _updateGlobalInterest()\n\n1167: \t\t    function _calculateGlobalInterest()\n\n1197: \t\t    function _requireLoanIsHealthy(uint256 tokenId, uint256 debt) internal view {\n\n1205: \t\t    function _updateAndCheckCollateral(\n\n1246: \t\t    function _resetDailyLendIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n1258: \t\t    function _resetDailyDebtIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n1270: \t\t    function _checkLoanIsHealthy(uint256 tokenId, uint256 debt)\n\n1281: \t\t    function _convertToShares(uint256 amount, uint256 exchangeRateX96, Math.Rounding rounding)\n\n1289: \t\t    function _convertToAssets(uint256 shares, uint256 exchangeRateX96, Math.Rounding rounding)\n\n1297: \t\t    function _addTokenToOwner(address to, uint256 tokenId) internal {\n\n1303: \t\t    function _removeTokenFromOwner(address from, uint256 tokenId) internal {\n```",
          "loc": [
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L877)",
            "[920](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L920)",
            "[954](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L954)",
            "[1017](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1017)",
            "[1032](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1032)",
            "[1077](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1077)",
            "[1090](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1090)",
            "[1123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1123)",
            "[1143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1143)",
            "[1150](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1150)",
            "[1167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1167)",
            "[1197](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1197)",
            "[1205](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1205)",
            "[1246](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1246)",
            "[1258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1258)",
            "[1270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1270)",
            "[1281](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1281)",
            "[1289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1289)",
            "[1297](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1297)",
            "[1303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1303)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n218: \t\t    function configToken(uint256 tokenId, PositionConfig calldata config) external {\n```",
          "loc": [
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L218)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n139: \t\t    function _validateSwap(\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n\n193: \t\t    function _decreaseFullLiquidityAndCollect(\n\n218: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n\n230: \t\t    function _validateOwner(uint256 tokenId, address vault) internal returns (address owner) {\n\n251: \t\t    receive() external payable {\n```",
          "loc": [
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L139)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)",
            "[193](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L193)",
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L218)",
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L230)",
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L251)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n249: \t\t    function _increaseBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n254: \t\t    function _setBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n266: \t\t    function _withdrawBalanceInternal(uint256 tokenId, address token, address to, uint256 balance, uint256 amount)\n\n276: \t\t    function _checkApprovals(address token0, address token1) internal {\n```",
          "loc": [
            "[249](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L249)",
            "[254](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L254)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L266)",
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L276)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n276: \t\t    function configToken(uint256 tokenId, address vault, PositionConfig calldata config) external {\n\n300: \t\t    function _getTickSpacing(uint24 fee) internal view returns (int24) {\n```",
          "loc": [
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L276)",
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L300)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n40: \t\t    function leverageUp(LeverageUpParams calldata params) external {\n\n123: \t\t    function leverageDown(LeverageDownParams calldata params) external {\n```",
          "loc": [
            "[40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L40)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L123)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n566: \t\t    function _prepareAddApproved(\n\n598: \t\t    function _prepareAddPermit2(\n\n653: \t\t    function _prepareAdd(\n\n705: \t\t    function _swapAndMint(SwapAndMintParams memory params, bool unwrap)\n\n735: \t\t    function _swapAndIncrease(SwapAndIncreaseLiquidityParams memory params, IERC20 token0, IERC20 token1, bool unwrap)\n\n779: \t\t    function _swapAndPrepareAmounts(SwapAndMintParams memory params, bool unwrap)\n\n841: \t\t    function _returnLeftoverTokens(\n\n864: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n\n877: \t\t    function _decreaseLiquidity(\n\n892: \t\t    function _collectFees(uint256 tokenId, IERC20 token0, IERC20 token1, uint128 collectAmount0, uint128 collectAmount1)\n\n914: \t\t    receive() external payable {\n```",
          "loc": [
            "[566](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L566)",
            "[598](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L598)",
            "[653](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L653)",
            "[705](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L705)",
            "[735](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L735)",
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L779)",
            "[841](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L841)",
            "[864](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L864)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L877)",
            "[892](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L892)",
            "[914](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L914)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n67: \t\t    function uniswapV3FlashCallback(uint256 fee0, uint256 fee1, bytes calldata callbackData) external {\n```",
          "loc": [
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L67)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n73: \t\t    function _routerSwap(RouterSwapParams memory params)\n\n132: \t\t    function _poolSwap(PoolSwapParams memory params) internal returns (uint256 amountInDelta, uint256 amountOutDelta) {\n\n156: \t\t    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external override {\n\n171: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L73)",
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L132)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L156)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L171)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@dev` from function declaration",
      "description": "Some functions have an incomplete NatSpec: add a `@dev` notation to describe the function to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n46: \t\t    function getUtilizationRateX96(uint256 cash, uint256 debt) public pure returns (uint256) {\n\n58: \t\t    function getRatesPerSecondX96(uint256 cash, uint256 debt)\n\n82: \t\t    function setValues(\n```",
          "loc": [
            "[46](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L46)",
            "[58](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L58)",
            "[82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L82)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n133: \t\t    function _checkPoolPrice(address token0, address token1, uint24 fee, uint256 derivedPoolPriceX96) internal view {\n\n139: \t\t    function _requireMaxDifference(uint256 priceX96, uint256 verifyPriceX96, uint256 maxDifferenceX10000)\n\n162: \t\t    function getPositionBreakdown(uint256 tokenId)\n\n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n201: \t\t    function setTokenConfig(\n\n249: \t\t    function setOracleMode(address token, Mode mode) external {\n\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n\n272: \t\t    function _getReferenceTokenPriceX96(address token, uint256 cachedChainlinkReferencePriceX96)\n\n329: \t\t    function _getChainlinkPriceX96(address token) internal view returns (uint256) {\n\n346: \t\t    function _getTWAPPriceX96(TokenConfig memory feedConfig) internal view returns (uint256 poolTWAPPriceX96) {\n\n359: \t\t    function _getReferencePoolPriceX96(IUniswapV3Pool pool, uint32 twapSeconds) internal view returns (uint256) {\n\n395: \t\t    function _initializeState(uint256 tokenId) internal view returns (PositionState memory state) {\n\n426: \t\t    function _getAmounts(PositionState memory state)\n\n445: \t\t    function _getUncollectedFees(PositionState memory position, int24 tick)\n\n472: \t\t    function _getFeeGrowthInside(\n\n499: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L133)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L139)",
            "[162](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L162)",
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)",
            "[201](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201)",
            "[249](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L249)",
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265)",
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L272)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L329)",
            "[346](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L346)",
            "[359](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L359)",
            "[395](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L395)",
            "[426](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L426)",
            "[445](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L445)",
            "[472](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L472)",
            "[499](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L499)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n195: \t\t    function vaultInfo()\n\n219: \t\t    function lendInfo(address account) external view override returns (uint256 amount) {\n\n231: \t\t    function loanInfo(uint256 tokenId)\n\n258: \t\t    function ownerOf(uint256 tokenId) external view override returns (address owner) {\n\n264: \t\t    function loanCount(address owner) external view override returns (uint256) {\n\n271: \t\t    function loanAtIndex(address owner, uint256 index) external view override returns (uint256) {\n\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n400: \t\t    function create(uint256 tokenId, address recipient) external override {\n\n410: \t\t    function createWithPermit(\n\n483: \t\t    function approveTransform(uint256 tokenId, address target, bool isActive) external override {\n\n497: \t\t    function transform(uint256 tokenId, address transformer, bytes calldata data)\n\n550: \t\t    function borrow(uint256 tokenId, uint256 assets) external override {\n\n652: \t\t    function repay(uint256 tokenId, uint256 amount, bool isShare) external override {\n\n661: \t\t    function repay(uint256 tokenId, uint256 amount, bool isShare, bytes calldata permitData) external override {\n\n685: \t\t    function liquidate(LiquidateParams calldata params) external override returns (uint256 amount0, uint256 amount1) {\n\n765: \t\t    function withdrawReserves(uint256 amount, address receiver) external onlyOwner {\n\n788: \t\t    function setTransformer(address transformer, bool active) external onlyOwner {\n\n807: \t\t    function setLimits(\n\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n856: \t\t    function setTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32)\n\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n\n877: \t\t    function _deposit(address receiver, uint256 amount, bool isShare, bytes memory permitData)\n\n920: \t\t    function _withdraw(address receiver, address owner, uint256 amount, bool isShare)\n\n954: \t\t    function _repay(uint256 tokenId, uint256 amount, bool isShare, bytes memory permitData) internal {\n\n1017: \t\t    function _getAvailableBalance(uint256 debtExchangeRateX96, uint256 lendExchangeRateX96)\n\n1032: \t\t    function _sendPositionValue(\n\n1077: \t\t    function _cleanupLoan(uint256 tokenId, uint256 debtExchangeRateX96, uint256 lendExchangeRateX96, address owner)\n\n1090: \t\t    function _calculateLiquidation(uint256 debt, uint256 fullValue, uint256 collateralValue)\n\n1123: \t\t    function _handleReserveLiquidation(\n\n1143: \t\t    function _calculateTokenCollateralFactorX32(uint256 tokenId) internal view returns (uint32) {\n\n1150: \t\t    function _updateGlobalInterest()\n\n1167: \t\t    function _calculateGlobalInterest()\n\n1197: \t\t    function _requireLoanIsHealthy(uint256 tokenId, uint256 debt) internal view {\n\n1205: \t\t    function _updateAndCheckCollateral(\n\n1246: \t\t    function _resetDailyLendIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n1258: \t\t    function _resetDailyDebtIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n1270: \t\t    function _checkLoanIsHealthy(uint256 tokenId, uint256 debt)\n\n1281: \t\t    function _convertToShares(uint256 amount, uint256 exchangeRateX96, Math.Rounding rounding)\n\n1289: \t\t    function _convertToAssets(uint256 shares, uint256 exchangeRateX96, Math.Rounding rounding)\n\n1297: \t\t    function _addTokenToOwner(address to, uint256 tokenId) internal {\n\n1303: \t\t    function _removeTokenFromOwner(address from, uint256 tokenId) internal {\n```",
          "loc": [
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L195)",
            "[219](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L219)",
            "[231](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L231)",
            "[258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L258)",
            "[264](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L264)",
            "[271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L271)",
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[400](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L400)",
            "[410](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L410)",
            "[483](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L483)",
            "[497](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L497)",
            "[550](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L550)",
            "[652](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L652)",
            "[661](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L661)",
            "[685](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L685)",
            "[765](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L765)",
            "[788](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L788)",
            "[807](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L807)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[856](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L856)",
            "[870](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L877)",
            "[920](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L920)",
            "[954](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L954)",
            "[1017](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1017)",
            "[1032](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1032)",
            "[1077](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1077)",
            "[1090](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1090)",
            "[1123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1123)",
            "[1143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1143)",
            "[1150](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1150)",
            "[1167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1167)",
            "[1197](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1197)",
            "[1205](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1205)",
            "[1246](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1246)",
            "[1258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1258)",
            "[1270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1270)",
            "[1281](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1281)",
            "[1289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1289)",
            "[1297](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1297)",
            "[1303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1303)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n100: \t\t    function execute(ExecuteParams calldata params) external {\n\n218: \t\t    function configToken(uint256 tokenId, PositionConfig calldata config) external {\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L100)",
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L218)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n59: \t\t    function setWithdrawer(address _withdrawer) public onlyOwner {\n\n69: \t\t    function setOperator(address _operator, bool _active) public onlyOwner {\n\n79: \t\t    function setVault(address _vault, bool _active) public onlyOwner {\n\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n\n104: \t\t    function withdrawBalances(address[] calldata tokens, address to) external virtual {\n\n123: \t\t    function withdrawETH(address to) external {\n\n139: \t\t    function _validateSwap(\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n\n193: \t\t    function _decreaseFullLiquidityAndCollect(\n\n218: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n\n230: \t\t    function _validateOwner(uint256 tokenId, address vault) internal returns (address owner) {\n\n251: \t\t    receive() external payable {\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L59)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L69)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L79)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L104)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L123)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L139)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)",
            "[193](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L193)",
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L218)",
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L230)",
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L251)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n87: \t\t    function executeWithVault(ExecuteParams calldata params, address vault) external {\n\n101: \t\t    function execute(ExecuteParams calldata params) external nonReentrant {\n\n200: \t\t    function withdrawLeftoverBalances(uint256 tokenId, address to) external nonReentrant {\n\n243: \t\t    function setReward(uint64 _totalRewardX64) external onlyOwner {\n\n249: \t\t    function _increaseBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n254: \t\t    function _setBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n266: \t\t    function _withdrawBalanceInternal(uint256 tokenId, address token, address to, uint256 balance, uint256 amount)\n\n276: \t\t    function _checkApprovals(address token0, address token1) internal {\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L87)",
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L101)",
            "[200](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L200)",
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L243)",
            "[249](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L249)",
            "[254](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L254)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L266)",
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L276)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n97: \t\t    function executeWithVault(ExecuteParams calldata params, address vault) external {\n\n111: \t\t    function execute(ExecuteParams calldata params) external {\n\n276: \t\t    function configToken(uint256 tokenId, address vault, PositionConfig calldata config) external {\n\n300: \t\t    function _getTickSpacing(uint24 fee) internal view returns (int24) {\n```",
          "loc": [
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L97)",
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L111)",
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L276)",
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L300)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n40: \t\t    function leverageUp(LeverageUpParams calldata params) external {\n\n123: \t\t    function leverageDown(LeverageDownParams calldata params) external {\n```",
          "loc": [
            "[40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L40)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L123)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n98: \t\t    function executeWithPermit(uint256 tokenId, Instructions memory instructions, uint8 v, bytes32 r, bytes32 s)\n\n115: \t\t    function execute(uint256 tokenId, Instructions memory instructions) public returns (uint256 newTokenId) {\n\n356: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n\n397: \t\t    function swap(SwapParams calldata params) external payable returns (uint256 amountOut) {\n\n467: \t\t    function swapAndMint(SwapAndMintParams calldata params)\n\n532: \t\t    function swapAndIncreaseLiquidity(SwapAndIncreaseLiquidityParams calldata params)\n\n566: \t\t    function _prepareAddApproved(\n\n598: \t\t    function _prepareAddPermit2(\n\n653: \t\t    function _prepareAdd(\n\n705: \t\t    function _swapAndMint(SwapAndMintParams memory params, bool unwrap)\n\n735: \t\t    function _swapAndIncrease(SwapAndIncreaseLiquidityParams memory params, IERC20 token0, IERC20 token1, bool unwrap)\n\n779: \t\t    function _swapAndPrepareAmounts(SwapAndMintParams memory params, bool unwrap)\n\n841: \t\t    function _returnLeftoverTokens(\n\n864: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n\n877: \t\t    function _decreaseLiquidity(\n\n892: \t\t    function _collectFees(uint256 tokenId, IERC20 token0, IERC20 token1, uint128 collectAmount0, uint128 collectAmount1)\n\n914: \t\t    receive() external payable {\n```",
          "loc": [
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L98)",
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L115)",
            "[356](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L356)",
            "[397](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L397)",
            "[467](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L467)",
            "[532](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L532)",
            "[566](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L566)",
            "[598](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L598)",
            "[653](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L653)",
            "[705](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L705)",
            "[735](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L735)",
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L779)",
            "[841](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L841)",
            "[864](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L864)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L877)",
            "[892](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L892)",
            "[914](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L914)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n41: \t\t    function liquidate(LiquidateParams calldata params) external {\n\n67: \t\t    function uniswapV3FlashCallback(uint256 fee0, uint256 fee1, bytes calldata callbackData) external {\n```",
          "loc": [
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L41)",
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L67)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n73: \t\t    function _routerSwap(RouterSwapParams memory params)\n\n132: \t\t    function _poolSwap(PoolSwapParams memory params) internal returns (uint256 amountInDelta, uint256 amountOutDelta) {\n\n156: \t\t    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external override {\n\n171: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L73)",
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L132)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L156)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L171)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@notice` from function declaration",
      "description": "Some functions have an incomplete NatSpec: add a `@notice` notation to describe the function to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n133: \t\t    function _checkPoolPrice(address token0, address token1, uint24 fee, uint256 derivedPoolPriceX96) internal view {\n\n139: \t\t    function _requireMaxDifference(uint256 priceX96, uint256 verifyPriceX96, uint256 maxDifferenceX10000)\n\n272: \t\t    function _getReferenceTokenPriceX96(address token, uint256 cachedChainlinkReferencePriceX96)\n\n329: \t\t    function _getChainlinkPriceX96(address token) internal view returns (uint256) {\n\n346: \t\t    function _getTWAPPriceX96(TokenConfig memory feedConfig) internal view returns (uint256 poolTWAPPriceX96) {\n\n359: \t\t    function _getReferencePoolPriceX96(IUniswapV3Pool pool, uint32 twapSeconds) internal view returns (uint256) {\n\n395: \t\t    function _initializeState(uint256 tokenId) internal view returns (PositionState memory state) {\n\n426: \t\t    function _getAmounts(PositionState memory state)\n\n445: \t\t    function _getUncollectedFees(PositionState memory position, int24 tick)\n\n472: \t\t    function _getFeeGrowthInside(\n\n499: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L133)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L139)",
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L272)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L329)",
            "[346](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L346)",
            "[359](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L359)",
            "[395](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L395)",
            "[426](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L426)",
            "[445](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L445)",
            "[472](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L472)",
            "[499](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L499)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n609: \t\t    function decreaseLiquidityAndCollect(DecreaseLiquidityAndCollectParams calldata params)\n\n877: \t\t    function _deposit(address receiver, uint256 amount, bool isShare, bytes memory permitData)\n\n920: \t\t    function _withdraw(address receiver, address owner, uint256 amount, bool isShare)\n\n954: \t\t    function _repay(uint256 tokenId, uint256 amount, bool isShare, bytes memory permitData) internal {\n\n1017: \t\t    function _getAvailableBalance(uint256 debtExchangeRateX96, uint256 lendExchangeRateX96)\n\n1032: \t\t    function _sendPositionValue(\n\n1077: \t\t    function _cleanupLoan(uint256 tokenId, uint256 debtExchangeRateX96, uint256 lendExchangeRateX96, address owner)\n\n1090: \t\t    function _calculateLiquidation(uint256 debt, uint256 fullValue, uint256 collateralValue)\n\n1123: \t\t    function _handleReserveLiquidation(\n\n1143: \t\t    function _calculateTokenCollateralFactorX32(uint256 tokenId) internal view returns (uint32) {\n\n1150: \t\t    function _updateGlobalInterest()\n\n1167: \t\t    function _calculateGlobalInterest()\n\n1197: \t\t    function _requireLoanIsHealthy(uint256 tokenId, uint256 debt) internal view {\n\n1205: \t\t    function _updateAndCheckCollateral(\n\n1246: \t\t    function _resetDailyLendIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n1258: \t\t    function _resetDailyDebtIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n1270: \t\t    function _checkLoanIsHealthy(uint256 tokenId, uint256 debt)\n\n1281: \t\t    function _convertToShares(uint256 amount, uint256 exchangeRateX96, Math.Rounding rounding)\n\n1289: \t\t    function _convertToAssets(uint256 shares, uint256 exchangeRateX96, Math.Rounding rounding)\n\n1297: \t\t    function _addTokenToOwner(address to, uint256 tokenId) internal {\n\n1303: \t\t    function _removeTokenFromOwner(address from, uint256 tokenId) internal {\n```",
          "loc": [
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[609](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L609)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L877)",
            "[920](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L920)",
            "[954](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L954)",
            "[1017](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1017)",
            "[1032](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1032)",
            "[1077](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1077)",
            "[1090](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1090)",
            "[1123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1123)",
            "[1143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1143)",
            "[1150](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1150)",
            "[1167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1167)",
            "[1197](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1197)",
            "[1205](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1205)",
            "[1246](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1246)",
            "[1258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1258)",
            "[1270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1270)",
            "[1281](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1281)",
            "[1289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1289)",
            "[1297](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1297)",
            "[1303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1303)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n218: \t\t    function configToken(uint256 tokenId, PositionConfig calldata config) external {\n```",
          "loc": [
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L218)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n139: \t\t    function _validateSwap(\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n\n193: \t\t    function _decreaseFullLiquidityAndCollect(\n\n218: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n\n230: \t\t    function _validateOwner(uint256 tokenId, address vault) internal returns (address owner) {\n\n251: \t\t    receive() external payable {\n```",
          "loc": [
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L139)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)",
            "[193](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L193)",
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L218)",
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L230)",
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L251)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n249: \t\t    function _increaseBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n254: \t\t    function _setBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n266: \t\t    function _withdrawBalanceInternal(uint256 tokenId, address token, address to, uint256 balance, uint256 amount)\n\n276: \t\t    function _checkApprovals(address token0, address token1) internal {\n```",
          "loc": [
            "[249](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L249)",
            "[254](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L254)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L266)",
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L276)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n276: \t\t    function configToken(uint256 tokenId, address vault, PositionConfig calldata config) external {\n\n300: \t\t    function _getTickSpacing(uint24 fee) internal view returns (int24) {\n```",
          "loc": [
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L276)",
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L300)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n40: \t\t    function leverageUp(LeverageUpParams calldata params) external {\n\n123: \t\t    function leverageDown(LeverageDownParams calldata params) external {\n```",
          "loc": [
            "[40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L40)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L123)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n566: \t\t    function _prepareAddApproved(\n\n598: \t\t    function _prepareAddPermit2(\n\n653: \t\t    function _prepareAdd(\n\n705: \t\t    function _swapAndMint(SwapAndMintParams memory params, bool unwrap)\n\n735: \t\t    function _swapAndIncrease(SwapAndIncreaseLiquidityParams memory params, IERC20 token0, IERC20 token1, bool unwrap)\n\n779: \t\t    function _swapAndPrepareAmounts(SwapAndMintParams memory params, bool unwrap)\n\n841: \t\t    function _returnLeftoverTokens(\n\n864: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n\n877: \t\t    function _decreaseLiquidity(\n\n892: \t\t    function _collectFees(uint256 tokenId, IERC20 token0, IERC20 token1, uint128 collectAmount0, uint128 collectAmount1)\n\n914: \t\t    receive() external payable {\n```",
          "loc": [
            "[566](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L566)",
            "[598](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L598)",
            "[653](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L653)",
            "[705](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L705)",
            "[735](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L735)",
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L779)",
            "[841](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L841)",
            "[864](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L864)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L877)",
            "[892](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L892)",
            "[914](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L914)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n67: \t\t    function uniswapV3FlashCallback(uint256 fee0, uint256 fee1, bytes calldata callbackData) external {\n```",
          "loc": [
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L67)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n73: \t\t    function _routerSwap(RouterSwapParams memory params)\n\n132: \t\t    function _poolSwap(PoolSwapParams memory params) internal returns (uint256 amountInDelta, uint256 amountOutDelta) {\n\n156: \t\t    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external override {\n\n171: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L73)",
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L132)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L156)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L171)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@param` from function declaration",
      "description": "Some functions have an incomplete NatSpec: add a `@param` notation to describe the function parameters to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit missing token0, token1, fee, derivedPoolPriceX96\n133: \t\t    function _checkPoolPrice(address token0, address token1, uint24 fee, uint256 derivedPoolPriceX96) internal view {\n\n// @audit missing priceX96, verifyPriceX96, maxDifferenceX10000\n139: \t\t    function _requireMaxDifference(uint256 priceX96, uint256 verifyPriceX96, uint256 maxDifferenceX10000)\n\n// @audit missing token, cachedChainlinkReferencePriceX96\n272: \t\t    function _getReferenceTokenPriceX96(address token, uint256 cachedChainlinkReferencePriceX96)\n\n// @audit missing token\n329: \t\t    function _getChainlinkPriceX96(address token) internal view returns (uint256) {\n\n// @audit missing feedConfig\n346: \t\t    function _getTWAPPriceX96(TokenConfig memory feedConfig) internal view returns (uint256 poolTWAPPriceX96) {\n\n// @audit missing pool, twapSeconds\n359: \t\t    function _getReferencePoolPriceX96(IUniswapV3Pool pool, uint32 twapSeconds) internal view returns (uint256) {\n\n// @audit missing tokenId\n395: \t\t    function _initializeState(uint256 tokenId) internal view returns (PositionState memory state) {\n\n// @audit missing state\n426: \t\t    function _getAmounts(PositionState memory state)\n\n// @audit missing position, tick\n445: \t\t    function _getUncollectedFees(PositionState memory position, int24 tick)\n\n// @audit missing pool, tickLower, tickUpper, tickCurrent, feeGrowthGlobal0X128, feeGrowthGlobal1X128\n472: \t\t    function _getFeeGrowthInside(\n\n// @audit missing tokenA, tokenB, fee\n499: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L133)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L139)",
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L272)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L329)",
            "[346](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L346)",
            "[359](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L359)",
            "[395](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L395)",
            "[426](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L426)",
            "[445](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L445)",
            "[472](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L472)",
            "[499](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L499)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n195: \t\t    function vaultInfo()\n\n// @audit missing assets, receiver, permitData\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n// @audit missing shares, receiver, permitData\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n// @audit missing r, s\n410: \t\t    function createWithPermit(\n\n// @audit missing receiver, amount, isShare, permitData\n877: \t\t    function _deposit(address receiver, uint256 amount, bool isShare, bytes memory permitData)\n\n// @audit missing receiver, owner, amount, isShare\n920: \t\t    function _withdraw(address receiver, address owner, uint256 amount, bool isShare)\n\n// @audit missing tokenId, amount, isShare, permitData\n954: \t\t    function _repay(uint256 tokenId, uint256 amount, bool isShare, bytes memory permitData) internal {\n\n// @audit missing debtExchangeRateX96, lendExchangeRateX96\n1017: \t\t    function _getAvailableBalance(uint256 debtExchangeRateX96, uint256 lendExchangeRateX96)\n\n// @audit missing tokenId, liquidationValue, fullValue, feeValue, recipient\n1032: \t\t    function _sendPositionValue(\n\n// @audit missing tokenId, debtExchangeRateX96, lendExchangeRateX96, owner\n1077: \t\t    function _cleanupLoan(uint256 tokenId, uint256 debtExchangeRateX96, uint256 lendExchangeRateX96, address owner)\n\n// @audit missing debt, fullValue, collateralValue\n1090: \t\t    function _calculateLiquidation(uint256 debt, uint256 fullValue, uint256 collateralValue)\n\n// @audit missing reserveCost, newDebtExchangeRateX96, newLendExchangeRateX96\n1123: \t\t    function _handleReserveLiquidation(\n\n// @audit missing tokenId\n1143: \t\t    function _calculateTokenCollateralFactorX32(uint256 tokenId) internal view returns (uint32) {\n\n1150: \t\t    function _updateGlobalInterest()\n\n1167: \t\t    function _calculateGlobalInterest()\n\n// @audit missing tokenId, debt\n1197: \t\t    function _requireLoanIsHealthy(uint256 tokenId, uint256 debt) internal view {\n\n// @audit missing tokenId, debtExchangeRateX96, lendExchangeRateX96, oldShares, newShares\n1205: \t\t    function _updateAndCheckCollateral(\n\n// @audit missing newLendExchangeRateX96, force\n1246: \t\t    function _resetDailyLendIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n// @audit missing newLendExchangeRateX96, force\n1258: \t\t    function _resetDailyDebtIncreaseLimit(uint256 newLendExchangeRateX96, bool force) internal {\n\n// @audit missing tokenId, debt\n1270: \t\t    function _checkLoanIsHealthy(uint256 tokenId, uint256 debt)\n\n// @audit missing amount, exchangeRateX96, rounding\n1281: \t\t    function _convertToShares(uint256 amount, uint256 exchangeRateX96, Math.Rounding rounding)\n\n// @audit missing shares, exchangeRateX96, rounding\n1289: \t\t    function _convertToAssets(uint256 shares, uint256 exchangeRateX96, Math.Rounding rounding)\n\n// @audit missing to, tokenId\n1297: \t\t    function _addTokenToOwner(address to, uint256 tokenId) internal {\n\n// @audit missing from, tokenId\n1303: \t\t    function _removeTokenFromOwner(address from, uint256 tokenId) internal {\n```",
          "loc": [
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L195)",
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[410](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L410)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L877)",
            "[920](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L920)",
            "[954](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L954)",
            "[1017](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1017)",
            "[1032](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1032)",
            "[1077](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1077)",
            "[1090](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1090)",
            "[1123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1123)",
            "[1143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1143)",
            "[1150](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1150)",
            "[1167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1167)",
            "[1197](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1197)",
            "[1205](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1205)",
            "[1246](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1246)",
            "[1258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1258)",
            "[1270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1270)",
            "[1281](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1281)",
            "[1289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1289)",
            "[1297](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1297)",
            "[1303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1303)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit missing params\n100: \t\t    function execute(ExecuteParams calldata params) external {\n\n// @audit missing tokenId, config\n218: \t\t    function configToken(uint256 tokenId, PositionConfig calldata config) external {\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L100)",
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L218)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit missing _maxTWAPTickDifference, _TWAPSeconds\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n\n// @audit missing swap0For1, amountIn, pool, twapPeriod, maxTickDifference, maxPriceDifferenceX64\n139: \t\t    function _validateSwap(\n\n// @audit missing pool, twapPeriod, currentTick, maxDifference\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n// @audit missing pool, twapPeriod\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n\n// @audit missing tokenId, liquidity, amountRemoveMin0, amountRemoveMin1, deadline\n193: \t\t    function _decreaseFullLiquidityAndCollect(\n\n// @audit missing to, token, amount, unwrap\n218: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n\n// @audit missing tokenId, vault\n230: \t\t    function _validateOwner(uint256 tokenId, address vault) internal returns (address owner) {\n\n251: \t\t    receive() external payable {\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L139)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)",
            "[193](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L193)",
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L218)",
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L230)",
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L251)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit missing params, vault\n87: \t\t    function executeWithVault(ExecuteParams calldata params, address vault) external {\n\n// @audit missing params\n101: \t\t    function execute(ExecuteParams calldata params) external nonReentrant {\n\n// @audit missing tokenId, token, amount\n249: \t\t    function _increaseBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n// @audit missing tokenId, token, amount\n254: \t\t    function _setBalance(uint256 tokenId, address token, uint256 amount) internal {\n\n// @audit missing tokenId, token, to, balance, amount\n266: \t\t    function _withdrawBalanceInternal(uint256 tokenId, address token, address to, uint256 balance, uint256 amount)\n\n// @audit missing token0, token1\n276: \t\t    function _checkApprovals(address token0, address token1) internal {\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L87)",
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L101)",
            "[249](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L249)",
            "[254](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L254)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L266)",
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L276)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit missing params, vault\n97: \t\t    function executeWithVault(ExecuteParams calldata params, address vault) external {\n\n// @audit missing params\n111: \t\t    function execute(ExecuteParams calldata params) external {\n\n// @audit missing tokenId, vault, config\n276: \t\t    function configToken(uint256 tokenId, address vault, PositionConfig calldata config) external {\n\n// @audit missing fee\n300: \t\t    function _getTickSpacing(uint24 fee) internal view returns (int24) {\n```",
          "loc": [
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L97)",
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L276)",
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L300)",
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L111)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n// @audit missing params\n40: \t\t    function leverageUp(LeverageUpParams calldata params) external {\n\n// @audit missing params\n123: \t\t    function leverageDown(LeverageDownParams calldata params) external {\n```",
          "loc": [
            "[40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L40)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L123)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit missing from, tokenId, data\n356: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n\n// @audit missing token0, token1, otherToken, amount0, amount1, amountOther\n566: \t\t    function _prepareAddApproved(\n\n// @audit missing token0, token1, otherToken, amount0, amount1, amountOther, permit, signature\n598: \t\t    function _prepareAddPermit2(\n\n// @audit missing token0, token1, otherToken, amount0, amount1, amountOther\n653: \t\t    function _prepareAdd(\n\n// @audit missing params, unwrap\n705: \t\t    function _swapAndMint(SwapAndMintParams memory params, bool unwrap)\n\n// @audit missing params, token0, token1, unwrap\n735: \t\t    function _swapAndIncrease(SwapAndIncreaseLiquidityParams memory params, IERC20 token0, IERC20 token1, bool unwrap)\n\n// @audit missing params, unwrap\n779: \t\t    function _swapAndPrepareAmounts(SwapAndMintParams memory params, bool unwrap)\n\n// @audit missing to, token0, token1, total0, total1, added0, added1, unwrap\n841: \t\t    function _returnLeftoverTokens(\n\n// @audit missing to, token, amount, unwrap\n864: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n\n// @audit missing tokenId, liquidity, deadline, token0Min, token1Min\n877: \t\t    function _decreaseLiquidity(\n\n// @audit missing tokenId, token0, token1, collectAmount0, collectAmount1\n892: \t\t    function _collectFees(uint256 tokenId, IERC20 token0, IERC20 token1, uint128 collectAmount0, uint128 collectAmount1)\n\n914: \t\t    receive() external payable {\n```",
          "loc": [
            "[864](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L864)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L877)",
            "[892](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L892)",
            "[356](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L356)",
            "[914](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L914)",
            "[735](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L735)",
            "[705](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L705)",
            "[653](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L653)",
            "[598](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L598)",
            "[566](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L566)",
            "[841](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L841)",
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L779)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n// @audit missing params\n41: \t\t    function liquidate(LiquidateParams calldata params) external {\n\n// @audit missing fee0, fee1, callbackData\n67: \t\t    function uniswapV3FlashCallback(uint256 fee0, uint256 fee1, bytes calldata callbackData) external {\n```",
          "loc": [
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L67)",
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L41)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n// @audit missing params\n73: \t\t    function _routerSwap(RouterSwapParams memory params)\n\n// @audit missing params\n132: \t\t    function _poolSwap(PoolSwapParams memory params) internal returns (uint256 amountInDelta, uint256 amountOutDelta) {\n\n// @audit missing amount0Delta, amount1Delta, data\n156: \t\t    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external override {\n\n// @audit missing tokenA, tokenB, fee\n171: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L73)",
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L132)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L156)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L171)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Incomplete NatSpec `@return` from function declaration",
      "description": "Some functions have an incomplete NatSpec: add a `@return` notation to describe the function return value to improve the code documentation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n272: \t\t    function _getReferenceTokenPriceX96(address token, uint256 cachedChainlinkReferencePriceX96)\n\n329: \t\t    function _getChainlinkPriceX96(address token) internal view returns (uint256) {\n\n346: \t\t    function _getTWAPPriceX96(TokenConfig memory feedConfig) internal view returns (uint256 poolTWAPPriceX96) {\n\n359: \t\t    function _getReferencePoolPriceX96(IUniswapV3Pool pool, uint32 twapSeconds) internal view returns (uint256) {\n\n395: \t\t    function _initializeState(uint256 tokenId) internal view returns (PositionState memory state) {\n\n426: \t\t    function _getAmounts(PositionState memory state)\n\n445: \t\t    function _getUncollectedFees(PositionState memory position, int24 tick)\n\n472: \t\t    function _getFeeGrowthInside(\n\n499: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[426](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L426)",
            "[445](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L445)",
            "[472](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L472)",
            "[395](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L395)",
            "[329](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L329)",
            "[346](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L346)",
            "[499](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L499)",
            "[359](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L359)",
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L272)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n264: \t\t    function loanCount(address owner) external view override returns (uint256) {\n\n271: \t\t    function loanAtIndex(address owner, uint256 index) external view override returns (uint256) {\n\n384: \t\t    function deposit(uint256 assets, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n390: \t\t    function mint(uint256 shares, address receiver, bytes calldata permitData) external override returns (uint256) {\n\n877: \t\t    function _deposit(address receiver, uint256 amount, bool isShare, bytes memory permitData)\n\n920: \t\t    function _withdraw(address receiver, address owner, uint256 amount, bool isShare)\n\n1017: \t\t    function _getAvailableBalance(uint256 debtExchangeRateX96, uint256 lendExchangeRateX96)\n\n1032: \t\t    function _sendPositionValue(\n\n1090: \t\t    function _calculateLiquidation(uint256 debt, uint256 fullValue, uint256 collateralValue)\n\n1123: \t\t    function _handleReserveLiquidation(\n\n1143: \t\t    function _calculateTokenCollateralFactorX32(uint256 tokenId) internal view returns (uint32) {\n\n1150: \t\t    function _updateGlobalInterest()\n\n1167: \t\t    function _calculateGlobalInterest()\n\n1270: \t\t    function _checkLoanIsHealthy(uint256 tokenId, uint256 debt)\n\n1281: \t\t    function _convertToShares(uint256 amount, uint256 exchangeRateX96, Math.Rounding rounding)\n\n1289: \t\t    function _convertToAssets(uint256 shares, uint256 exchangeRateX96, Math.Rounding rounding)\n```",
          "loc": [
            "[271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L271)",
            "[264](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L264)",
            "[384](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L384)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L390)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L877)",
            "[920](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L920)",
            "[1017](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1017)",
            "[1032](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1032)",
            "[1090](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1090)",
            "[1123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1123)",
            "[1143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1143)",
            "[1150](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1150)",
            "[1167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1167)",
            "[1270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1270)",
            "[1281](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1281)",
            "[1289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1289)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n139: \t\t    function _validateSwap(\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n\n193: \t\t    function _decreaseFullLiquidityAndCollect(\n\n230: \t\t    function _validateOwner(uint256 tokenId, address vault) internal returns (address owner) {\n```",
          "loc": [
            "[193](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L193)",
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L230)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L139)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n300: \t\t    function _getTickSpacing(uint24 fee) internal view returns (int24) {\n```",
          "loc": [
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L300)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n98: \t\t    function executeWithPermit(uint256 tokenId, Instructions memory instructions, uint8 v, bytes32 r, bytes32 s)\n\n115: \t\t    function execute(uint256 tokenId, Instructions memory instructions) public returns (uint256 newTokenId) {\n\n356: \t\t    function onERC721Received(address, address from, uint256 tokenId, bytes calldata data)\n\n397: \t\t    function swap(SwapParams calldata params) external payable returns (uint256 amountOut) {\n\n467: \t\t    function swapAndMint(SwapAndMintParams calldata params)\n\n532: \t\t    function swapAndIncreaseLiquidity(SwapAndIncreaseLiquidityParams calldata params)\n\n653: \t\t    function _prepareAdd(\n\n705: \t\t    function _swapAndMint(SwapAndMintParams memory params, bool unwrap)\n\n735: \t\t    function _swapAndIncrease(SwapAndIncreaseLiquidityParams memory params, IERC20 token0, IERC20 token1, bool unwrap)\n\n779: \t\t    function _swapAndPrepareAmounts(SwapAndMintParams memory params, bool unwrap)\n\n877: \t\t    function _decreaseLiquidity(\n\n892: \t\t    function _collectFees(uint256 tokenId, IERC20 token0, IERC20 token1, uint128 collectAmount0, uint128 collectAmount1)\n```",
          "loc": [
            "[397](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L397)",
            "[467](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L467)",
            "[532](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L532)",
            "[653](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L653)",
            "[705](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L705)",
            "[735](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L735)",
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L779)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L877)",
            "[892](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L892)",
            "[356](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L356)",
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L98)",
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L115)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n73: \t\t    function _routerSwap(RouterSwapParams memory params)\n\n132: \t\t    function _poolSwap(PoolSwapParams memory params) internal returns (uint256 amountInDelta, uint256 amountOutDelta) {\n\n171: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L132)",
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L73)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L171)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use `Array.unsafeAccess` to avoid repeated array length checks",
      "description": "When using storage arrays, solidity adds an internal lookup of the array's length (a **Gcoldsload 2100 gas**) to ensure it doesn't read past the array's end.\n\nIt's possible to avoid this lookup by using `Array.unsafeAccess` in cases where the length has already been checked.",
      "gasSavings": 8400,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n112: \t\t            uint256 balance = IERC20(tokens[i]).balanceOf(address(this));\n\n114: \t\t                _transferToken(to, IERC20(tokens[i]), balance, true);\n```",
          "loc": [
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L112)",
            "[114](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L114)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n234: \t\t            uint256 balance = positionBalances[0][tokens[i]];\n\n235: \t\t            _withdrawBalanceInternal(0, tokens[i], to, balance, balance);\n```",
          "loc": [
            "[234](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L234)",
            "[235](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L235)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables can be packed into fewer storage slots",
      "description": "Each slot saved can avoid an extra Gsset (**20000 gas**). Reads and writes (if two variables that occupy the same slot are written by the same function) will have a cheaper gas consumption.",
      "gasSavings": 20000,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit Can save 1 storage slot (from 23 to 22) \n// @audit Consider using the following order:\n/*\n  *\tmapping(address => TokenConfig) tokenConfigs (32)\n  *\tuint256 debtSharesTotal (32)\n  *\tuint256 lastExchangeRateUpdate (32)\n  *\tuint256 lastDebtExchangeRateX96 (32)\n  *\tuint256 lastLendExchangeRateX96 (32)\n  *\tuint256 globalDebtLimit (32)\n  *\tuint256 globalLendLimit (32)\n  *\tuint256 minLoanSize (32)\n  *\tuint256 dailyLendIncreaseLimitMin (32)\n  *\tuint256 dailyLendIncreaseLimitLeft (32)\n  *\tuint256 dailyLendIncreaseLimitLastReset (32)\n  *\tuint256 dailyDebtIncreaseLimitMin (32)\n  *\tuint256 dailyDebtIncreaseLimitLeft (32)\n  *\tuint256 dailyDebtIncreaseLimitLastReset (32)\n  *\tmapping(uint256 => Loan) loans (32)\n  *\tmapping(address => uint256[]) ownedTokens (32)\n  *\tmapping(uint256 => uint256) ownedTokensIndex (32)\n  *\tmapping(uint256 => address) tokenOwner (32)\n  *\tuint256 transformedTokenId (32)\n  *\tmapping(address => bool) transformerAllowList (32)\n  *\tmapping(address => mapping(uint256 => mapping(address => bool))) transformApprovals (32)\n  *\taddress emergencyAdmin (20)\n  *\tuint32 reserveFactorX32 (4)\n  *\tuint32 reserveProtectionFactorX32 (4)\n*/\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Structs can be packed into fewer storage slots",
      "description": "Each slot saved can avoid an extra Gsset (**20000 gas**) for the first setting of the struct. Subsequent reads as well as writes have smaller gas savings.",
      "gasSavings": 80000,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit Can save 1 storage slot (from 7 to 6) \n// @audit Consider using the following order:\n/*\n  *\tuint256 tokenId (32)\n  *\tbytes swapData (32)\n  *\tuint256 amountRemoveMin0 (32)\n  *\tuint256 amountRemoveMin1 (32)\n  *\tuint256 deadline (32)\n  *\tuint128 liquidity (16)\n  *\tuint64 rewardX64 (8)\n*/\n63: \t\t    struct ExecuteParams {\n64: \t\t        uint256 tokenId; // tokenid to process\n65: \t\t        bytes swapData; // if its a swap order - must include swap data\n66: \t\t        uint128 liquidity; // liquidity the calculations are based on\n67: \t\t        uint256 amountRemoveMin0; // min amount to be removed from liquidity\n68: \t\t        uint256 amountRemoveMin1; // min amount to be removed from liquidity\n69: \t\t        uint256 deadline; // for uniswap operations - operator promises fair value\n70: \t\t        uint64 rewardX64; // which reward will be used for protocol, can be max configured amount (considering onlyFees)\n71: \t\t    }\n```",
          "loc": [
            "[63-71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L63-L71)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit Can save 2 storage slots (from 9 to 7) \n// @audit Consider using the following order:\n/*\n  *\tuint256 tokenId (32)\n  *\tuint256 amountIn (32)\n  *\tbytes swapData (32)\n  *\tuint256 amountRemoveMin0 (32)\n  *\tuint256 amountRemoveMin1 (32)\n  *\tuint256 deadline (32)\n  *\tuint128 liquidity (16)\n  *\tuint64 rewardX64 (8)\n  *\tbool swap0To1 (1)\n*/\n53: \t\t    struct ExecuteParams {\n54: \t\t        uint256 tokenId;\n55: \t\t        bool swap0To1;\n56: \t\t        uint256 amountIn; // if this is set to 0 no swap happens\n57: \t\t        bytes swapData;\n58: \t\t        uint128 liquidity; // liquidity the calculations are based on\n59: \t\t        uint256 amountRemoveMin0; // min amount to be removed from liquidity\n60: \t\t        uint256 amountRemoveMin1; // min amount to be removed from liquidity\n61: \t\t        uint256 deadline; // for uniswap operations - operator promises fair value\n62: \t\t        uint64 rewardX64; // which reward will be used for protocol, can be max configured amount (considering onlyFees)\n63: \t\t    }\n```",
          "loc": [
            "[53-63](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L53-L63)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit Can save 1 storage slot (from 8 to 7) \n// @audit Consider using the following order:\n/*\n  *\tuint256 amountIn (32)\n  *\tuint256 minAmountOut (32)\n  *\tbytes swapData (32)\n  *\tbytes permitData (32)\n  *\tIERC20 tokenIn (20)\n  *\tbool unwrap (1)\n  *\tIERC20 tokenOut (20)\n  *\taddress recipient (20)\n*/\n382: \t\t    struct SwapParams {\n383: \t\t        IERC20 tokenIn;\n384: \t\t        IERC20 tokenOut;\n385: \t\t        uint256 amountIn;\n386: \t\t        uint256 minAmountOut;\n387: \t\t        address recipient; // recipient of tokenOut and leftover tokenIn (if any leftover)\n388: \t\t        bytes swapData;\n389: \t\t        bool unwrap; // if tokenIn or tokenOut is WETH - unwrap\n390: \t\t        bytes permitData; // if permit2 signatures are used - set this\n391: \t\t    }\n```",
          "loc": [
            "[382-391](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L382-L391)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiple `mapping`s that share an ID can be combined into a single `mapping` of ID / `struct`",
      "description": "This can avoid a Gsset (**20000 Gas**) per mapping combined. Reads and writes will also be cheaper when a function requires both values as they both can fit in the same storage slot.\n\nFinally, if both fields are accessed in the same function, this can save **~42 gas** per access due to not having to recalculate the key's `keccak256` hash (Gkeccak256 - **30 Gas**) and that calculation's associated stack operations.",
      "gasSavings": 40924,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit consider merging ownedTokensIndex, tokenOwner\n158: \t\t    mapping(uint256 => uint256) private ownedTokensIndex; // Mapping from token ID to index of the owner tokens list (for removal without loop)\n159: \t\t    mapping(uint256 => address) private tokenOwner; // Mapping from token ID to owner\n\n// @audit consider merging transformerAllowList, transformApprovals\n163: \t\t    mapping(address => bool) public transformerAllowList; // contracts allowed to transform positions (selected audited contracts e.g. V3Utils)\n164: \t\t    mapping(address => mapping(uint256 => mapping(address => bool))) public transformApprovals; // owners permissions for other addresses to call transform on owners behalf (e.g. AutoRange contract)\n```",
          "loc": [
            "[163](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L163)",
            "[158](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L158)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use of `memory` instead of `storage` for struct/array state variables",
      "description": "When fetching data from `storage`, using the `memory` keyword to assign it to a variable reads all fields of the struct/array and incurs a Gcoldsload (**2100 gas**) for each field.\n\nThis can be avoided by declaring the variable with the `storage` keyword and caching the necessary fields in stack variables.\n\nThe `memory` keyword should only be used if the entire struct/array is being returned or passed to a function that requires `memory`, or if it is being read from another `memory` array/struct.",
      "gasSavings": 54600,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n334: \t\t        TokenConfig memory feedConfig = feedConfigs[token];\n```",
          "loc": [
            "[334](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L334)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n106: \t\t        PositionConfig memory config = positionConfigs[params.tokenId];\n```",
          "loc": [
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n116: \t\t        PositionConfig memory config = positionConfigs[params.tokenId];\n```",
          "loc": [
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L116)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Cache state variables with stack variables",
      "description": "Caching of a state variable replaces each Gwarmaccess (**100 gas**) with a cheaper stack read. Other less obvious fixes/optimizations include having local memory caches of state variable structs, or having local caches of state variable contracts/addresses.",
      "gasSavings": 1900,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit kinkX96 on lines 66, 69\n70: \t\t            uint256 excessUtilX96 = utilizationRateX96 - kinkX96;\n\n// @audit baseRatePerSecondX96 on line 67\n69: \t\t            uint256 normalRateX96 = (kinkX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n\n// @audit multiplierPerSecondX96 on line 67\n69: \t\t            uint256 normalRateX96 = (kinkX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n```",
          "loc": [
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L70)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L69)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L69)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit globalLendLimit on line 304\n307: \t\t            return globalLendLimit - value;\n\n// @audit globalLendLimit on line 315\n318: \t\t            return _convertToShares(globalLendLimit - value, lendExchangeRateX96, Math.Rounding.Down);\n\n// @audit transformedTokenId on line 505\n528: \t\t        tokenId = transformedTokenId;\n\n// @audit debtSharesTotal on line 569\n571: \t\t        if (debtSharesTotal > _convertToShares(globalDebtLimit, newDebtExchangeRateX96, Math.Rounding.Down)) {\n\n// @audit dailyDebtIncreaseLimitLeft on line 574\n577: \t\t            dailyDebtIncreaseLimitLeft -= assets;\n\n// @audit dailyLendIncreaseLimitLeft on line 910\n913: \t\t            dailyLendIncreaseLimitLeft -= assets;\n```",
          "loc": [
            "[318](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L318)",
            "[307](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L307)",
            "[528](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L528)",
            "[571](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L571)",
            "[577](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L577)",
            "[913](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L913)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid contract existence checks by using low level calls",
      "description": "Prior to Solidity 0.8.10 the compiler inserted extra code, including EXTCODESIZE (**100 gas**), to check for contract existence for external function calls.\n\nIn more recent solidity versions, the compiler will not insert these checks if the external call has a return value.\n\nA similar behavior can be achieved in earlier versions by using low - level calls, since low level calls never check for contract existence.",
      "gasSavings": 11600,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n82: \t\t        referenceTokenDecimals = IERC20Metadata(_referenceToken).decimals();\n\n215: \t\t        uint8 feedDecimals = feed.decimals();\n\n216: \t\t        uint8 tokenDecimals = IERC20Metadata(token).decimals();\n\n225: \t\t            address token0 = pool.token0();\n\n226: \t\t            address token1 = pool.token1();\n\n363: \t\t            (sqrtPriceX96,,,,,,) = pool.slot0();\n\n368: \t\t            (int56[] memory tickCumulatives,) = pool.observe(secondsAgos); // pool observe may fail when there is not enough history available (only use pool with enough history!)\n\n409: \t\t        ) = nonfungiblePositionManager.positions(tokenId);\n\n480: \t\t        (,, uint256 lowerFeeGrowthOutside0X128, uint256 lowerFeeGrowthOutside1X128,,,,) = pool.ticks(tickLower);\n\n481: \t\t        (,, uint256 upperFeeGrowthOutside0X128, uint256 upperFeeGrowthOutside1X128,,,,) = pool.ticks(tickUpper);\n```",
          "loc": [
            "[82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L82)",
            "[215](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L215)",
            "[368](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L368)",
            "[216](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L216)",
            "[480](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L480)",
            "[481](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L481)",
            "[409](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L409)",
            "[363](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L363)",
            "[226](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L226)",
            "[225](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L225)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n179: \t\t        assetDecimals = IERC20Metadata(_asset).decimals();\n\n285: \t\t        return IERC20(asset).balanceOf(address(this));\n\n401: \t\t        nonfungiblePositionManager.safeTransferFrom(msg.sender, address(this), tokenId, abi.encode(recipient));\n\n423: \t\t        nonfungiblePositionManager.permit(address(this), tokenId, deadline, v, r, s);\n\n424: \t\t        nonfungiblePositionManager.safeTransferFrom(owner, address(this), tokenId, abi.encode(recipient));\n\n444: \t\t                owner = abi.decode(data, (address));\n\n520: \t\t        nonfungiblePositionManager.approve(transformer, tokenId);\n\n522: \t\t        (bool success,) = transformer.call(data);\n\n531: \t\t        address owner = nonfungiblePositionManager.ownerOf(tokenId);\n\n537: \t\t        nonfungiblePositionManager.approve(address(0), tokenId);\n\n627: \t\t        (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(\n628: \t\t            INonfungiblePositionManager.DecreaseLiquidityParams(\n629: \t\t                params.tokenId, params.liquidity, params.amount0Min, params.amount1Min, params.deadline\n630: \t\t            )\n631: \t\t        );\n\n640: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(collectParams);\n\n719: \t\t                abi.decode(params.permitData, (ISignatureTransfer.PermitTransferFrom, bytes));\n\n720: \t\t            permit2.permitTransferFrom(\n721: \t\t                permit,\n722: \t\t                ISignatureTransfer.SignatureTransferDetails(address(this), state.liquidatorCost),\n723: \t\t                msg.sender,\n724: \t\t                signature\n725: \t\t            );\n\n895: \t\t                abi.decode(permitData, (ISignatureTransfer.PermitTransferFrom, bytes));\n\n896: \t\t            permit2.permitTransferFrom(\n897: \t\t                permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n898: \t\t            );\n\n980: \t\t                    abi.decode(permitData, (ISignatureTransfer.PermitTransferFrom, bytes));\n\n981: \t\t                permit2.permitTransferFrom(\n982: \t\t                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n983: \t\t                );\n\n1045: \t\t            (,,,,,,, liquidity,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n1049: \t\t            (,,, liquidity,,, fees0, fees1) = oracle.getPositionBreakdown(tokenId);\n\n1065: \t\t            nonfungiblePositionManager.decreaseLiquidity(\n1066: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(tokenId, liquidity, 0, 0, block.timestamp)\n1067: \t\t            );\n\n1070: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(\n1071: \t\t            INonfungiblePositionManager.CollectParams(tokenId, recipient, fees0, fees1)\n1072: \t\t        );\n\n1083: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), owner, tokenId);\n\n1144: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n1179: \t\t        (uint256 borrowRateX96, uint256 supplyRateX96) = interestRateModel.getRatesPerSecondX96(available, debt);\n\n1213: \t\t            (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n1275: \t\t        (fullValue, feeValue,,) = oracle.getValue(tokenId, address(asset));\n\n1299: \t\t        ownedTokens[to].push(tokenId);\n\n1311: \t\t        ownedTokens[from].pop();\n```",
          "loc": [
            "[537](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L537)",
            "[627-631](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L627-L631)",
            "[640](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L640)",
            "[719](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L719)",
            "[720-725](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L720-L725)",
            "[895](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L895)",
            "[896-898](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L896-L898)",
            "[980](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L980)",
            "[981-983](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L981-L983)",
            "[1045](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1045)",
            "[1049](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1049)",
            "[1065-1067](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1065-L1067)",
            "[1070-1072](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1070-L1072)",
            "[1083](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1083)",
            "[1144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1144)",
            "[1213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1213)",
            "[1275](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1275)",
            "[1299](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1299)",
            "[1311](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1311)",
            "[1179](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1179)",
            "[179](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L179)",
            "[285](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L285)",
            "[401](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L401)",
            "[423](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L423)",
            "[424](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L424)",
            "[444](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L444)",
            "[520](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L520)",
            "[522](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L522)",
            "[531](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L531)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n121: \t\t            nonfungiblePositionManager.positions(params.tokenId);\n\n198: \t\t        state.owner = nonfungiblePositionManager.ownerOf(params.tokenId);\n\n219: \t\t        address owner = nonfungiblePositionManager.ownerOf(tokenId);\n```",
          "loc": [
            "[219](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L219)",
            "[198](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L198)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L121)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n112: \t\t            uint256 balance = IERC20(tokens[i]).balanceOf(address(this));\n\n148: \t\t        (sqrtPriceX96, currentTick,,,,,) = pool.slot0();\n\n186: \t\t        try pool.observe(secondsAgos) returns (int56[] memory tickCumulatives, uint160[] memory) {\n\n202: \t\t            (feeAmount0, feeAmount1) = nonfungiblePositionManager.decreaseLiquidity(\n203: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(\n204: \t\t                    tokenId, liquidity, amountRemoveMin0, amountRemoveMin1, deadline\n205: \t\t                )\n206: \t\t            );\n\n208: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(\n209: \t\t            INonfungiblePositionManager.CollectParams(tokenId, address(this), type(uint128).max, type(uint128).max)\n210: \t\t        );\n\n220: \t\t            weth.withdraw(amount);\n\n240: \t\t            owner = IVault(vault).ownerOf(tokenId);\n\n242: \t\t            owner = nonfungiblePositionManager.ownerOf(tokenId);\n```",
          "loc": [
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L112)",
            "[148](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L148)",
            "[186](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L186)",
            "[202-206](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L202-L206)",
            "[208-210](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L208-L210)",
            "[220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L220)",
            "[240](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L240)",
            "[242](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L242)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n91: \t\t        IVault(vault).transform(\n92: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoCompound.execute.selector, params)\n93: \t\t        );\n\n92: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoCompound.execute.selector, params)\n\n108: \t\t        (state.amount0, state.amount1) = nonfungiblePositionManager.collect(\n109: \t\t            INonfungiblePositionManager.CollectParams(\n110: \t\t                params.tokenId, address(this), type(uint128).max, type(uint128).max\n111: \t\t            )\n112: \t\t        );\n\n116: \t\t            nonfungiblePositionManager.positions(params.tokenId);\n\n129: \t\t                (state.sqrtPriceX96, state.tick,,,,,) = pool.slot0();\n\n163: \t\t                (, state.compounded0, state.compounded1) = nonfungiblePositionManager.increaseLiquidity(\n164: \t\t                    INonfungiblePositionManager.IncreaseLiquidityParams(\n165: \t\t                        params.tokenId, state.maxAddAmount0, state.maxAddAmount1, 0, 0, block.timestamp\n166: \t\t                    )\n167: \t\t                );\n\n201: \t\t        address owner = nonfungiblePositionManager.ownerOf(tokenId);\n\n203: \t\t            owner = IVault(owner).ownerOf(tokenId);\n\n209: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n278: \t\t        uint256 allowance0 = IERC20(token0).allowance(address(this), address(nonfungiblePositionManager));\n\n282: \t\t        uint256 allowance1 = IERC20(token1).allowance(address(this), address(nonfungiblePositionManager));\n```",
          "loc": [
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L116)",
            "[129](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L129)",
            "[163-167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L163-L167)",
            "[201](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L201)",
            "[203](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L203)",
            "[209](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L209)",
            "[278](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L278)",
            "[282](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L282)",
            "[108-112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L108-L112)",
            "[92](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L92)",
            "[91-93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L91-L93)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n101: \t\t        IVault(vault).transform(\n102: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoRange.execute.selector, params)\n103: \t\t        );\n\n102: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoRange.execute.selector, params)\n\n131: \t\t            nonfungiblePositionManager.positions(params.tokenId);\n\n217: \t\t            (state.newTokenId,, state.amountAdded0, state.amountAdded1) = nonfungiblePositionManager.mint(mintParams);\n\n223: \t\t            state.owner = nonfungiblePositionManager.ownerOf(params.tokenId);\n\n228: \t\t                state.realOwner = IVault(state.owner).ownerOf(params.tokenId);\n\n232: \t\t            nonfungiblePositionManager.safeTransferFrom(address(this), state.owner, state.newTokenId);\n\n308: \t\t            int24 spacing = IUniswapV3Factory(factory).feeAmountTickSpacing(fee);\n```",
          "loc": [
            "[217](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L217)",
            "[223](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L223)",
            "[228](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L228)",
            "[232](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L232)",
            "[308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L308)",
            "[101-103](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L101-L103)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L102)",
            "[131](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L131)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n43: \t\t        address token = IVault(msg.sender).asset();\n\n45: \t\t        IVault(msg.sender).borrow(params.tokenId, amount);\n\n47: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(params.tokenId);\n\n84: \t\t        (, uint256 added0, uint256 added1) = nonfungiblePositionManager.increaseLiquidity(increaseLiquidityParams);\n\n124: \t\t        address token = IVault(msg.sender).asset();\n\n125: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(params.tokenId);\n\n134: \t\t        (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(decreaseLiquidityParams);\n\n142: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(collectParams);\n\n166: \t\t        IVault(msg.sender).repay(params.tokenId, amount, false);\n```",
          "loc": [
            "[84](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L84)",
            "[124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L124)",
            "[125](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L125)",
            "[134](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L134)",
            "[142](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L142)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L166)",
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L43)",
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L45)",
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L47)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n102: \t\t        if (nonfungiblePositionManager.ownerOf(tokenId) != msg.sender) {\n\n106: \t\t        nonfungiblePositionManager.permit(address(this), tokenId, instructions.deadline, v, r, s);\n\n116: \t\t        (,, address token0, address token1,,,, uint128 liquidity,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n371: \t\t        Instructions memory instructions = abi.decode(data, (Instructions));\n\n376: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), from, tokenId, instructions.returnData);\n\n404: \t\t                abi.decode(params.permitData, (ISignatureTransfer.PermitBatchTransferFrom, bytes));\n\n478: \t\t                abi.decode(params.permitData, (ISignatureTransfer.PermitBatchTransferFrom, bytes));\n\n537: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(params.tokenId);\n\n541: \t\t                abi.decode(params.permitData, (ISignatureTransfer.PermitBatchTransferFrom, bytes));\n\n618: \t\t            state.balanceBefore0 = token0.balanceOf(address(this));\n\n622: \t\t            state.balanceBefore1 = token1.balanceOf(address(this));\n\n626: \t\t            state.balanceBeforeOther = otherToken.balanceOf(address(this));\n\n631: \t\t        permit2.permitTransferFrom(permit, transferDetails, msg.sender, signature);\n\n635: \t\t            if (token0.balanceOf(address(this)) - state.balanceBefore0 != state.needed0) {\n\n640: \t\t            if (token1.balanceOf(address(this)) - state.balanceBefore1 != state.needed1) {\n\n645: \t\t            if (otherToken.balanceOf(address(this)) - state.balanceBeforeOther != state.neededOther) {\n\n726: \t\t        (tokenId, liquidity, added0, added1) = nonfungiblePositionManager.mint(mintParams);\n\n727: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), params.recipientNFT, tokenId, params.returnData);\n\n771: \t\t        (liquidity, added0, added1) = nonfungiblePositionManager.increaseLiquidity(increaseLiquidityParams);\n\n866: \t\t            weth.withdraw(amount);\n\n885: \t\t            (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(\n886: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(tokenId, liquidity, token0Min, token1Min, deadline)\n887: \t\t            );\n\n896: \t\t        uint256 balanceBefore0 = token0.balanceOf(address(this));\n\n897: \t\t        uint256 balanceBefore1 = token1.balanceOf(address(this));\n\n898: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(\n899: \t\t            INonfungiblePositionManager.CollectParams(tokenId, address(this), collectAmount0, collectAmount1)\n900: \t\t        );\n\n901: \t\t        uint256 balanceAfter0 = token0.balanceOf(address(this));\n\n902: \t\t        uint256 balanceAfter1 = token1.balanceOf(address(this));\n```",
          "loc": [
            "[376](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L376)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L102)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L106)",
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L116)",
            "[371](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L371)",
            "[404](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L404)",
            "[478](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L478)",
            "[537](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L537)",
            "[541](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L541)",
            "[618](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L618)",
            "[622](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L622)",
            "[626](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L626)",
            "[631](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L631)",
            "[635](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L635)",
            "[640](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L640)",
            "[645](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L645)",
            "[726](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L726)",
            "[727](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L727)",
            "[771](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L771)",
            "[866](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L866)",
            "[885-887](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L885-L887)",
            "[896](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L896)",
            "[897](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L897)",
            "[898-900](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L898-L900)",
            "[901](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L901)",
            "[902](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L902)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n47: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(params.tokenId);\n\n51: \t\t        bytes memory data = abi.encode(\n52: \t\t            FlashCallbackData(\n53: \t\t                params.tokenId,\n54: \t\t                params.debtShares,\n55: \t\t                liquidationCost,\n56: \t\t                params.vault,\n57: \t\t                IERC20(asset),\n58: \t\t                RouterSwapParams(IERC20(token0), IERC20(asset), params.amount0In, 0, params.swapData0),\n59: \t\t                RouterSwapParams(IERC20(token1), IERC20(asset), params.amount1In, 0, params.swapData1),\n60: \t\t                msg.sender,\n61: \t\t                params.minReward\n62: \t\t            )\n63: \t\t        );\n\n70: \t\t        FlashCallbackData memory data = abi.decode(callbackData, (FlashCallbackData));\n\n89: \t\t            uint256 balance = data.swap0.tokenIn.balanceOf(address(this));\n\n95: \t\t            uint256 balance = data.swap1.tokenIn.balanceOf(address(this));\n```",
          "loc": [
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L89)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L70)",
            "[51-63](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L51-L63)",
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L95)",
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L47)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n82: \t\t            (address router, bytes memory routerData) = abi.decode(params.swapData, (address, bytes));\n\n85: \t\t                ZeroxRouterData memory data = abi.decode(routerData, (ZeroxRouterData));\n\n89: \t\t                (bool success,) = zeroxRouter.call(data.data);\n\n96: \t\t                UniversalRouterData memory data = abi.decode(routerData, (UniversalRouterData));\n\n99: \t\t                IUniversalRouter(universalRouter).execute(data.commands, data.inputs, data.deadline);\n\n139: \t\t                abi.encode(\n140: \t\t                    params.swap0For1 ? params.token0 : params.token1,\n141: \t\t                    params.swap0For1 ? params.token1 : params.token0,\n142: \t\t                    params.fee\n143: \t\t                )\n\n160: \t\t        (address tokenIn, address tokenOut, uint24 fee) = abi.decode(data, (address, address, uint24));\n```",
          "loc": [
            "[96](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L96)",
            "[82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L82)",
            "[99](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L99)",
            "[139-143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L139-L143)",
            "[160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L160)",
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L89)",
            "[85](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L85)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Low level `call` can be optimized with assembly",
      "description": "`returnData` is copied to memory even if the variable is not utilized: the proper way to handle this is through a low level assembly call.\n\n```solidity\n// before\n(bool success,) = payable(receiver).call{gas: gas, value: value}(\"\");\n\n//after\nbool success;\nassembly {\n    success := call(gas, receiver, value, 0, 0, 0, 0)\n}\n```",
      "gasSavings": 1240,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n522: \t\t        (bool success,) = transformer.call(data);\n```",
          "loc": [
            "[522](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L522)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n130: \t\t            (bool sent,) = to.call{value: balance}(\"\");\n\n221: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n```",
          "loc": [
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L221)",
            "[130](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L130)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n867: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n```",
          "loc": [
            "[867](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L867)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n89: \t\t                (bool success,) = zeroxRouter.call(data.data);\n```",
          "loc": [
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L89)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use at least Solidity version `0.8.19` to gain some gas boost",
      "description": "Upgrade to at least solidity version 0.8.19 to get additional gas savings. Check the [documentation](https://blog.soliditylang.org/2023/02/22/solidity-0.8.19-release-announcement/) for reference.\n\nSome additional details:\n> In earlier releases and in the default legacy code generation, when an internal library function or a free function accessed via a module was called only during contract creation, e.g. only in the constructor, a copy of the function still also occurred in the contract’s runtime bytecode.\n>\n>So a function pointer in creation code also refers to the offset of the function in runtime code, which requires the function to actually be present in runtime code.\n>\n>For direct calls to internal contract functions the full encoding of the function expression is bypassed by the compiler. However, this bypassing did not happen for internal library functions and for free functions called via modules, causing the undesirable behaviour that is now fixed in this release.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use of `memory` instead of `calldata` for immutable arguments",
      "description": "Consider refactoring the function arguments from `memory` to `calldata` when they are immutable, as `calldata` is cheaper.",
      "gasSavings": 2096,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit feedConfig\n346: \t\t    function _getTWAPPriceX96(TokenConfig memory feedConfig) internal view returns (uint256 poolTWAPPriceX96) {\n\n// @audit position\n445: \t\t    function _getUncollectedFees(PositionState memory position, int24 tick)\n```",
          "loc": [
            "[445](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L445)",
            "[346](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L346)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit permitData\n877: \t\t    function _deposit(address receiver, uint256 amount, bool isShare, bytes memory permitData)\n\n// @audit permitData\n954: \t\t    function _repay(uint256 tokenId, uint256 amount, bool isShare, bytes memory permitData) internal {\n```",
          "loc": [
            "[954](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L954)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L877)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit instructions\n115: \t\t    function execute(uint256 tokenId, Instructions memory instructions) public returns (uint256 newTokenId) {\n\n// @audit signature\n598: \t\t    function _prepareAddPermit2(\n599: \t\t        IERC20 token0,\n600: \t\t        IERC20 token1,\n601: \t\t        IERC20 otherToken,\n602: \t\t        uint256 amount0,\n603: \t\t        uint256 amount1,\n604: \t\t        uint256 amountOther,\n605: \t\t        IPermit2.PermitBatchTransferFrom memory permit,\n606: \t\t        bytes memory signature\n\n// @audit params\n735: \t\t    function _swapAndIncrease(SwapAndIncreaseLiquidityParams memory params, IERC20 token0, IERC20 token1, bool unwrap)\n\n// @audit params\n779: \t\t    function _swapAndPrepareAmounts(SwapAndMintParams memory params, bool unwrap)\n```",
          "loc": [
            "[779](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L779)",
            "[115](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L115)",
            "[598-606](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L598-L606)",
            "[735](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L735)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid updating storage when the value hasn't changed",
      "description": "If the old value is equal to the new value, not re-storing the value will avoid a Gsreset (**2900 gas**), potentially at the expense of a Gcoldsload (**2100 gas**) or a Gwarmaccess (**100 gas**)",
      "gasSavings": 11200,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit baseRatePerSecondX96, multiplierPerSecondX96, jumpMultiplierPerSecondX96, kinkX96\n82: \t\t    function setValues(\n```",
          "loc": [
            "[82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L82)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit maxPoolPriceDifference\n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n// @audit feedConfigs\n201: \t\t    function setTokenConfig(\n\n// @audit emergencyAdmin\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265)",
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)",
            "[201](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit transformerAllowList\n788: \t\t    function setTransformer(address transformer, bool active) external onlyOwner {\n\n// @audit minLoanSize, globalLendLimit, globalDebtLimit, dailyLendIncreaseLimitMin, dailyDebtIncreaseLimitMin\n807: \t\t    function setLimits(\n\n// @audit reserveFactorX32\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n// @audit reserveProtectionFactorX32\n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n// @audit emergencyAdmin\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n\n// @audit lastDebtExchangeRateX96, lastLendExchangeRateX96, lastExchangeRateUpdate\n1150: \t\t    function _updateGlobalInterest()\n```",
          "loc": [
            "[807](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L807)",
            "[788](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L788)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[870](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870)",
            "[1150](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1150)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit withdrawer\n59: \t\t    function setWithdrawer(address _withdrawer) public onlyOwner {\n\n// @audit operators\n69: \t\t    function setOperator(address _operator, bool _active) public onlyOwner {\n\n// @audit vaults\n79: \t\t    function setVault(address _vault, bool _active) public onlyOwner {\n\n// @audit TWAPSeconds, maxTWAPTickDifference\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n```",
          "loc": [
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L79)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L69)",
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L59)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit totalRewardX64\n243: \t\t    function setReward(uint64 _totalRewardX64) external onlyOwner {\n\n// @audit positionBalances\n254: \t\t    function _setBalance(uint256 tokenId, address token, uint256 amount) internal {\n```",
          "loc": [
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L243)",
            "[254](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L254)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use `uint256(1)/uint256(2)` instead of `true/false` to save gas for changes",
      "description": "Use `uint256(1)` and `uint256(2)` for `true`/`false` to avoid a Gsset (20000 gas) when changing from `false` to `true`, after having been `true` in the past. See [source](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27).",
      "gasSavings": 68000,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n163: \t\t    mapping(address => bool) public transformerAllowList; // contracts allowed to transform positions (selected audited contracts e.g. V3Utils)\n\n164: \t\t    mapping(address => mapping(uint256 => mapping(address => bool))) public transformApprovals; // owners permissions for other addresses to call transform on owners behalf (e.g. AutoRange contract)\n```",
          "loc": [
            "[164](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L164)",
            "[163](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L163)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n34: \t\t    mapping(address => bool) public operators;\n\n35: \t\t    mapping(address => bool) public vaults;\n```",
          "loc": [
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L35)",
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L34)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Shortcircuit rules can be be used to optimize some gas usage",
      "description": "Some conditions may be reordered to save an `SLOAD` (**2100 gas**), as we avoid reading state variables when the first part of the condition fails (with `&&`), or succeeds (with `||`).",
      "gasSavings": 10500,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit switch with this condition\n// from == address(this) || msg.sender != address(nonfungiblePositionManager)\n435: \t\t        if (msg.sender != address(nonfungiblePositionManager) || from == address(this)) {\n\n// @audit switch with this condition\n// address(this) != msg.sender && !isTransformMode && tokenOwner[tokenId] != msg.sender\n561: \t\t        if (!isTransformMode && tokenOwner[tokenId] != msg.sender && address(this) != msg.sender) {\n```",
          "loc": [
            "[561](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L561)",
            "[435](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L435)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Cache multiple accesses of a mapping/array",
      "description": "Consider using a local `storage` or `calldata` variable when accessing a mapping/array value multiple times.\n\nThis can be useful to avoid recalculating the mapping hash and/or the array offsets.",
      "gasSavings": 966,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit transformApprovals[loanOwner] on line 515\n515: \t\t        if (loanOwner != msg.sender && !transformApprovals[loanOwner][tokenId][msg.sender]) {\n\n// @audit tokenConfigs on line 863\n864: \t\t        tokenConfigs[token].collateralValueLimitFactorX32 = collateralValueLimitFactorX32;\n\n// @audit loans on line 1081\n1082: \t\t        delete loans[tokenId];\n\n// @audit tokenConfigs on line 1145\n1146: \t\t        uint32 factor1X32 = tokenConfigs[token1].collateralFactorX32;\n\n// @audit tokenConfigs on lines 1217, 1218, 1220, 1221, 1226, 1229, 1234\n1237: \t\t                        && _convertToAssets(tokenConfigs[token1].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n\n// @audit ownedTokens on line 1298\n1299: \t\t        ownedTokens[to].push(tokenId);\n\n// @audit ownedTokens on lines 1304, 1307, 1308\n1311: \t\t        ownedTokens[from].pop();\n```",
          "loc": [
            "[1146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1146)",
            "[1237](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1237)",
            "[1299](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1299)",
            "[1311](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1311)",
            "[864](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L864)",
            "[515](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L515)",
            "[1082](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1082)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit positionConfigs on line 106\n207: \t\t        delete positionConfigs[params.tokenId];\n```",
          "loc": [
            "[207](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L207)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit vaults on line 232\n237: \t\t            if (!vaults[vault]) {\n```",
          "loc": [
            "[237](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L237)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit positionBalances[params.tokenId] on line 119\n120: \t\t        state.amount1 = state.amount1 + positionBalances[params.tokenId][state.token1];\n\n// @audit positionBalances[tokenId] on line 211\n215: \t\t        uint256 balance1 = positionBalances[tokenId][token1];\n\n// @audit positionBalances on line 250\n250: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] + amount;\n\n// @audit positionBalances on line 255\n257: \t\t            positionBalances[tokenId][token] = amount;\n\n// @audit positionBalances on line 270\n270: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] - amount;\n```",
          "loc": [
            "[257](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L257)",
            "[270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L270)",
            "[215](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L215)",
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L250)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L120)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit positionConfigs on line 116\n265: \t\t            delete positionConfigs[params.tokenId];\n```",
          "loc": [
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L265)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `private` for constants saves gas",
      "description": "Saves deployment gas due to the compiler not having to create non-payable getter functions for deployment calldata, not having to store the bytes of the value outside of where it's used, and not adding another entry to the method ID table.",
      "gasSavings": 109278,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n13: \t\t    uint256 public constant YEAR_SECS = 31557600; // taking into account leap years\n\n15: \t\t    uint256 public constant MAX_BASE_RATE_X96 = Q96 / 10; // 10%\n\n16: \t\t    uint256 public constant MAX_MULTIPLIER_X96 = Q96 * 2; // 200%\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L16)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L13)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n25: \t\t    uint16 public constant MIN_PRICE_DIFFERENCE = 200; //2%\n```",
          "loc": [
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L25)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n36: \t\t    uint32 public constant MAX_COLLATERAL_FACTOR_X32 = uint32(Q32 * 90 / 100); // 90%\n\n38: \t\t    uint32 public constant MIN_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 2 / 100); // 2%\n\n39: \t\t    uint32 public constant MAX_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 10 / 100); // 10%\n\n41: \t\t    uint32 public constant MIN_RESERVE_PROTECTION_FACTOR_X32 = uint32(Q32 / 100); //1%\n\n43: \t\t    uint32 public constant MAX_DAILY_LEND_INCREASE_X32 = uint32(Q32 / 10); //10%\n\n44: \t\t    uint32 public constant MAX_DAILY_DEBT_INCREASE_X32 = uint32(Q32 / 10); //10%\n```",
          "loc": [
            "[36](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L36)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L38)",
            "[39](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L39)",
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L41)",
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L43)",
            "[44](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L44)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n23: \t\t    uint32 public constant MIN_TWAP_SECONDS = 60; // 1 minute\n\n24: \t\t    uint32 public constant MAX_TWAP_TICK_DIFFERENCE = 200; // 2%\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L24)",
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L23)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n47: \t\t    uint64 public constant MAX_REWARD_X64 = uint64(Q64 / 50); // 2%\n```",
          "loc": [
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L47)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "require() or revert() statements that check input arguments should be at the top of the function",
      "description": "Checks that can be performed earlier should come before checks that involve state variables, function calls, and calculations. By doing these checks first, the function is able to revert before wasting a Gcoldsload (*2100 gas*) in a function that may ultimately revert.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n// @audit expensive op on line 233, 232\n236: \t\t        if (vault != address(0)) {\n```",
          "loc": [
            "[236](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L236)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Custom `error`s cost less than `require`/`assert`",
      "description": "Consider the use of a custom `error`, as it leads to a cheaper deploy cost and run time cost. The run time cost is only relevant when the revert condition is met.",
      "gasSavings": 87,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n244: \t\t        require(_totalRewardX64 <= totalRewardX64, \">totalRewardX64\");\n\n269: \t\t        require(amount <= balance, \"amount>balance\");\n```",
          "loc": [
            "[269](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L269)",
            "[244](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L244)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n157: \t\t        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n```",
          "loc": [
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L157)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider activating `via-ir` for deploying",
      "description": "The IR-based code generator was developed to make code generation more performant by enabling optimization passes that can be applied across functions.\n\nIt is possible to activate the IR-based code generator through the command line by using the flag `--via-ir` or by including the option `{\"viaIR\": true}`.\n\nKeep in mind that compiling with this option may take longer. However, you can simply test it before deploying your code. If you find that it provides better performance, you can add the `--via-ir` flag to your deploy command.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: All in-scope files\n```",
          "loc": []
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Functions that revert when called by normal users can be `payable`",
      "description": "If a function modifier such as `onlyOwner` is used, the function will revert if a normal user tries to pay the function.\n\nMarking the function as `payable` will lower the gas for legitimate callers, as the compiler will not include checks for whether a payment was provided.\n\nThe extra opcodes avoided are:\n\n`CALLVALUE(2), DUP1(3), ISZERO(3), PUSH2(3), JUMPI(10), PUSH1(3), DUP1(3), REVERT(0), JUMPDEST(1), POP(2)`\n\nwhich cost an average of about 21 gas per call to the function, in addition to the extra deployment cost.",
      "gasSavings": 315,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n82: \t\t    function setValues(\n83: \t\t        uint256 baseRatePerYearX96,\n84: \t\t        uint256 multiplierPerYearX96,\n85: \t\t        uint256 jumpMultiplierPerYearX96,\n86: \t\t        uint256 _kinkX96\n87: \t\t    ) public onlyOwner {\n```",
          "loc": [
            "[82-87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L82-L87)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n201: \t\t    function setTokenConfig(\n202: \t\t        address token,\n203: \t\t        AggregatorV3Interface feed,\n204: \t\t        uint32 maxFeedAge,\n205: \t\t        IUniswapV3Pool pool,\n206: \t\t        uint32 twapSeconds,\n207: \t\t        Mode mode,\n208: \t\t        uint16 maxDifference\n209: \t\t    ) external onlyOwner {\n\n265: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)",
            "[201-209](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L201-L209)",
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L265)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n765: \t\t    function withdrawReserves(uint256 amount, address receiver) external onlyOwner {\n\n788: \t\t    function setTransformer(address transformer, bool active) external onlyOwner {\n\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n856: \t\t    function setTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32)\n857: \t\t        external\n858: \t\t        onlyOwner\n\n870: \t\t    function setEmergencyAdmin(address admin) external onlyOwner {\n```",
          "loc": [
            "[856-858](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L856-L858)",
            "[870](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L870)",
            "[788](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L788)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[765](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L765)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n59: \t\t    function setWithdrawer(address _withdrawer) public onlyOwner {\n\n69: \t\t    function setOperator(address _operator, bool _active) public onlyOwner {\n\n79: \t\t    function setVault(address _vault, bool _active) public onlyOwner {\n\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L59)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L69)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L79)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n243: \t\t    function setReward(uint64 _totalRewardX64) external onlyOwner {\n```",
          "loc": [
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L243)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Add `unchecked` blocks for subtractions where the operands cannot underflow",
      "description": "There are some checks to avoid an underflow, so it's safe to use `unchecked` to have some gas savings.",
      "gasSavings": 1615,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit check on line 66\n70: \t\t            uint256 excessUtilX96 = utilizationRateX96 - kinkX96;\n```",
          "loc": [
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L70)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit check on line 304\n307: \t\t            return globalLendLimit - value;\n\n// @audit check on line 315\n318: \t\t            return _convertToShares(globalLendLimit - value, lendExchangeRateX96, Math.Rounding.Down);\n\n// @audit check on line 1052\n1060: \t\t                liquidity = uint128((liquidationValue - feeValue) * liquidity / (fullValue - feeValue));\n\n// @audit check on line 1103\n1107: \t\t                (Q96 - ((fullValue - maxPenaltyValue) * Q96 / (startLiquidationValue - maxPenaltyValue)));\n\n// @audit check on line 1131\n1132: \t\t            missing = reserveCost - reserves;\n\n// @audit check on line 1216\n1217: \t\t                tokenConfigs[token0].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n\n// @audit check on line 1216\n1218: \t\t                tokenConfigs[token1].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n\n// @audit check on line 1216\n1220: \t\t                tokenConfigs[token0].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n\n// @audit check on line 1216\n1221: \t\t                tokenConfigs[token1].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n```",
          "loc": [
            "[1132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1132)",
            "[1217](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1217)",
            "[1218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1218)",
            "[1220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1220)",
            "[1221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1221)",
            "[1107](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1107)",
            "[1060](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1060)",
            "[318](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L318)",
            "[307](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L307)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit check on line 258\n259: \t\t                emit BalanceAdded(tokenId, token, amount - currentBalance);\n\n// @audit check on line 258\n261: \t\t                emit BalanceRemoved(tokenId, token, currentBalance - amount);\n```",
          "loc": [
            "[259](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L259)",
            "[261](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L261)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n// @audit check on line 87\n88: \t\t            SafeERC20.safeTransfer(IERC20(token0), params.recipient, amount0 - added0);\n\n// @audit check on line 90\n91: \t\t            SafeERC20.safeTransfer(IERC20(token1), params.recipient, amount1 - added1);\n```",
          "loc": [
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L88)",
            "[91](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L91)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit check on line 316\n317: \t\t                    _transferToken(instructions.recipient, IERC20(token0), amount0 - amountInDelta, instructions.unwrap);\n\n// @audit check on line 333\n334: \t\t                    _transferToken(instructions.recipient, IERC20(token1), amount1 - amountInDelta, instructions.unwrap);\n\n// @audit check on line 671\n691: \t\t            needed0 = amount0 - amountAdded0;\n\n// @audit check on line 676\n694: \t\t            needed1 = amount1 - amountAdded1;\n\n// @audit check on line 681\n700: \t\t            neededOther = amountOther - amountAddedOther;\n```",
          "loc": [
            "[317](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L317)",
            "[334](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L334)",
            "[691](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L691)",
            "[694](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L694)",
            "[700](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L700)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Add `unchecked` blocks for divisions where the operands cannot overflow",
      "description": "`uint` divisions can't overflow, while `int` divisions can overflow only in [one specific case](https://docs.soliditylang.org/en/latest/types.html#division).\n\nConsider adding an `unchecked` block to have some [gas savings](https://gist.github.com/DadeKuma/3bc597338ae774b8b3bd43280d55271f).",
      "gasSavings": 9540,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n50: \t\t        return debt * Q96 / (cash + debt);\n\n67: \t\t            borrowRateX96 = (utilizationRateX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n\n69: \t\t            uint256 normalRateX96 = (kinkX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n\n71: \t\t            borrowRateX96 = (excessUtilX96 * jumpMultiplierPerSecondX96 / Q96) + normalRateX96;\n\n74: \t\t        supplyRateX96 = utilizationRateX96 * borrowRateX96 / Q96;\n\n95: \t\t        baseRatePerSecondX96 = baseRatePerYearX96 / YEAR_SECS;\n\n96: \t\t        multiplierPerSecondX96 = multiplierPerYearX96 / YEAR_SECS;\n\n97: \t\t        jumpMultiplierPerSecondX96 = jumpMultiplierPerYearX96 / YEAR_SECS;\n```",
          "loc": [
            "[74](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L74)",
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L95)",
            "[96](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L96)",
            "[97](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L97)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L71)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L69)",
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L67)",
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L50)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n120: \t\t        value = (price0X96 * (amount0 + fees0) / Q96 + price1X96 * (amount1 + fees1) / Q96) * Q96 / priceTokenX96;\n\n120: \t\t        value = (price0X96 * (amount0 + fees0) / Q96 + price1X96 * (amount1 + fees1) / Q96) * Q96 / priceTokenX96;\n\n120: \t\t        value = (price0X96 * (amount0 + fees0) / Q96 + price1X96 * (amount1 + fees1) / Q96) * Q96 / priceTokenX96;\n\n121: \t\t        feeValue = (price0X96 * fees0 / Q96 + price1X96 * fees1 / Q96) * Q96 / priceTokenX96;\n\n121: \t\t        feeValue = (price0X96 * fees0 / Q96 + price1X96 * fees1 / Q96) * Q96 / priceTokenX96;\n\n121: \t\t        feeValue = (price0X96 * fees0 / Q96 + price1X96 * fees1 / Q96) * Q96 / priceTokenX96;\n\n122: \t\t        price0X96 = price0X96 * Q96 / priceTokenX96;\n\n123: \t\t        price1X96 = price1X96 * Q96 / priceTokenX96;\n\n129: \t\t        uint256 derivedPoolPriceX96 = price0X96 * Q96 / price1X96;\n\n144: \t\t            ? (priceX96 - verifyPriceX96) * 10000 / priceX96\n\n145: \t\t            : (verifyPriceX96 - priceX96) * 10000 / verifyPriceX96;\n\n304: \t\t            chainlinkPriceX96 = (10 ** referenceTokenDecimals) * chainlinkPriceX96 * Q96 / chainlinkReferencePriceX96\n305: \t\t                / (10 ** feedConfig.tokenDecimals);\n\n304: \t\t            chainlinkPriceX96 = (10 ** referenceTokenDecimals) * chainlinkPriceX96 * Q96 / chainlinkReferencePriceX96\n\n342: \t\t        return uint256(answer) * Q96 / (10 ** feedConfig.feedDecimals);\n\n353: \t\t            poolTWAPPriceX96 = Q96 * Q96 / priceX96;\n\n369: \t\t            int24 tick = int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapSeconds)));\n```",
          "loc": [
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L121)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L121)",
            "[122](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L122)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L123)",
            "[129](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L129)",
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L145)",
            "[304-305](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L304-L305)",
            "[304](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L304)",
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L342)",
            "[353](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L353)",
            "[369](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L369)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L120)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L120)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L120)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L121)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n769: \t\t            _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up) * reserveProtectionFactorX32 / Q32;\n\n1054: \t\t                fees0 = uint128(liquidationValue * fees0 / feeValue);\n\n1055: \t\t                fees1 = uint128(liquidationValue * fees1 / feeValue);\n\n1060: \t\t                liquidity = uint128((liquidationValue - feeValue) * liquidity / (fullValue - feeValue));\n\n1100: \t\t        uint256 maxPenaltyValue = debt * (Q32 + MAX_LIQUIDATION_PENALTY_X32) / Q32;\n\n1105: \t\t            uint256 startLiquidationValue = debt * fullValue / collateralValue;\n\n1107: \t\t                (Q96 - ((fullValue - maxPenaltyValue) * Q96 / (startLiquidationValue - maxPenaltyValue)));\n\n1109: \t\t                + (MAX_LIQUIDATION_PENALTY_X32 - MIN_LIQUIDATION_PENALTY_X32) * penaltyFractionX96 / Q96;\n\n1111: \t\t            liquidationValue = debt * (Q32 + penaltyX32) / Q32;\n\n1116: \t\t            uint256 penaltyValue = fullValue * (Q32 - MAX_LIQUIDATION_PENALTY_X32) / Q32;\n\n1137: \t\t            newLendExchangeRateX96 = (totalLent - missing) * newLendExchangeRateX96 / totalLent;\n\n1188: \t\t                + oldDebtExchangeRateX96 * (block.timestamp - lastRateUpdate) * borrowRateX96 / Q96;\n\n1190: \t\t                + oldLendExchangeRateX96 * (block.timestamp - lastRateUpdate) * supplyRateX96 / Q96;\n\n1230: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1238: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1248: \t\t        uint256 time = block.timestamp / 1 days;\n\n1250: \t\t            uint256 lendIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n1251: \t\t                * (Q32 + MAX_DAILY_LEND_INCREASE_X32) / Q32;\n\n1260: \t\t        uint256 time = block.timestamp / 1 days;\n\n1262: \t\t            uint256 debtIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n1263: \t\t                * (Q32 + MAX_DAILY_DEBT_INCREASE_X32) / Q32;\n```",
          "loc": [
            "[1248](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1248)",
            "[769](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L769)",
            "[1054](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1054)",
            "[1055](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1055)",
            "[1060](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1060)",
            "[1100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1100)",
            "[1105](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1105)",
            "[1107](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1107)",
            "[1109](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1109)",
            "[1111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1111)",
            "[1116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1116)",
            "[1137](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1137)",
            "[1188](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1188)",
            "[1190](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1190)",
            "[1230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1230)",
            "[1238](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1238)",
            "[1250-1251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1250-L1251)",
            "[1260](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1260)",
            "[1262-1263](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1262-L1263)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n155: \t\t                state.amount0 -= state.feeAmount0 * params.rewardX64 / Q64;\n\n156: \t\t                state.amount1 -= state.feeAmount1 * params.rewardX64 / Q64;\n\n187: \t\t                    state.amount0 -= state.amount0 * params.rewardX64 / Q64;\n\n189: \t\t                    state.amount1 -= state.amount1 * params.rewardX64 / Q64;\n\n194: \t\t            state.amount0 -= (config.onlyFees ? state.feeAmount0 : state.amount0) * params.rewardX64 / Q64;\n\n195: \t\t            state.amount1 -= (config.onlyFees ? state.feeAmount1 : state.amount1) * params.rewardX64 / Q64;\n```",
          "loc": [
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L187)",
            "[189](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L189)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L195)",
            "[194](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L194)",
            "[155](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L155)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L156)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n187: \t\t            return (int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapPeriod))), true);\n```",
          "loc": [
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L187)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n156: \t\t            state.maxAddAmount0 = state.amount0 * Q64 / (rewardX64 + Q64);\n\n157: \t\t            state.maxAddAmount1 = state.amount1 * Q64 / (rewardX64 + Q64);\n\n170: \t\t                state.amount0Fees = state.compounded0 * rewardX64 / Q64;\n\n171: \t\t                state.amount1Fees = state.compounded1 * rewardX64 / Q64;\n```",
          "loc": [
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L157)",
            "[170](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L170)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L171)",
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L156)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n143: \t\t            state.protocolReward0 = state.feeAmount0 * params.rewardX64 / Q64;\n\n144: \t\t            state.protocolReward1 = state.feeAmount1 * params.rewardX64 / Q64;\n\n195: \t\t            state.maxAddAmount0 = config.onlyFees ? state.amount0 : state.amount0 * Q64 / (params.rewardX64 + Q64);\n\n196: \t\t            state.maxAddAmount1 = config.onlyFees ? state.amount1 : state.amount1 * Q64 / (params.rewardX64 + Q64);\n\n236: \t\t                state.protocolReward0 = state.amountAdded0 * params.rewardX64 / Q64;\n\n237: \t\t                state.protocolReward1 = state.amountAdded1 * params.rewardX64 / Q64;\n```",
          "loc": [
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L144)",
            "[196](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L196)",
            "[236](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L236)",
            "[237](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L237)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L195)",
            "[143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L143)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead",
      "description": "Citing the [documentation](https://docs.soliditylang.org/en/latest/internals/layout_in_storage.html):\n\n> When using elements that are smaller than 32 bytes, your contract’s gas usage may be higher.This is because the EVM operates on 32 bytes at a time.Therefore, if the element is smaller than that, the EVM must use more operations in order to reduce the size of the element from 32 bytes to the desired size.\n\nFor example, each operation involving a `uint8` costs an extra ** 22 - 28 gas ** (depending on whether the other operand is also a variable of type `uint8`) as compared to ones involving`uint256`, due to the compiler having to clear the higher bits of the memory word before operating on the`uint8`, as well as the associated stack operations of doing so.\n\nNote that it might be beneficial to use reduced-size types when dealing with storage values because the compiler will pack multiple elements into one storage slot, but if not, it will have the opposite effect.",
      "gasSavings": 1116,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n25: \t\t    uint16 public constant MIN_PRICE_DIFFERENCE = 200; //2%\n\n32: \t\t    event SetMaxPoolPriceDifference(uint16 maxPoolPriceDifference);\n\n45: \t\t        uint32 maxFeedAge;\n\n46: \t\t        uint8 feedDecimals;\n\n47: \t\t        uint8 tokenDecimals;\n\n50: \t\t        uint32 twapSeconds;\n\n52: \t\t        uint16 maxDifference; // max price difference x10000\n\n63: \t\t    uint8 public immutable referenceTokenDecimals;\n\n65: \t\t    uint16 public maxPoolPriceDifference = MIN_PRICE_DIFFERENCE; // max price difference between oracle derived price and pool price x10000\n\n101: \t\t        (address token0, address token1, uint24 fee,, uint256 amount0, uint256 amount1, uint256 fees0, uint256 fees1) =\n\n133: \t\t    function _checkPoolPrice(address token0, address token1, uint24 fee, uint256 derivedPoolPriceX96) internal view {\n\n169: \t\t            uint24 fee,\n\n170: \t\t            uint128 liquidity,\n\n173: \t\t            uint128 fees0,\n\n174: \t\t            uint128 fees1\n\n185: \t\t    function setMaxPoolPriceDifference(uint16 _maxPoolPriceDifference) external onlyOwner {\n\n204: \t\t        uint32 maxFeedAge,\n\n206: \t\t        uint32 twapSeconds,\n\n208: \t\t        uint16 maxDifference\n\n215: \t\t        uint8 feedDecimals = feed.decimals();\n\n216: \t\t        uint8 tokenDecimals = IERC20Metadata(token).decimals();\n\n359: \t\t    function _getReferencePoolPriceX96(IUniswapV3Pool pool, uint32 twapSeconds) internal view returns (uint256) {\n\n360: \t\t        uint160 sqrtPriceX96;\n\n369: \t\t            int24 tick = int24((tickCumulatives[0] - tickCumulatives[1]) / int56(uint56(twapSeconds)));\n\n380: \t\t        uint24 fee;\n\n381: \t\t        int24 tickLower;\n\n382: \t\t        int24 tickUpper;\n\n383: \t\t        uint128 liquidity;\n\n386: \t\t        uint128 tokensOwed0;\n\n387: \t\t        uint128 tokensOwed1;\n\n389: \t\t        uint160 sqrtPriceX96;\n\n390: \t\t        int24 tick;\n\n391: \t\t        uint160 sqrtPriceX96Lower;\n\n392: \t\t        uint160 sqrtPriceX96Upper;\n\n401: \t\t            uint24 fee,\n\n402: \t\t            int24 tickLower,\n\n403: \t\t            int24 tickUpper,\n\n404: \t\t            uint128 liquidity,\n\n407: \t\t            uint128 tokensOwed0,\n\n408: \t\t            uint128 tokensOwed1\n\n429: \t\t        returns (uint256 amount0, uint256 amount1, uint128 fees0, uint128 fees1)\n\n429: \t\t        returns (uint256 amount0, uint256 amount1, uint128 fees0, uint128 fees1)\n\n445: \t\t    function _getUncollectedFees(PositionState memory position, int24 tick)\n\n448: \t\t        returns (uint128 fees0, uint128 fees1)\n\n448: \t\t        returns (uint128 fees0, uint128 fees1)\n\n474: \t\t        int24 tickLower,\n\n475: \t\t        int24 tickUpper,\n\n476: \t\t        int24 tickCurrent,\n\n499: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[204](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L204)",
            "[206](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L206)",
            "[208](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L208)",
            "[215](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L215)",
            "[216](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L216)",
            "[359](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L359)",
            "[360](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L360)",
            "[369](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L369)",
            "[380](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L380)",
            "[381](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L381)",
            "[382](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L382)",
            "[383](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L383)",
            "[386](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L386)",
            "[387](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L387)",
            "[389](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L389)",
            "[390](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L390)",
            "[391](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L391)",
            "[392](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L392)",
            "[401](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L401)",
            "[402](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L402)",
            "[403](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L403)",
            "[404](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L404)",
            "[407](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L407)",
            "[408](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L408)",
            "[429](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L429)",
            "[429](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L429)",
            "[445](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L445)",
            "[448](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L448)",
            "[474](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L474)",
            "[475](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L475)",
            "[476](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L476)",
            "[499](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L499)",
            "[448](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L448)",
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L25)",
            "[32](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L32)",
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L45)",
            "[46](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L46)",
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L47)",
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L50)",
            "[52](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L52)",
            "[63](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L63)",
            "[65](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L65)",
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L101)",
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L133)",
            "[169](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L169)",
            "[170](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L170)",
            "[173](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L173)",
            "[174](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L174)",
            "[185](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L185)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n36: \t\t    uint32 public constant MAX_COLLATERAL_FACTOR_X32 = uint32(Q32 * 90 / 100); // 90%\n\n38: \t\t    uint32 public constant MIN_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 2 / 100); // 2%\n\n39: \t\t    uint32 public constant MAX_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 10 / 100); // 10%\n\n41: \t\t    uint32 public constant MIN_RESERVE_PROTECTION_FACTOR_X32 = uint32(Q32 / 100); //1%\n\n43: \t\t    uint32 public constant MAX_DAILY_LEND_INCREASE_X32 = uint32(Q32 / 10); //10%\n\n44: \t\t    uint32 public constant MAX_DAILY_DEBT_INCREASE_X32 = uint32(Q32 / 10); //10%\n\n65: \t\t    uint8 private immutable assetDecimals;\n\n76: \t\t        uint256 indexed tokenId, address owner, address recipient, uint128 liquidity, uint256 amount0, uint256 amount1\n\n102: \t\t    event SetReserveFactor(uint32 reserveFactorX32);\n\n103: \t\t    event SetReserveProtectionFactor(uint32 reserveProtectionFactorX32);\n\n104: \t\t    event SetTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32);\n\n104: \t\t    event SetTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32);\n\n110: \t\t        uint32 collateralFactorX32; // how much this token is valued as collateral\n\n111: \t\t        uint32 collateralValueLimitFactorX32; // how much asset equivalent may be lent out given this collateral\n\n112: \t\t        uint192 totalDebtShares; // how much debt shares are theoretically backed by this collateral\n\n118: \t\t    uint32 public reserveFactorX32 = 0;\n\n121: \t\t    uint32 public reserveProtectionFactorX32 = MIN_RESERVE_PROTECTION_FACTOR_X32;\n\n277: \t\t    function decimals() public view override(IERC20Metadata, ERC20) returns (uint8) {\n\n415: \t\t        uint8 v,\n\n837: \t\t    function setReserveFactor(uint32 _reserveFactorX32) external onlyOwner {\n\n844: \t\t    function setReserveProtectionFactor(uint32 _reserveProtectionFactorX32) external onlyOwner {\n\n856: \t\t    function setTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32)\n\n856: \t\t    function setTokenConfig(address token, uint32 collateralFactorX32, uint32 collateralValueLimitFactorX32)\n\n1039: \t\t        uint128 liquidity;\n\n1040: \t\t        uint128 fees0;\n\n1041: \t\t        uint128 fees1;\n\n1143: \t\t    function _calculateTokenCollateralFactorX32(uint256 tokenId) internal view returns (uint32) {\n\n1145: \t\t        uint32 factor0X32 = tokenConfigs[token0].collateralFactorX32;\n\n1146: \t\t        uint32 factor1X32 = tokenConfigs[token1].collateralFactorX32;\n```",
          "loc": [
            "[44](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L44)",
            "[36](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L36)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L38)",
            "[39](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L39)",
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L41)",
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L43)",
            "[65](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L65)",
            "[76](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L76)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L102)",
            "[103](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L103)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L104)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L104)",
            "[110](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L110)",
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L111)",
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L112)",
            "[118](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L118)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L121)",
            "[277](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L277)",
            "[415](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L415)",
            "[837](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L837)",
            "[844](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L844)",
            "[856](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L856)",
            "[856](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L856)",
            "[1039](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1039)",
            "[1040](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1040)",
            "[1041](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1041)",
            "[1143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1143)",
            "[1145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1145)",
            "[1146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1146)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n25: \t\t        int24 token0TriggerTick,\n\n26: \t\t        int24 token1TriggerTick,\n\n27: \t\t        uint64 token0SlippageX64,\n\n28: \t\t        uint64 token1SlippageX64,\n\n30: \t\t        uint64 maxRewardX64\n\n37: \t\t        uint32 _TWAPSeconds,\n\n38: \t\t        uint16 _maxTWAPTickDifference,\n\n50: \t\t        int24 token0TriggerTick; // when tick is below this one\n\n51: \t\t        int24 token1TriggerTick; // when tick is equal or above this one\n\n53: \t\t        uint64 token0SlippageX64; // when token 0 is swapped to token 1\n\n54: \t\t        uint64 token1SlippageX64; // when token 1 is swapped to token 0\n\n56: \t\t        uint64 maxRewardX64; // max allowed reward percentage of fees or full position\n\n66: \t\t        uint128 liquidity; // liquidity the calculations are based on\n\n70: \t\t        uint64 rewardX64; // which reward will be used for protocol, can be max configured amount (considering onlyFees)\n\n76: \t\t        uint24 fee;\n\n77: \t\t        int24 tickLower;\n\n78: \t\t        int24 tickUpper;\n\n79: \t\t        uint128 liquidity;\n\n89: \t\t        int24 tick;\n```",
          "loc": [
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L25)",
            "[26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L26)",
            "[27](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L27)",
            "[28](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L28)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L78)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L79)",
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L89)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L30)",
            "[54](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L54)",
            "[56](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L56)",
            "[66](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L66)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L70)",
            "[76](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L76)",
            "[53](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L53)",
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L77)",
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L37)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L38)",
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L50)",
            "[51](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L51)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n23: \t\t    uint32 public constant MIN_TWAP_SECONDS = 60; // 1 minute\n\n24: \t\t    uint32 public constant MAX_TWAP_TICK_DIFFERENCE = 200; // 2%\n\n31: \t\t    event TWAPConfigChanged(uint32 TWAPSeconds, uint16 maxTWAPTickDifference);\n\n31: \t\t    event TWAPConfigChanged(uint32 TWAPSeconds, uint16 maxTWAPTickDifference);\n\n38: \t\t    uint32 public TWAPSeconds;\n\n39: \t\t    uint16 public maxTWAPTickDifference;\n\n45: \t\t        uint32 _TWAPSeconds,\n\n46: \t\t        uint16 _maxTWAPTickDifference,\n\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n\n87: \t\t    function setTWAPConfig(uint16 _maxTWAPTickDifference, uint32 _TWAPSeconds) public onlyOwner {\n\n143: \t\t        uint32 twapPeriod,\n\n144: \t\t        uint16 maxTickDifference,\n\n145: \t\t        uint64 maxPriceDifferenceX64\n\n146: \t\t    ) internal view returns (uint256 amountOutMin, int24 currentTick, uint160 sqrtPriceX96, uint256 priceX96) {\n\n146: \t\t    ) internal view returns (uint256 amountOutMin, int24 currentTick, uint160 sqrtPriceX96, uint256 priceX96) {\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n171: \t\t        (int24 twapTick, bool twapOk) = _getTWAPTick(pool, twapPeriod);\n\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n\n195: \t\t        uint128 liquidity,\n```",
          "loc": [
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L171)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L195)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)",
            "[23](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L23)",
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L24)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L31)",
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L31)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L38)",
            "[39](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L39)",
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L45)",
            "[46](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L46)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L87)",
            "[143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L143)",
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L145)",
            "[146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L146)",
            "[146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L146)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n30: \t\t    event RewardUpdated(address account, uint64 totalRewardX64);\n\n41: \t\t        uint32 _TWAPSeconds,\n\n42: \t\t        uint16 _maxTWAPTickDifference\n\n47: \t\t    uint64 public constant MAX_REWARD_X64 = uint64(Q64 / 50); // 2%\n\n48: \t\t    uint64 public totalRewardX64 = MAX_REWARD_X64; // 2%\n\n71: \t\t        uint24 fee;\n\n72: \t\t        int24 tickLower;\n\n73: \t\t        int24 tickUpper;\n\n76: \t\t        int24 tick;\n\n77: \t\t        uint160 sqrtPriceX96;\n\n132: \t\t                uint32 tSecs = TWAPSeconds;\n\n243: \t\t    function setReward(uint64 _totalRewardX64) external onlyOwner {\n```",
          "loc": [
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L71)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L30)",
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L41)",
            "[42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L42)",
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L47)",
            "[48](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L48)",
            "[72](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L72)",
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L73)",
            "[76](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L76)",
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L77)",
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L132)",
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L243)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n15: \t\t        int32 lowerTickLimit,\n\n16: \t\t        int32 upperTickLimit,\n\n17: \t\t        int32 lowerTickDelta,\n\n18: \t\t        int32 upperTickDelta,\n\n19: \t\t        uint64 token0SlippageX64,\n\n20: \t\t        uint64 token1SlippageX64,\n\n22: \t\t        uint64 maxRewardX64\n\n29: \t\t        uint32 _TWAPSeconds,\n\n30: \t\t        uint16 _maxTWAPTickDifference,\n\n39: \t\t        int32 lowerTickLimit; // if negative also in-range positions may be adjusted / if 0 out of range positions may be adjusted\n\n40: \t\t        int32 upperTickLimit; // if negative also in-range positions may be adjusted / if 0 out of range positions may be adjusted\n\n41: \t\t        int32 lowerTickDelta; // this amount is added to current tick (floored to tickspacing) to define lowerTick of new position\n\n42: \t\t        int32 upperTickDelta; // this amount is added to current tick (floored to tickspacing) to define upperTick of new position\n\n43: \t\t        uint64 token0SlippageX64; // max price difference from current pool price for swap / Q64 for token0\n\n44: \t\t        uint64 token1SlippageX64; // max price difference from current pool price for swap / Q64 for token1\n\n46: \t\t        uint64 maxRewardX64; // max allowed reward percentage of fees or full position\n\n58: \t\t        uint128 liquidity; // liquidity the calculations are based on\n\n62: \t\t        uint64 rewardX64; // which reward will be used for protocol, can be max configured amount (considering onlyFees)\n\n71: \t\t        uint24 fee;\n\n72: \t\t        int24 tickLower;\n\n73: \t\t        int24 tickUpper;\n\n74: \t\t        int24 currentTick;\n\n83: \t\t        uint128 liquidity;\n\n170: \t\t            int24 tickSpacing = _getTickSpacing(state.fee);\n\n171: \t\t            int24 baseTick = state.currentTick - (((state.currentTick % tickSpacing) + tickSpacing) % tickSpacing);\n\n300: \t\t    function _getTickSpacing(uint24 fee) internal view returns (int24) {\n\n300: \t\t    function _getTickSpacing(uint24 fee) internal view returns (int24) {\n\n308: \t\t            int24 spacing = IUniswapV3Factory(factory).feeAmountTickSpacing(fee);\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L15)",
            "[20](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L20)",
            "[22](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L22)",
            "[29](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L29)",
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L30)",
            "[39](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L39)",
            "[40](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L40)",
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L41)",
            "[42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L42)",
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L43)",
            "[44](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L44)",
            "[46](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L46)",
            "[58](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L58)",
            "[62](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L62)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L71)",
            "[72](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L72)",
            "[73](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L73)",
            "[74](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L74)",
            "[83](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L83)",
            "[170](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L170)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L171)",
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L300)",
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L300)",
            "[308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L308)",
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L17)",
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L16)",
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L19)",
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L18)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n102: \t\t        uint128 liquidity;\n\n106: \t\t        uint128 feeAmount0;\n\n107: \t\t        uint128 feeAmount1;\n```",
          "loc": [
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L102)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L106)",
            "[107](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L107)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n22: \t\t    event CompoundFees(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n25: \t\t    event SwapAndMint(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n26: \t\t    event SwapAndIncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n\n67: \t\t        uint128 feeAmount0;\n\n68: \t\t        uint128 feeAmount1;\n\n70: \t\t        uint24 fee;\n\n71: \t\t        int24 tickLower;\n\n72: \t\t        int24 tickUpper;\n\n74: \t\t        uint128 liquidity;\n\n98: \t\t    function executeWithPermit(uint256 tokenId, Instructions memory instructions, uint8 v, bytes32 r, bytes32 s)\n\n116: \t\t        (,, address token0, address token1,,,, uint128 liquidity,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n435: \t\t        uint24 fee;\n\n436: \t\t        int24 tickLower;\n\n437: \t\t        int24 tickUpper;\n\n470: \t\t        returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1)\n\n535: \t\t        returns (uint128 liquidity, uint256 amount0, uint256 amount1)\n\n707: \t\t        returns (uint256 tokenId, uint128 liquidity, uint256 added0, uint256 added1)\n\n737: \t\t        returns (uint128 liquidity, uint256 added0, uint256 added1)\n\n879: \t\t        uint128 liquidity,\n\n892: \t\t    function _collectFees(uint256 tokenId, IERC20 token0, IERC20 token1, uint128 collectAmount0, uint128 collectAmount1)\n\n892: \t\t    function _collectFees(uint256 tokenId, IERC20 token0, IERC20 token1, uint128 collectAmount0, uint128 collectAmount1)\n```",
          "loc": [
            "[22](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L22)",
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L25)",
            "[26](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L26)",
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L67)",
            "[68](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L68)",
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L70)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L71)",
            "[72](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L72)",
            "[74](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L74)",
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L98)",
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L116)",
            "[435](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L435)",
            "[436](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L436)",
            "[437](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L437)",
            "[470](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L470)",
            "[535](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L535)",
            "[707](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L707)",
            "[737](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L737)",
            "[879](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L879)",
            "[892](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L892)",
            "[892](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L892)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n124: \t\t        uint24 fee;\n\n160: \t\t        (address tokenIn, address tokenOut, uint24 fee) = abi.decode(data, (address, address, uint24));\n\n171: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L124)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L171)",
            "[160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L160)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`>=`/`<=` costs less gas than `>`/`<`",
      "description": "The compiler uses opcodes `GT` and `ISZERO` for code that uses `>`, but only requires `LT` for `>=`. A similar behaviour applies for `>`, which uses opcodes `LT` and `ISZERO`, but only requires `GT` for `<=`.",
      "gasSavings": 381,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n89: \t\t            baseRatePerYearX96 > MAX_BASE_RATE_X96 || multiplierPerYearX96 > MAX_MULTIPLIER_X96\n\n89: \t\t            baseRatePerYearX96 > MAX_BASE_RATE_X96 || multiplierPerYearX96 > MAX_MULTIPLIER_X96\n\n90: \t\t                || jumpMultiplierPerYearX96 > MAX_MULTIPLIER_X96\n```",
          "loc": [
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L89)",
            "[90](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L90)",
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L89)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n143: \t\t        uint256 differenceX10000 = priceX96 > verifyPriceX96\n\n186: \t\t        if (_maxPoolPriceDifference < MIN_PRICE_DIFFERENCE) {\n\n221: \t\t            if (maxDifference < MIN_PRICE_DIFFERENCE) {\n\n338: \t\t        if (updatedAt + feedConfig.maxFeedAge < block.timestamp || answer < 0) {\n\n338: \t\t        if (updatedAt + feedConfig.maxFeedAge < block.timestamp || answer < 0) {\n\n431: \t\t        if (state.liquidity > 0) {\n\n485: \t\t            if (tickCurrent < tickLower) {\n\n488: \t\t            } else if (tickCurrent < tickUpper) {\n```",
          "loc": [
            "[431](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L431)",
            "[338](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L338)",
            "[488](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L488)",
            "[485](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L485)",
            "[186](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L186)",
            "[143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L143)",
            "[338](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L338)",
            "[221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L221)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n443: \t\t            if (data.length > 0) {\n\n505: \t\t        if (transformedTokenId > 0) {\n\n552: \t\t            transformedTokenId > 0 && transformedTokenId == tokenId && transformerAllowList[msg.sender];\n\n571: \t\t        if (debtSharesTotal > _convertToShares(globalDebtLimit, newDebtExchangeRateX96, Math.Rounding.Down)) {\n\n574: \t\t        if (assets > dailyDebtIncreaseLimitLeft) {\n\n586: \t\t        if (debt < minLoanSize) {\n\n615: \t\t        if (transformedTokenId > 0) {\n\n687: \t\t        if (transformedTokenId > 0) {\n\n712: \t\t        if (state.reserveCost > 0) {\n\n717: \t\t        if (params.permitData.length > 0) {\n\n737: \t\t        if (amount0 < params.amount0Min || amount1 < params.amount1Min) {\n\n737: \t\t        if (amount0 < params.amount0Min || amount1 < params.amount1Min) {\n\n771: \t\t        uint256 unprotected = reserves > protected ? reserves - protected : 0;\n\n772: \t\t        uint256 available = balance > unprotected ? unprotected : balance;\n\n774: \t\t        if (amount > available) {\n\n778: \t\t        if (amount > 0) {\n\n845: \t\t        if (_reserveProtectionFactorX32 < MIN_RESERVE_PROTECTION_FACTOR_X32) {\n\n860: \t\t        if (collateralFactorX32 > MAX_COLLATERAL_FACTOR_X32) {\n\n893: \t\t        if (permitData.length > 0) {\n\n906: \t\t        if (totalSupply() > globalLendLimit) {\n\n910: \t\t        if (assets > dailyLendIncreaseLimitLeft) {\n\n940: \t\t        if (available < assets) {\n\n973: \t\t        if (shares > currentShares) {\n\n977: \t\t        if (assets > 0) {\n\n978: \t\t            if (permitData.length > 0) {\n\n1008: \t\t            if (_convertToAssets(loanDebtShares, newDebtExchangeRateX96, Math.Rounding.Up) < minLoanSize) {\n\n1027: \t\t        reserves = balance + debt > lent ? balance + debt - lent : 0;\n\n1028: \t\t        available = balance > reserves ? balance - reserves : 0;\n\n1052: \t\t            if (liquidationValue < feeValue) {\n\n1064: \t\t        if (liquidity > 0) {\n\n1131: \t\t        if (reserveCost > reserves) {\n\n1147: \t\t        return factor0X32 > factor1X32 ? factor1X32 : factor0X32;\n\n1155: \t\t        if (block.timestamp > lastExchangeRateUpdate) {\n\n1186: \t\t        if (lastRateUpdate > 0) {\n\n1216: \t\t            if (oldShares > newShares) {\n\n1228: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n\n1229: \t\t                        && _convertToAssets(tokenConfigs[token0].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1230: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1236: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n\n1237: \t\t                        && _convertToAssets(tokenConfigs[token1].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1238: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1249: \t\t        if (force || time > dailyLendIncreaseLimitLastReset) {\n\n1253: \t\t                dailyLendIncreaseLimitMin > lendIncreaseLimit ? dailyLendIncreaseLimitMin : lendIncreaseLimit;\n\n1261: \t\t        if (force || time > dailyDebtIncreaseLimitLastReset) {\n\n1265: \t\t                dailyDebtIncreaseLimitMin > debtIncreaseLimit ? dailyDebtIncreaseLimitMin : debtIncreaseLimit;\n```",
          "loc": [
            "[772](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L772)",
            "[774](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L774)",
            "[778](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L778)",
            "[845](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L845)",
            "[860](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L860)",
            "[893](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L893)",
            "[906](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L906)",
            "[910](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L910)",
            "[940](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L940)",
            "[973](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L973)",
            "[977](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L977)",
            "[978](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L978)",
            "[1008](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1008)",
            "[1027](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1027)",
            "[1028](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1028)",
            "[1052](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1052)",
            "[1064](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1064)",
            "[1131](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1131)",
            "[1147](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1147)",
            "[1155](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1155)",
            "[1186](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1186)",
            "[1216](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1216)",
            "[1228](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1228)",
            "[1229-1230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1229-L1230)",
            "[1236](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1236)",
            "[1249](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1249)",
            "[1253](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1253)",
            "[1261](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1261)",
            "[1265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1265)",
            "[1237-1238](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1237-L1238)",
            "[443](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L443)",
            "[505](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L505)",
            "[552](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L552)",
            "[571](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L571)",
            "[574](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L574)",
            "[586](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L586)",
            "[615](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L615)",
            "[687](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L687)",
            "[712](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L712)",
            "[717](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L717)",
            "[737](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L737)",
            "[737](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L737)",
            "[771](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L771)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n113: \t\t            config.onlyFees && params.rewardX64 > config.maxRewardX64\n\n114: \t\t                || !config.onlyFees && params.rewardX64 > config.maxRewardX64\n\n135: \t\t        if (config.token0TriggerTick <= state.tick && state.tick < config.token1TriggerTick) {\n\n199: \t\t        if (state.amount0 > 0) {\n\n202: \t\t        if (state.amount1 > 0) {\n```",
          "loc": [
            "[202](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L202)",
            "[199](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L199)",
            "[135](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L135)",
            "[114](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L114)",
            "[113](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L113)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n88: \t\t        if (_TWAPSeconds < MIN_TWAP_SECONDS) {\n\n91: \t\t        if (_maxTWAPTickDifference > MAX_TWAP_TICK_DIFFERENCE) {\n\n111: \t\t        for (; i < count; ++i) {\n\n113: \t\t            if (balance > 0) {\n\n129: \t\t        if (balance > 0) {\n\n200: \t\t        if (liquidity > 0) {\n```",
          "loc": [
            "[129](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L129)",
            "[200](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L200)",
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L88)",
            "[91](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L91)",
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L111)",
            "[113](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L113)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n123: \t\t        if (state.amount0 > 0 || state.amount1 > 0) {\n\n123: \t\t        if (state.amount0 > 0 || state.amount1 > 0) {\n\n127: \t\t            if (amountIn > 0) {\n\n133: \t\t                if (tSecs > 0) {\n\n140: \t\t                if (amountIn > 0) {\n\n160: \t\t            if (state.maxAddAmount0 > 0 || state.maxAddAmount1 > 0) {\n\n160: \t\t            if (state.maxAddAmount0 > 0 || state.maxAddAmount1 > 0) {\n\n212: \t\t        if (balance0 > 0) {\n\n216: \t\t        if (balance1 > 0) {\n\n233: \t\t        for (; i < count; ++i) {\n\n258: \t\t            if (amount > currentBalance) {\n```",
          "loc": [
            "[140](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L140)",
            "[160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L160)",
            "[160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L160)",
            "[212](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L212)",
            "[216](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L216)",
            "[233](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L233)",
            "[258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L258)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L123)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L123)",
            "[127](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L127)",
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L133)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n123: \t\t            config.onlyFees && params.rewardX64 > config.maxRewardX64\n\n124: \t\t                || !config.onlyFees && params.rewardX64 > config.maxRewardX64\n\n149: \t\t        if (params.swap0To1 && params.amountIn > state.amount0 || !params.swap0To1 && params.amountIn > state.amount1) {\n\n149: \t\t        if (params.swap0To1 && params.amountIn > state.amount0 || !params.swap0To1 && params.amountIn > state.amount1) {\n\n167: \t\t            state.currentTick < state.tickLower - config.lowerTickLimit\n\n243: \t\t            if (state.amount0 - state.amountAdded0 > 0) {\n\n246: \t\t            if (state.amount1 - state.amountAdded1 > 0) {\n\n280: \t\t        if (config.lowerTickDelta > config.upperTickDelta) {\n```",
          "loc": [
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L123)",
            "[124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L124)",
            "[149](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L149)",
            "[149](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L149)",
            "[167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L167)",
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L243)",
            "[246](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L246)",
            "[280](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L280)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n52: \t\t        if (params.amountIn0 > 0) {\n\n64: \t\t        if (params.amountIn1 > 0) {\n\n87: \t\t        if (amount0 > added0) {\n\n90: \t\t        if (amount1 > added1) {\n\n93: \t\t        if (token != token0 && token != token1 && amount > 0) {\n\n146: \t\t        if (params.amountIn0 > 0 && token != token0) {\n\n155: \t\t        if (params.amountIn1 > 0 && token != token1) {\n\n169: \t\t        if (amount0 > 0 && token != token0) {\n\n172: \t\t        if (amount1 > 0 && token != token1) {\n```",
          "loc": [
            "[52](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L52)",
            "[64](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L64)",
            "[87](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L87)",
            "[90](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L90)",
            "[172](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L172)",
            "[146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L146)",
            "[155](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L155)",
            "[169](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L169)",
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L93)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n142: \t\t        if (amount0 < instructions.amountIn0 || amount1 < instructions.amountIn1) {\n\n142: \t\t        if (amount0 < instructions.amountIn0 || amount1 < instructions.amountIn1) {\n\n316: \t\t                if (amountInDelta < amount0) {\n\n333: \t\t                if (amountInDelta < amount1) {\n\n402: \t\t        if (params.permitData.length > 0) {\n\n476: \t\t        if (params.permitData.length > 0) {\n\n539: \t\t        if (params.permitData.length > 0) {\n\n577: \t\t        if (needed0 > 0) {\n\n580: \t\t        if (needed1 > 0) {\n\n583: \t\t        if (neededOther > 0) {\n\n617: \t\t        if (state.needed0 > 0) {\n\n621: \t\t        if (state.needed1 > 0) {\n\n625: \t\t        if (state.neededOther > 0) {\n\n634: \t\t        if (state.needed0 > 0) {\n\n639: \t\t        if (state.needed1 > 0) {\n\n644: \t\t        if (state.neededOther > 0) {\n\n671: \t\t                if (amountAdded0 > amount0) {\n\n676: \t\t                if (amountAdded1 > amount1) {\n\n681: \t\t                if (amountAddedOther > amountOther) {\n\n690: \t\t        if (amount0 > amountAdded0) {\n\n693: \t\t        if (amount1 > amountAdded1) {\n\n697: \t\t            amountOther > amountAddedOther && address(otherToken) != address(0) && token0 != otherToken\n\n784: \t\t            if (params.amount0 < params.amountIn1) {\n\n795: \t\t            if (params.amount1 < params.amountIn0) {\n```",
          "loc": [
            "[402](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L402)",
            "[476](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L476)",
            "[539](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L539)",
            "[577](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L577)",
            "[580](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L580)",
            "[583](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L583)",
            "[617](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L617)",
            "[621](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L621)",
            "[625](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L625)",
            "[634](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L634)",
            "[639](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L639)",
            "[644](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L644)",
            "[671](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L671)",
            "[676](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L676)",
            "[681](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L681)",
            "[690](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L690)",
            "[693](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L693)",
            "[697](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L697)",
            "[784](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L784)",
            "[795](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L795)",
            "[142](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L142)",
            "[142](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L142)",
            "[316](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L316)",
            "[333](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L333)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n90: \t\t            if (balance > 0) {\n\n96: \t\t            if (balance > 0) {\n\n102: \t\t            if (balance < data.minReward) {\n\n105: \t\t            if (balance > 0) {\n```",
          "loc": [
            "[105](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L105)",
            "[90](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L90)",
            "[96](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L96)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n111: \t\t            if (amountOutDelta < params.amountOutMin) {\n\n133: \t\t        if (params.amountIn > 0) {\n\n149: \t\t            if (amountOutDelta < params.amountOutMin) {\n\n157: \t\t        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n\n157: \t\t        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n\n166: \t\t        uint256 amountToPay = amount0Delta > 0 ? uint256(amount0Delta) : uint256(amount1Delta);\n```",
          "loc": [
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L157)",
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L166)",
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L157)",
            "[149](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L149)",
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L133)",
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L111)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`internal` functions only called once can be inlined to save gas",
      "description": "Consider removing the following internal functions, and put the logic directly where they are called, as they are called only once.",
      "gasSavings": 360,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n133: \t\t    function _checkPoolPrice(address token0, address token1, uint24 fee, uint256 derivedPoolPriceX96) internal view {\n\n346: \t\t    function _getTWAPPriceX96(TokenConfig memory feedConfig) internal view returns (uint256 poolTWAPPriceX96) {\n\n395: \t\t    function _initializeState(uint256 tokenId) internal view returns (PositionState memory state) {\n\n426: \t\t    function _getAmounts(PositionState memory state)\n\n445: \t\t    function _getUncollectedFees(PositionState memory position, int24 tick)\n\n472: \t\t    function _getFeeGrowthInside(\n```",
          "loc": [
            "[445](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L445)",
            "[472](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L472)",
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L133)",
            "[346](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L346)",
            "[395](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L395)",
            "[426](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L426)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n1032: \t\t    function _sendPositionValue(\n\n1123: \t\t    function _handleReserveLiquidation(\n\n1143: \t\t    function _calculateTokenCollateralFactorX32(uint256 tokenId) internal view returns (uint32) {\n\n1303: \t\t    function _removeTokenFromOwner(address from, uint256 tokenId) internal {\n```",
          "loc": [
            "[1143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1143)",
            "[1123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1123)",
            "[1032](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1032)",
            "[1303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1303)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n166: \t\t    function _hasMaxTWAPTickDifference(IUniswapV3Pool pool, uint32 twapPeriod, int24 currentTick, uint16 maxDifference)\n\n180: \t\t    function _getTWAPTick(IUniswapV3Pool pool, uint32 twapPeriod) internal view returns (int24, bool) {\n\n218: \t\t    function _transferToken(address to, IERC20 token, uint256 amount, bool unwrap) internal {\n```",
          "loc": [
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L166)",
            "[180](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L180)",
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L218)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n276: \t\t    function _checkApprovals(address token0, address token1) internal {\n```",
          "loc": [
            "[276](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L276)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n300: \t\t    function _getTickSpacing(uint24 fee) internal view returns (int24) {\n```",
          "loc": [
            "[300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L300)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n877: \t\t    function _decreaseLiquidity(\n\n892: \t\t    function _collectFees(uint256 tokenId, IERC20 token0, IERC20 token1, uint128 collectAmount0, uint128 collectAmount1)\n```",
          "loc": [
            "[892](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L892)",
            "[877](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L877)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n171: \t\t    function _getPool(address tokenA, address tokenB, uint24 fee) internal view returns (IUniswapV3Pool) {\n```",
          "loc": [
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L171)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use multiple revert checks to save gas",
      "description": "Splitting the conditions into two separate checks [saves](https://gist.github.com/IllIllI000/7e25b0fca6bd9d57d9b9bcb9d2018959) 2 gas per split.",
      "gasSavings": 52,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n88: \t\t        if (\n89: \t\t            baseRatePerYearX96 > MAX_BASE_RATE_X96 || multiplierPerYearX96 > MAX_MULTIPLIER_X96\n90: \t\t                || jumpMultiplierPerYearX96 > MAX_MULTIPLIER_X96\n91: \t\t        ) {\n92: \t\t            revert InvalidConfig();\n93: \t\t        }\n```",
          "loc": [
            "[88-93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L88-L93)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n250: \t\t        if (msg.sender != emergencyAdmin && msg.sender != owner()) {\n251: \t\t            revert Unauthorized();\n252: \t\t        }\n\n338: \t\t        if (updatedAt + feedConfig.maxFeedAge < block.timestamp || answer < 0) {\n339: \t\t            revert ChainlinkPriceError();\n340: \t\t        }\n```",
          "loc": [
            "[250-252](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L250-L252)",
            "[338-340](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L338-L340)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n435: \t\t        if (msg.sender != address(nonfungiblePositionManager) || from == address(this)) {\n436: \t\t            revert WrongContract();\n437: \t\t        }\n\n502: \t\t        if (tokenId == 0 || !transformerAllowList[transformer]) {\n503: \t\t            revert TransformNotAllowed();\n504: \t\t        }\n\n515: \t\t        if (loanOwner != msg.sender && !transformApprovals[loanOwner][tokenId][msg.sender]) {\n516: \t\t            revert Unauthorized();\n517: \t\t        }\n\n561: \t\t        if (!isTransformMode && tokenOwner[tokenId] != msg.sender && address(this) != msg.sender) {\n562: \t\t            revert Unauthorized();\n563: \t\t        }\n\n737: \t\t        if (amount0 < params.amount0Min || amount1 < params.amount1Min) {\n738: \t\t            revert SlippageError();\n739: \t\t        }\n\n790: \t\t        if (\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n792: \t\t                || transformer == address(nonfungiblePositionManager)\n793: \t\t        ) {\n794: \t\t            revert InvalidConfig();\n795: \t\t        }\n\n814: \t\t        if (msg.sender != emergencyAdmin && msg.sender != owner()) {\n815: \t\t            revert Unauthorized();\n816: \t\t        }\n\n1227: \t\t                if (\n1228: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n1229: \t\t                        && _convertToAssets(tokenConfigs[token0].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1230: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n1231: \t\t                ) {\n1232: \t\t                    revert CollateralValueLimit();\n1233: \t\t                }\n\n1235: \t\t                if (\n1236: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n1237: \t\t                        && _convertToAssets(tokenConfigs[token1].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1238: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n1239: \t\t                ) {\n1240: \t\t                    revert CollateralValueLimit();\n1241: \t\t                }\n```",
          "loc": [
            "[790-795](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L790-L795)",
            "[435-437](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L435-L437)",
            "[502-504](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L502-L504)",
            "[515-517](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L515-L517)",
            "[561-563](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L561-L563)",
            "[737-739](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L737-L739)",
            "[814-816](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L814-L816)",
            "[1227-1233](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1227-L1233)",
            "[1235-1241](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1235-L1241)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n112: \t\t        if (\n113: \t\t            config.onlyFees && params.rewardX64 > config.maxRewardX64\n114: \t\t                || !config.onlyFees && params.rewardX64 > config.maxRewardX64\n115: \t\t        ) {\n116: \t\t            revert ExceedsMaxReward();\n117: \t\t        }\n\n135: \t\t        if (config.token0TriggerTick <= state.tick && state.tick < config.token1TriggerTick) {\n136: \t\t            revert NotReady();\n137: \t\t        }\n```",
          "loc": [
            "[135-137](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L135-L137)",
            "[112-117](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L112-L117)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n219: \t\t        if (address(weth) == address(token) && unwrap) {\n220: \t\t            weth.withdraw(amount);\n221: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n222: \t\t            if (!sent) {\n223: \t\t                revert EtherSendFailed();\n224: \t\t            }\n225: \t\t        } else {\n226: \t\t            SafeERC20.safeTransfer(token, to, amount);\n227: \t\t        }\n```",
          "loc": [
            "[219-227](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L219-L227)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n88: \t\t        if (!operators[msg.sender] || !vaults[vault]) {\n89: \t\t            revert Unauthorized();\n90: \t\t        }\n\n102: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n103: \t\t            revert Unauthorized();\n104: \t\t        }\n```",
          "loc": [
            "[102-104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L102-L104)",
            "[88-90](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L88-L90)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n98: \t\t        if (!operators[msg.sender] || !vaults[vault]) {\n99: \t\t            revert Unauthorized();\n100: \t\t        }\n\n112: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n113: \t\t            revert Unauthorized();\n114: \t\t        }\n\n122: \t\t        if (\n123: \t\t            config.onlyFees && params.rewardX64 > config.maxRewardX64\n124: \t\t                || !config.onlyFees && params.rewardX64 > config.maxRewardX64\n125: \t\t        ) {\n126: \t\t            revert ExceedsMaxReward();\n127: \t\t        }\n\n149: \t\t        if (params.swap0To1 && params.amountIn > state.amount0 || !params.swap0To1 && params.amountIn > state.amount1) {\n150: \t\t            revert SwapAmountTooLarge();\n151: \t\t        }\n\n166: \t\t        if (\n167: \t\t            state.currentTick < state.tickLower - config.lowerTickLimit\n168: \t\t                || state.currentTick >= state.tickUpper + config.upperTickLimit\n169: \t\t        ) {\n170: \t\t            int24 tickSpacing = _getTickSpacing(state.fee);\n171: \t\t            int24 baseTick = state.currentTick - (((state.currentTick % tickSpacing) + tickSpacing) % tickSpacing);\n172: \t\t\n173: \t\t            // check if new range same as old range\n174: \t\t            if (\n175: \t\t                baseTick + config.lowerTickDelta == state.tickLower\n176: \t\t                    && baseTick + config.upperTickDelta == state.tickUpper\n177: \t\t            ) {\n178: \t\t                revert SameRange();\n179: \t\t            }\n180: \t\t\n181: \t\t            (state.amountInDelta, state.amountOutDelta) = _routerSwap(\n182: \t\t                Swapper.RouterSwapParams(\n183: \t\t                    params.swap0To1 ? IERC20(state.token0) : IERC20(state.token1),\n184: \t\t                    params.swap0To1 ? IERC20(state.token1) : IERC20(state.token0),\n185: \t\t                    params.amountIn,\n186: \t\t                    state.amountOutMin,\n187: \t\t                    params.swapData\n188: \t\t                )\n189: \t\t            );\n190: \t\t\n191: \t\t            state.amount0 = params.swap0To1 ? state.amount0 - state.amountInDelta : state.amount0 + state.amountOutDelta;\n192: \t\t            state.amount1 = params.swap0To1 ? state.amount1 + state.amountOutDelta : state.amount1 - state.amountInDelta;\n193: \t\t\n194: \t\t            // max amount to add - removing max potential fees (if config.onlyFees - the have been removed already)\n195: \t\t            state.maxAddAmount0 = config.onlyFees ? state.amount0 : state.amount0 * Q64 / (params.rewardX64 + Q64);\n196: \t\t            state.maxAddAmount1 = config.onlyFees ? state.amount1 : state.amount1 * Q64 / (params.rewardX64 + Q64);\n197: \t\t\n198: \t\t            INonfungiblePositionManager.MintParams memory mintParams = INonfungiblePositionManager.MintParams(\n199: \t\t                address(state.token0),\n200: \t\t                address(state.token1),\n201: \t\t                state.fee,\n202: \t\t                SafeCast.toInt24(baseTick + config.lowerTickDelta), // reverts if out of valid range\n203: \t\t                SafeCast.toInt24(baseTick + config.upperTickDelta), // reverts if out of valid range\n204: \t\t                state.maxAddAmount0,\n205: \t\t                state.maxAddAmount1,\n206: \t\t                0,\n207: \t\t                0,\n208: \t\t                address(this), // is sent to real recipient aftwards\n209: \t\t                params.deadline\n210: \t\t            );\n211: \t\t\n212: \t\t            // approve npm\n213: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), state.maxAddAmount0);\n214: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), state.maxAddAmount1);\n215: \t\t\n216: \t\t            // mint is done to address(this) first - its not a safemint\n217: \t\t            (state.newTokenId,, state.amountAdded0, state.amountAdded1) = nonfungiblePositionManager.mint(mintParams);\n218: \t\t\n219: \t\t            // remove remaining approval\n220: \t\t            SafeERC20.safeApprove(IERC20(state.token0), address(nonfungiblePositionManager), 0);\n221: \t\t            SafeERC20.safeApprove(IERC20(state.token1), address(nonfungiblePositionManager), 0);\n222: \t\t\n223: \t\t            state.owner = nonfungiblePositionManager.ownerOf(params.tokenId);\n224: \t\t\n225: \t\t            // get the real owner - if owner is vault - for sending leftover tokens\n226: \t\t            state.realOwner = state.owner;\n227: \t\t            if (vaults[state.owner]) {\n228: \t\t                state.realOwner = IVault(state.owner).ownerOf(params.tokenId);\n229: \t\t            }\n230: \t\t\n231: \t\t            // send the new nft to the owner / vault\n232: \t\t            nonfungiblePositionManager.safeTransferFrom(address(this), state.owner, state.newTokenId);\n233: \t\t\n234: \t\t            // protocol reward is calculated based on added amount (to incentivize optimal swap done by operator)\n235: \t\t            if (!config.onlyFees) {\n236: \t\t                state.protocolReward0 = state.amountAdded0 * params.rewardX64 / Q64;\n237: \t\t                state.protocolReward1 = state.amountAdded1 * params.rewardX64 / Q64;\n238: \t\t                state.amount0 -= state.protocolReward0;\n239: \t\t                state.amount1 -= state.protocolReward1;\n240: \t\t            }\n241: \t\t\n242: \t\t            // send leftover to real owner\n243: \t\t            if (state.amount0 - state.amountAdded0 > 0) {\n244: \t\t                _transferToken(state.realOwner, IERC20(state.token0), state.amount0 - state.amountAdded0, true);\n245: \t\t            }\n246: \t\t            if (state.amount1 - state.amountAdded1 > 0) {\n247: \t\t                _transferToken(state.realOwner, IERC20(state.token1), state.amount1 - state.amountAdded1, true);\n248: \t\t            }\n249: \t\t\n250: \t\t            // copy token config for new token\n251: \t\t            positionConfigs[state.newTokenId] = config;\n252: \t\t            emit PositionConfigured(\n253: \t\t                state.newTokenId,\n254: \t\t                config.lowerTickLimit,\n255: \t\t                config.upperTickLimit,\n256: \t\t                config.lowerTickDelta,\n257: \t\t                config.upperTickDelta,\n258: \t\t                config.token0SlippageX64,\n259: \t\t                config.token1SlippageX64,\n260: \t\t                config.onlyFees,\n261: \t\t                config.maxRewardX64\n262: \t\t            );\n263: \t\t\n264: \t\t            // delete config for old position\n265: \t\t            delete positionConfigs[params.tokenId];\n266: \t\t            emit PositionConfigured(params.tokenId, 0, 0, 0, 0, 0, 0, false, 0);\n267: \t\t\n268: \t\t            emit RangeChanged(params.tokenId, state.newTokenId);\n269: \t\t        } else {\n270: \t\t            revert NotReady();\n271: \t\t        }\n\n174: \t\t            if (\n175: \t\t                baseTick + config.lowerTickDelta == state.tickLower\n176: \t\t                    && baseTick + config.upperTickDelta == state.tickUpper\n177: \t\t            ) {\n178: \t\t                revert SameRange();\n179: \t\t            }\n```",
          "loc": [
            "[149-151](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L149-L151)",
            "[166-271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L166-L271)",
            "[98-100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L98-L100)",
            "[174-179](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L174-L179)",
            "[112-114](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L112-L114)",
            "[122-127](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L122-L127)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n142: \t\t        if (amount0 < instructions.amountIn0 || amount1 < instructions.amountIn1) {\n143: \t\t            revert AmountError();\n144: \t\t        }\n\n865: \t\t        if (address(weth) == address(token) && unwrap) {\n866: \t\t            weth.withdraw(amount);\n867: \t\t            (bool sent,) = to.call{value: amount}(\"\");\n868: \t\t            if (!sent) {\n869: \t\t                revert EtherSendFailed();\n870: \t\t            }\n871: \t\t        } else {\n872: \t\t            SafeERC20.safeTransfer(token, to, amount);\n873: \t\t        }\n```",
          "loc": [
            "[142-144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L142-L144)",
            "[865-873](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L865-L873)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n77: \t\t        if (params.amountIn != 0 && params.swapData.length != 0 && address(params.tokenOut) != address(0)) {\n78: \t\t            uint256 balanceInBefore = params.tokenIn.balanceOf(address(this));\n79: \t\t            uint256 balanceOutBefore = params.tokenOut.balanceOf(address(this));\n80: \t\t\n81: \t\t            // get router specific swap data\n82: \t\t            (address router, bytes memory routerData) = abi.decode(params.swapData, (address, bytes));\n83: \t\t\n84: \t\t            if (router == zeroxRouter) {\n85: \t\t                ZeroxRouterData memory data = abi.decode(routerData, (ZeroxRouterData));\n86: \t\t                // approve needed amount\n87: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, params.amountIn);\n88: \t\t                // execute swap\n89: \t\t                (bool success,) = zeroxRouter.call(data.data);\n90: \t\t                if (!success) {\n91: \t\t                    revert SwapFailed();\n92: \t\t                }\n93: \t\t                // reset approval\n94: \t\t                SafeERC20.safeApprove(params.tokenIn, data.allowanceTarget, 0);\n95: \t\t            } else if (router == universalRouter) {\n96: \t\t                UniversalRouterData memory data = abi.decode(routerData, (UniversalRouterData));\n97: \t\t                // tokens are transfered to Universalrouter directly (data.commands must include sweep action!)\n98: \t\t                SafeERC20.safeTransfer(params.tokenIn, universalRouter, params.amountIn);\n99: \t\t                IUniversalRouter(universalRouter).execute(data.commands, data.inputs, data.deadline);\n100: \t\t            } else {\n101: \t\t                revert WrongContract();\n102: \t\t            }\n103: \t\t\n104: \t\t            uint256 balanceInAfter = params.tokenIn.balanceOf(address(this));\n105: \t\t            uint256 balanceOutAfter = params.tokenOut.balanceOf(address(this));\n106: \t\t\n107: \t\t            amountInDelta = balanceInBefore - balanceInAfter;\n108: \t\t            amountOutDelta = balanceOutAfter - balanceOutBefore;\n109: \t\t\n110: \t\t            // amountMin slippage check\n111: \t\t            if (amountOutDelta < params.amountOutMin) {\n112: \t\t                revert SlippageError();\n113: \t\t            }\n114: \t\t\n115: \t\t            // event for any swap with exact swapped value\n116: \t\t            emit Swap(address(params.tokenIn), address(params.tokenOut), amountInDelta, amountOutDelta);\n117: \t\t        }\n```",
          "loc": [
            "[77-117](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L77-L117)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`abi.encode()` is less efficient than `abi.encodepacked()` for non-address arguments",
      "description": "Consider refactoring the code by using `abi.encodepacked` instead of `abi.encode`, as the former is cheaper when used with non-address arguments.",
      "gasSavings": 20,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n401: \t\t        nonfungiblePositionManager.safeTransferFrom(msg.sender, address(this), tokenId, abi.encode(recipient));\n\n424: \t\t        nonfungiblePositionManager.safeTransferFrom(owner, address(this), tokenId, abi.encode(recipient));\n```",
          "loc": [
            "[401](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L401)",
            "[424](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L424)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n51: \t\t        bytes memory data = abi.encode(\n52: \t\t            FlashCallbackData(\n53: \t\t                params.tokenId,\n54: \t\t                params.debtShares,\n55: \t\t                liquidationCost,\n56: \t\t                params.vault,\n57: \t\t                IERC20(asset),\n58: \t\t                RouterSwapParams(IERC20(token0), IERC20(asset), params.amount0In, 0, params.swapData0),\n59: \t\t                RouterSwapParams(IERC20(token1), IERC20(asset), params.amount1In, 0, params.swapData1),\n60: \t\t                msg.sender,\n61: \t\t                params.minReward\n62: \t\t            )\n63: \t\t        );\n```",
          "loc": [
            "[51-63](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L51-L63)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n139: \t\t                abi.encode(\n140: \t\t                    params.swap0For1 ? params.token0 : params.token1,\n141: \t\t                    params.swap0For1 ? params.token1 : params.token0,\n142: \t\t                    params.fee\n143: \t\t                )\n```",
          "loc": [
            "[139-143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L139-L143)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Unused named return variables without optimizer waste gas",
      "description": "Consider changing the variable to be an unnamed one, since the variable is never assigned, nor is it returned by name. If the optimizer is not turned on, leaving the code as it is will also waste gas for the stack variable.",
      "gasSavings": 15,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit \n275: \t\t        returns (uint256 priceX96, uint256 chainlinkReferencePriceX96)\n```",
          "loc": [
            "[275](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L275)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit address owner\n258: \t\t    function ownerOf(uint256 tokenId) external view override returns (address owner) {\n\n// @audit uint256 shares\n289: \t\t    function convertToShares(uint256 assets) external view override returns (uint256 shares) {\n\n// @audit uint256 assets\n295: \t\t    function convertToAssets(uint256 shares) external view override returns (uint256 assets) {\n\n// @audit uint256 newTokenId\n500: \t\t        returns (uint256 newTokenId)\n```",
          "loc": [
            "[258](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L258)",
            "[289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L289)",
            "[295](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L295)",
            "[500](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L500)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit uint256 newTokenId\n100: \t\t        returns (uint256 newTokenId)\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L100)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider pre-calculating the address of `address(this)` to save gas",
      "description": "Use Foundry's [`script.sol`](https://book.getfoundry.sh/reference/forge-std/compute-create-address) or Solady's [`LibRlp.sol`](https://github.com/Vectorized/solady/blob/main/src/utils/LibRLP.sol) to save the value in a constant, which will avoid having to spend gas to push the value on the stack every time it's used.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n285: \t\t        return IERC20(asset).balanceOf(address(this));\n\n401: \t\t        nonfungiblePositionManager.safeTransferFrom(msg.sender, address(this), tokenId, abi.encode(recipient));\n\n423: \t\t        nonfungiblePositionManager.permit(address(this), tokenId, deadline, v, r, s);\n\n424: \t\t        nonfungiblePositionManager.safeTransferFrom(owner, address(this), tokenId, abi.encode(recipient));\n\n435: \t\t        if (msg.sender != address(nonfungiblePositionManager) || from == address(this)) {\n\n532: \t\t        if (owner != address(this)) {\n\n561: \t\t        if (!isTransformMode && tokenOwner[tokenId] != msg.sender && address(this) != msg.sender) {\n\n722: \t\t                ISignatureTransfer.SignatureTransferDetails(address(this), state.liquidatorCost),\n\n728: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), state.liquidatorCost);\n\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n\n897: \t\t                permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n\n901: \t\t            SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n\n982: \t\t                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n\n986: \t\t                SafeERC20.safeTransferFrom(IERC20(asset), msg.sender, address(this), assets);\n\n1083: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), owner, tokenId);\n```",
          "loc": [
            "[728](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L728)",
            "[285](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L285)",
            "[401](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L401)",
            "[423](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L423)",
            "[424](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L424)",
            "[435](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L435)",
            "[532](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L532)",
            "[561](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L561)",
            "[722](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L722)",
            "[791](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L791)",
            "[897](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L897)",
            "[901](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L901)",
            "[982](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L982)",
            "[986](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L986)",
            "[1083](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1083)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n112: \t\t            uint256 balance = IERC20(tokens[i]).balanceOf(address(this));\n\n128: \t\t        uint256 balance = address(this).balance;\n\n209: \t\t            INonfungiblePositionManager.CollectParams(tokenId, address(this), type(uint128).max, type(uint128).max)\n```",
          "loc": [
            "[209](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L209)",
            "[128](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L128)",
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L112)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n92: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoCompound.execute.selector, params)\n\n110: \t\t                params.tokenId, address(this), type(uint128).max, type(uint128).max\n\n278: \t\t        uint256 allowance0 = IERC20(token0).allowance(address(this), address(nonfungiblePositionManager));\n\n282: \t\t        uint256 allowance1 = IERC20(token1).allowance(address(this), address(nonfungiblePositionManager));\n```",
          "loc": [
            "[110](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L110)",
            "[92](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L92)",
            "[278](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L278)",
            "[282](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L282)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n102: \t\t            params.tokenId, address(this), abi.encodeWithSelector(AutoRange.execute.selector, params)\n\n208: \t\t                address(this), // is sent to real recipient aftwards\n\n232: \t\t            nonfungiblePositionManager.safeTransferFrom(address(this), state.owner, state.newTokenId);\n```",
          "loc": [
            "[232](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L232)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L102)",
            "[208](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L208)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n138: \t\t            address(this),\n```",
          "loc": [
            "[138](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L138)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n106: \t\t        nonfungiblePositionManager.permit(address(this), tokenId, instructions.deadline, v, r, s);\n\n367: \t\t        if (from == address(this)) {\n\n376: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), from, tokenId, instructions.returnData);\n\n578: \t\t            SafeERC20.safeTransferFrom(token0, msg.sender, address(this), needed0);\n\n581: \t\t            SafeERC20.safeTransferFrom(token1, msg.sender, address(this), needed1);\n\n584: \t\t            SafeERC20.safeTransferFrom(otherToken, msg.sender, address(this), neededOther);\n\n618: \t\t            state.balanceBefore0 = token0.balanceOf(address(this));\n\n619: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed0);\n\n622: \t\t            state.balanceBefore1 = token1.balanceOf(address(this));\n\n623: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed1);\n\n626: \t\t            state.balanceBeforeOther = otherToken.balanceOf(address(this));\n\n627: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.neededOther);\n\n635: \t\t            if (token0.balanceOf(address(this)) - state.balanceBefore0 != state.needed0) {\n\n640: \t\t            if (token1.balanceOf(address(this)) - state.balanceBefore1 != state.needed1) {\n\n645: \t\t            if (otherToken.balanceOf(address(this)) - state.balanceBeforeOther != state.neededOther) {\n\n721: \t\t            address(this), // is sent to real recipient aftwards\n\n727: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), params.recipientNFT, tokenId, params.returnData);\n\n896: \t\t        uint256 balanceBefore0 = token0.balanceOf(address(this));\n\n897: \t\t        uint256 balanceBefore1 = token1.balanceOf(address(this));\n\n899: \t\t            INonfungiblePositionManager.CollectParams(tokenId, address(this), collectAmount0, collectAmount1)\n\n901: \t\t        uint256 balanceAfter0 = token0.balanceOf(address(this));\n\n902: \t\t        uint256 balanceAfter1 = token1.balanceOf(address(this));\n```",
          "loc": [
            "[581](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L581)",
            "[584](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L584)",
            "[618](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L618)",
            "[619](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L619)",
            "[622](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L622)",
            "[623](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L623)",
            "[626](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L626)",
            "[627](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L627)",
            "[635](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L635)",
            "[640](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L640)",
            "[645](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L645)",
            "[721](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L721)",
            "[727](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L727)",
            "[896](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L896)",
            "[897](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L897)",
            "[899](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L899)",
            "[901](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L901)",
            "[902](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L902)",
            "[578](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L578)",
            "[376](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L376)",
            "[367](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L367)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L106)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n64: \t\t        params.flashLoanPool.flash(address(this), isAsset0 ? liquidationCost : 0, !isAsset0 ? liquidationCost : 0, data);\n\n75: \t\t                data.tokenId, data.debtShares, data.swap0.amountIn, data.swap1.amountIn, address(this), \"\"\n\n89: \t\t            uint256 balance = data.swap0.tokenIn.balanceOf(address(this));\n\n95: \t\t            uint256 balance = data.swap1.tokenIn.balanceOf(address(this));\n\n101: \t\t            uint256 balance = data.asset.balanceOf(address(this));\n```",
          "loc": [
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L101)",
            "[64](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L64)",
            "[75](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L75)",
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L89)",
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L95)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n78: \t\t            uint256 balanceInBefore = params.tokenIn.balanceOf(address(this));\n\n79: \t\t            uint256 balanceOutBefore = params.tokenOut.balanceOf(address(this));\n\n104: \t\t            uint256 balanceInAfter = params.tokenIn.balanceOf(address(this));\n\n105: \t\t            uint256 balanceOutAfter = params.tokenOut.balanceOf(address(this));\n\n135: \t\t                address(this),\n```",
          "loc": [
            "[135](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L135)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L78)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L79)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L104)",
            "[105](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L105)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider using `solady`'s token contracts to save gas",
      "description": "They're written using heavily-optimized assembly, and gas usage will be cheaper than other solutions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit ERC20\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider using Solady's `FixedPointMathLib`",
      "description": "Saves gas, and works to avoid unnecessary [overflows](https://github.com/Vectorized/solady/blob/6cce088e69d6e46671f2f622318102bd5db77a65/src/utils/FixedPointMathLib.sol#L267).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n50: \t\t        return debt * Q96 / (cash + debt);\n\n67: \t\t            borrowRateX96 = (utilizationRateX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n\n69: \t\t            uint256 normalRateX96 = (kinkX96 * multiplierPerSecondX96 / Q96) + baseRatePerSecondX96;\n\n71: \t\t            borrowRateX96 = (excessUtilX96 * jumpMultiplierPerSecondX96 / Q96) + normalRateX96;\n\n74: \t\t        supplyRateX96 = utilizationRateX96 * borrowRateX96 / Q96;\n```",
          "loc": [
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L71)",
            "[74](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L74)",
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L50)",
            "[67](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L67)",
            "[69](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L69)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n120: \t\t        value = (price0X96 * (amount0 + fees0) / Q96 + price1X96 * (amount1 + fees1) / Q96) * Q96 / priceTokenX96;\n\n121: \t\t        feeValue = (price0X96 * fees0 / Q96 + price1X96 * fees1 / Q96) * Q96 / priceTokenX96;\n\n122: \t\t        price0X96 = price0X96 * Q96 / priceTokenX96;\n\n123: \t\t        price1X96 = price1X96 * Q96 / priceTokenX96;\n\n129: \t\t        uint256 derivedPoolPriceX96 = price0X96 * Q96 / price1X96;\n\n144: \t\t            ? (priceX96 - verifyPriceX96) * 10000 / priceX96\n\n145: \t\t            : (verifyPriceX96 - priceX96) * 10000 / verifyPriceX96;\n\n304: \t\t            chainlinkPriceX96 = (10 ** referenceTokenDecimals) * chainlinkPriceX96 * Q96 / chainlinkReferencePriceX96\n305: \t\t                / (10 ** feedConfig.tokenDecimals);\n\n342: \t\t        return uint256(answer) * Q96 / (10 ** feedConfig.feedDecimals);\n\n353: \t\t            poolTWAPPriceX96 = Q96 * Q96 / priceX96;\n```",
          "loc": [
            "[129](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L129)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L120)",
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L121)",
            "[122](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L122)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L123)",
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L144)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L145)",
            "[304-305](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L304-L305)",
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L342)",
            "[353](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L353)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n769: \t\t            _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up) * reserveProtectionFactorX32 / Q32;\n\n1054: \t\t                fees0 = uint128(liquidationValue * fees0 / feeValue);\n\n1055: \t\t                fees1 = uint128(liquidationValue * fees1 / feeValue);\n\n1060: \t\t                liquidity = uint128((liquidationValue - feeValue) * liquidity / (fullValue - feeValue));\n\n1100: \t\t        uint256 maxPenaltyValue = debt * (Q32 + MAX_LIQUIDATION_PENALTY_X32) / Q32;\n\n1105: \t\t            uint256 startLiquidationValue = debt * fullValue / collateralValue;\n\n1107: \t\t                (Q96 - ((fullValue - maxPenaltyValue) * Q96 / (startLiquidationValue - maxPenaltyValue)));\n\n1108: \t\t            uint256 penaltyX32 = MIN_LIQUIDATION_PENALTY_X32\n1109: \t\t                + (MAX_LIQUIDATION_PENALTY_X32 - MIN_LIQUIDATION_PENALTY_X32) * penaltyFractionX96 / Q96;\n\n1109: \t\t                + (MAX_LIQUIDATION_PENALTY_X32 - MIN_LIQUIDATION_PENALTY_X32) * penaltyFractionX96 / Q96;\n\n1111: \t\t            liquidationValue = debt * (Q32 + penaltyX32) / Q32;\n\n1116: \t\t            uint256 penaltyValue = fullValue * (Q32 - MAX_LIQUIDATION_PENALTY_X32) / Q32;\n\n1137: \t\t            newLendExchangeRateX96 = (totalLent - missing) * newLendExchangeRateX96 / totalLent;\n\n1187: \t\t            newDebtExchangeRateX96 = oldDebtExchangeRateX96\n1188: \t\t                + oldDebtExchangeRateX96 * (block.timestamp - lastRateUpdate) * borrowRateX96 / Q96;\n\n1188: \t\t                + oldDebtExchangeRateX96 * (block.timestamp - lastRateUpdate) * borrowRateX96 / Q96;\n\n1189: \t\t            newLendExchangeRateX96 = oldLendExchangeRateX96\n1190: \t\t                + oldLendExchangeRateX96 * (block.timestamp - lastRateUpdate) * supplyRateX96 / Q96;\n\n1190: \t\t                + oldLendExchangeRateX96 * (block.timestamp - lastRateUpdate) * supplyRateX96 / Q96;\n\n1228: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n1229: \t\t                        && _convertToAssets(tokenConfigs[token0].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1230: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1229: \t\t                        && _convertToAssets(tokenConfigs[token0].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1230: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1230: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1236: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n1237: \t\t                        && _convertToAssets(tokenConfigs[token1].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1238: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1237: \t\t                        && _convertToAssets(tokenConfigs[token1].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1238: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1238: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1250: \t\t            uint256 lendIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n1251: \t\t                * (Q32 + MAX_DAILY_LEND_INCREASE_X32) / Q32;\n\n1262: \t\t            uint256 debtIncreaseLimit = _convertToAssets(totalSupply(), newLendExchangeRateX96, Math.Rounding.Up)\n1263: \t\t                * (Q32 + MAX_DAILY_DEBT_INCREASE_X32) / Q32;\n```",
          "loc": [
            "[1109](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1109)",
            "[1111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1111)",
            "[1055](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1055)",
            "[1054](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1054)",
            "[769](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L769)",
            "[1100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1100)",
            "[1116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1116)",
            "[1137](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1137)",
            "[1187-1188](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1187-L1188)",
            "[1188](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1188)",
            "[1189-1190](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1189-L1190)",
            "[1190](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1190)",
            "[1228-1230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1228-L1230)",
            "[1229-1230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1229-L1230)",
            "[1230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1230)",
            "[1236-1238](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1236-L1238)",
            "[1237-1238](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1237-L1238)",
            "[1238](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1238)",
            "[1250-1251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1250-L1251)",
            "[1262-1263](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1262-L1263)",
            "[1105](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1105)",
            "[1060](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1060)",
            "[1107](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1107)",
            "[1108-1109](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1108-L1109)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n155: \t\t                state.amount0 -= state.feeAmount0 * params.rewardX64 / Q64;\n\n156: \t\t                state.amount1 -= state.feeAmount1 * params.rewardX64 / Q64;\n\n187: \t\t                    state.amount0 -= state.amount0 * params.rewardX64 / Q64;\n\n189: \t\t                    state.amount1 -= state.amount1 * params.rewardX64 / Q64;\n\n194: \t\t            state.amount0 -= (config.onlyFees ? state.feeAmount0 : state.amount0) * params.rewardX64 / Q64;\n\n195: \t\t            state.amount1 -= (config.onlyFees ? state.feeAmount1 : state.amount1) * params.rewardX64 / Q64;\n```",
          "loc": [
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L156)",
            "[155](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L155)",
            "[187](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L187)",
            "[189](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L189)",
            "[194](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L194)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L195)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n156: \t\t            state.maxAddAmount0 = state.amount0 * Q64 / (rewardX64 + Q64);\n\n157: \t\t            state.maxAddAmount1 = state.amount1 * Q64 / (rewardX64 + Q64);\n\n170: \t\t                state.amount0Fees = state.compounded0 * rewardX64 / Q64;\n\n171: \t\t                state.amount1Fees = state.compounded1 * rewardX64 / Q64;\n```",
          "loc": [
            "[156](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L156)",
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L157)",
            "[170](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L170)",
            "[171](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L171)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n143: \t\t            state.protocolReward0 = state.feeAmount0 * params.rewardX64 / Q64;\n\n144: \t\t            state.protocolReward1 = state.feeAmount1 * params.rewardX64 / Q64;\n\n195: \t\t            state.maxAddAmount0 = config.onlyFees ? state.amount0 : state.amount0 * Q64 / (params.rewardX64 + Q64);\n\n196: \t\t            state.maxAddAmount1 = config.onlyFees ? state.amount1 : state.amount1 * Q64 / (params.rewardX64 + Q64);\n\n236: \t\t                state.protocolReward0 = state.amountAdded0 * params.rewardX64 / Q64;\n\n237: \t\t                state.protocolReward1 = state.amountAdded1 * params.rewardX64 / Q64;\n```",
          "loc": [
            "[236](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L236)",
            "[237](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L237)",
            "[143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L143)",
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L144)",
            "[195](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L195)",
            "[196](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L196)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Reduce deployment costs by tweaking contracts' metadata",
      "description": "When solidity generates the bytecode for the smart contract to be deployed, it appends metadata about the compilation at the end of the bytecode.\n\nBy default, the solidity compiler appends metadata at the end of the “actual” initcode, which gets stored to the blockchain when the constructor finishes executing.\n\nConsider tweaking the metadata to avoid this unnecessary allocation. A full guide can be found [here](https://www.rareskills.io/post/solidity-metadata).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n10: \t\tcontract AutoExit is Automator {\n```",
          "loc": [
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n16: \t\tcontract AutoCompound is Automator, Multicall, ReentrancyGuard {\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n11: \t\tcontract AutoRange is Automator {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n12: \t\tcontract LeverageTransformer is Swapper {\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n15: \t\tcontract V3Utils is Swapper, IERC721Receiver {\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n17: \t\tabstract contract Swapper is IUniswapV3SwapCallback, IErrors {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Emitting constants wastes gas",
      "description": "Every event parameter costs `Glogdata` (**8 gas**) per byte. You can avoid this extra cost, in cases where you're emitting a constant, by creating a second version of the event, which doesn't have the parameter (and have users look to the contract's variables for its value instead), and using the new event in the cases shown below.",
      "gasSavings": 24,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit 0\n449: \t\t            emit Add(tokenId, owner, 0);\n```",
          "loc": [
            "[449](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L449)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit false, false, false, 0, 0, 0, 0, false, 0\n208: \t\t        emit PositionConfigured(params.tokenId, false, false, false, 0, 0, 0, 0, false, 0);\n```",
          "loc": [
            "[208](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L208)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit 0, 0, 0, 0, 0, 0, false, 0\n266: \t\t            emit PositionConfigured(params.tokenId, 0, 0, 0, 0, 0, 0, false, 0);\n```",
          "loc": [
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L266)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Update OpenZeppelin dependency to save gas",
      "description": "Every release contains new gas optimizations, use the latest version to take advantage of this.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n```",
          "loc": [
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L14)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n12: \t\timport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n13: \t\timport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n14: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n15: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n16: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n17: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n18: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L16)",
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L17)",
            "[18](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L18)",
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L13)",
            "[14](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L14)",
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L15)",
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n4: \t\timport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n```",
          "loc": [
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L6)",
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n4: \t\timport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/Multicall.sol\";\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n```",
          "loc": [
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L6)",
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n4: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\n5: \t\timport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L5)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n4: \t\timport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L4)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Function names can be optimized",
      "description": "Function that are `public`/`external` and `public` state variable names can be optimized to save gas.\n\nMethod IDs that have two leading zero bytes can save **128 gas** each during deployment, and renaming functions to have lower method IDs will save **22 gas** per call, per sorted position shifted. [Reference](https://blog.emn178.cc/en/post/solidity-gas-optimization-function-name/)",
      "gasSavings": 242,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n10: \t\tcontract AutoExit is Automator {\n```",
          "loc": [
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n19: \t\tabstract contract Automator is Swapper, Ownable {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n16: \t\tcontract AutoCompound is Automator, Multicall, ReentrancyGuard {\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n11: \t\tcontract AutoRange is Automator {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n12: \t\tcontract LeverageTransformer is Swapper {\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n15: \t\tcontract V3Utils is Swapper, IERC721Receiver {\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n17: \t\tabstract contract Swapper is IUniswapV3SwapCallback, IErrors {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `delete` instead of setting mapping/struct to 0 saves gas",
      "description": "Avoid an assignment by deleting the value instead of setting it to zero, as it's [cheaper](https://gist.github.com/DadeKuma/ea874815202fc77e9d81f81a047c1e5e).",
      "gasSavings": 25,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n366: \t\t            secondsAgos[0] = 0; // from (before)\n```",
          "loc": [
            "[366](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L366)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n542: \t\t        transformedTokenId = 0;\n\n1053: \t\t                liquidity = 0;\n```",
          "loc": [
            "[542](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L542)",
            "[1053](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1053)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n182: \t\t        secondsAgos[0] = 0; // from (before)\n```",
          "loc": [
            "[182](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L182)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n136: \t\t                        amountIn = 0;\n```",
          "loc": [
            "[136](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L136)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `bool` for storage incurs overhead",
      "description": "Booleans are more expensive than `uint256` or any type that takes up a full word because each write operation emits an extra SLOAD to first read the slot's contents, replace the bits taken up by the boolean, and then write back.\n\nThis is the compiler's defense against contract upgrades and pointer aliasing, and it cannot be disabled. Use `uint256(0) and uint256(1)` for `true/false` to avoid a Gwarmaccess (**100 gas**) for the extra `SLOAD`.",
      "gasSavings": 400,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n163: \t\t    mapping(address => bool) public transformerAllowList; // contracts allowed to transform positions (selected audited contracts e.g. V3Utils)\n\n164: \t\t    mapping(address => mapping(uint256 => mapping(address => bool))) public transformApprovals; // owners permissions for other addresses to call transform on owners behalf (e.g. AutoRange contract)\n```",
          "loc": [
            "[164](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L164)",
            "[163](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L163)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n34: \t\t    mapping(address => bool) public operators;\n\n35: \t\t    mapping(address => bool) public vaults;\n```",
          "loc": [
            "[34](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L34)",
            "[35](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L35)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiplication/division by two should use bit shifting",
      "description": "`X * 2` is equivalent to `X << 1` and `X / 2` is the same as `X >> 1`.\n\nThe `MUL` and `DIV` opcodes cost 5 gas, whereas `SHL` and `SHR` only cost 3 gas.",
      "gasSavings": 80,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n16: \t\t    uint256 public constant MAX_MULTIPLIER_X96 = Q96 * 2; // 200%\n\n16: \t\t    uint256 public constant MAX_MULTIPLIER_X96 = Q96 * 2; // 200%\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L16)",
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n38: \t\t    uint32 public constant MIN_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 2 / 100); // 2%\n\n38: \t\t    uint32 public constant MIN_LIQUIDATION_PENALTY_X32 = uint32(Q32 * 2 / 100); // 2%\n```",
          "loc": [
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L38)",
            "[38](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L38)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`x += y` is more expensive than `x = x + y` for state variables",
      "description": "Not inlining costs 20 to 40 gas because of two extra JUMP instructions and additional stack operations needed for function calls.",
      "gasSavings": 140,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n569: \t\t        debtSharesTotal += shares;\n\n577: \t\t            dailyDebtIncreaseLimitLeft -= assets;\n\n731: \t\t        debtSharesTotal -= debtShares;\n\n913: \t\t            dailyLendIncreaseLimitLeft -= assets;\n\n949: \t\t        dailyLendIncreaseLimitLeft += assets;\n\n992: \t\t        debtSharesTotal -= shares;\n\n995: \t\t        dailyDebtIncreaseLimitLeft += assets;\n```",
          "loc": [
            "[949](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L949)",
            "[992](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L992)",
            "[731](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L731)",
            "[577](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L577)",
            "[569](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L569)",
            "[995](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L995)",
            "[913](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L913)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use of `+=` is cheaper for mappings",
      "description": "Using `+=` for mappings saves 40 gas due to not having to recalculate the mapping's value's hash.",
      "gasSavings": 40,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n250: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] + amount;\n```",
          "loc": [
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L250)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Mappings are cheaper to use than storage arrays",
      "description": "When using storage arrays, solidity adds an internal lookup of the array's length (a **Gcoldsload 2100 gas**) to ensure you don't read past the array's end.\n\nYou can avoid this lookup by using a mapping and storing the number of entries in a separate storage variable. In cases where you have sentinel values (e.g. 'zero' means invalid), you can avoid length checks.",
      "gasSavings": 2100,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n157: \t\t    mapping(address => uint256[]) private ownedTokens; // Mapping from owner address to list of owned token IDs\n```",
          "loc": [
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L157)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use a more recent version of Solidity",
      "description": "v0.8.2 has a simple compiler automatic inlining\n\nv0.8.3 has a better struct packing and cheaper multiple storage reads\n\nv0.8.4 has custom errors, which are cheaper at deployment than revert/require strings\n\nv0.8.10 has external calls skip contract existence checks if the external call has a return value",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n2: \t\tpragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`SafeMath` usage with Solidity version >`0.8.0`",
      "description": "Version `0.8.0` introduces internal overflow checks, so using `SafeMath` is redundant and adds overhead.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n6: \t\timport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n```",
          "loc": [
            "[6](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L6)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Constructors can be marked `payable`",
      "description": "`payable` functions cost less gas to execute, since the compiler does not have to add extra checks to ensure that a payment wasn't provided.\n\nA `constructor` can safely be marked as `payable`, since only the deployer would be able to pass funds, and the project itself would not pass any funds.",
      "gasSavings": 231,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n33: \t\t    constructor(\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n74: \t\t    constructor(\n```",
          "loc": [
            "[74](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L74)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n169: \t\t    constructor(\n```",
          "loc": [
            "[169](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L169)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n33: \t\t    constructor(\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n41: \t\t    constructor(\n```",
          "loc": [
            "[41](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L41)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n37: \t\t    constructor(\n```",
          "loc": [
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L37)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n25: \t\t    constructor(\n```",
          "loc": [
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L25)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n13: \t\t    constructor(INonfungiblePositionManager _nonfungiblePositionManager, address _zeroxRouter, address _universalRouter)\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n31: \t\t    constructor(\n```",
          "loc": [
            "[31](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L31)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n24: \t\t    constructor(INonfungiblePositionManager _nonfungiblePositionManager, address _zeroxRouter, address _universalRouter)\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n37: \t\t    constructor(\n```",
          "loc": [
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L37)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Nesting `if` statements that use `&&` saves gas",
      "description": "Using the `&&` operator on a single `if` [costs more gas](https://gist.github.com/DadeKuma/931ce6794a050201ec6544dbcc31316c) than using two nested `if`.",
      "gasSavings": 690,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n250: \t\t        if (msg.sender != emergencyAdmin && msg.sender != owner()) {\n```",
          "loc": [
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L250)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n515: \t\t        if (loanOwner != msg.sender && !transformApprovals[loanOwner][tokenId][msg.sender]) {\n\n561: \t\t        if (!isTransformMode && tokenOwner[tokenId] != msg.sender && address(this) != msg.sender) {\n\n814: \t\t        if (msg.sender != emergencyAdmin && msg.sender != owner()) {\n\n1228: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n1229: \t\t                        && _convertToAssets(tokenConfigs[token0].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1230: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n\n1236: \t\t                    collateralValueLimitFactorX32 < type(uint32).max\n1237: \t\t                        && _convertToAssets(tokenConfigs[token1].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n1238: \t\t                            > lentAssets * collateralValueLimitFactorX32 / Q32\n```",
          "loc": [
            "[1236-1238](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1236-L1238)",
            "[814](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L814)",
            "[1228-1230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1228-L1230)",
            "[561](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L561)",
            "[515](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L515)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n113: \t\t            config.onlyFees && params.rewardX64 > config.maxRewardX64\n114: \t\t                || !config.onlyFees && params.rewardX64 > config.maxRewardX64\n\n135: \t\t        if (config.token0TriggerTick <= state.tick && state.tick < config.token1TriggerTick) {\n```",
          "loc": [
            "[113-114](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L113-L114)",
            "[135](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L135)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n219: \t\t        if (address(weth) == address(token) && unwrap) {\n```",
          "loc": [
            "[219](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L219)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n102: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n```",
          "loc": [
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n112: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n\n123: \t\t            config.onlyFees && params.rewardX64 > config.maxRewardX64\n124: \t\t                || !config.onlyFees && params.rewardX64 > config.maxRewardX64\n\n149: \t\t        if (params.swap0To1 && params.amountIn > state.amount0 || !params.swap0To1 && params.amountIn > state.amount1) {\n\n175: \t\t                baseTick + config.lowerTickDelta == state.tickLower\n176: \t\t                    && baseTick + config.upperTickDelta == state.tickUpper\n```",
          "loc": [
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L112)",
            "[123-124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L123-L124)",
            "[149](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L149)",
            "[175-176](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L175-L176)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n93: \t\t        if (token != token0 && token != token1 && amount > 0) {\n\n146: \t\t        if (params.amountIn0 > 0 && token != token0) {\n\n155: \t\t        if (params.amountIn1 > 0 && token != token1) {\n\n169: \t\t        if (amount0 > 0 && token != token0) {\n\n172: \t\t        if (amount1 > 0 && token != token1) {\n```",
          "loc": [
            "[172](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L172)",
            "[169](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L169)",
            "[155](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L155)",
            "[146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L146)",
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L93)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n342: \t\t            if (targetAmount != 0 && instructions.targetToken != address(0)) {\n\n697: \t\t            amountOther > amountAddedOther && address(otherToken) != address(0) && token0 != otherToken\n698: \t\t                && token1 != otherToken\n\n865: \t\t        if (address(weth) == address(token) && unwrap) {\n```",
          "loc": [
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L342)",
            "[865](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L865)",
            "[697-698](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L697-L698)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n77: \t\t        if (params.amountIn != 0 && params.swapData.length != 0 && address(params.tokenOut) != address(0)) {\n```",
          "loc": [
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L77)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Counting down when iterating, saves gas",
      "description": "Counting down saves **6 gas** per loop, since checks for zero are more efficient than checks against any other value.",
      "gasSavings": 12,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n111: \t\t        for (; i < count; ++i) {\n```",
          "loc": [
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L111)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n233: \t\t        for (; i < count; ++i) {\n```",
          "loc": [
            "[233](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L233)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`do-while` is cheaper than `for`-loops when the initial check can be skipped",
      "description": "Example:\n\n```solidity\nfor (uint256 i; i < len; ++i){ ... } -> do { ...; ++i } while (i < len);\n```",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n111: \t\t        for (; i < count; ++i) {\n```",
          "loc": [
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L111)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n233: \t\t        for (; i < count; ++i) {\n```",
          "loc": [
            "[233](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L233)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Lack of `unchecked` in loops",
      "description": "Use `unchecked` to increment the loop variable as it can save gas:\n\n```solidity\nfor(uint256 i; i < length;) {\n\tunchecked{\n\t\t++i;\n\t}\n}\n```",
      "gasSavings": 120,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n111: \t\t        for (; i < count; ++i) {\n```",
          "loc": [
            "[111](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L111)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n233: \t\t        for (; i < count; ++i) {\n```",
          "loc": [
            "[233](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L233)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`uint` comparison with zero can be cheaper",
      "description": "Checking for `!= 0` is cheaper than `> 0` for unsigned integers.",
      "gasSavings": 224,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n431: \t\t        if (state.liquidity > 0) {\n```",
          "loc": [
            "[431](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L431)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n443: \t\t            if (data.length > 0) {\n\n505: \t\t        if (transformedTokenId > 0) {\n\n552: \t\t            transformedTokenId > 0 && transformedTokenId == tokenId && transformerAllowList[msg.sender];\n\n615: \t\t        if (transformedTokenId > 0) {\n\n687: \t\t        if (transformedTokenId > 0) {\n\n712: \t\t        if (state.reserveCost > 0) {\n\n717: \t\t        if (params.permitData.length > 0) {\n\n778: \t\t        if (amount > 0) {\n\n893: \t\t        if (permitData.length > 0) {\n\n977: \t\t        if (assets > 0) {\n\n978: \t\t            if (permitData.length > 0) {\n\n1064: \t\t        if (liquidity > 0) {\n\n1186: \t\t        if (lastRateUpdate > 0) {\n```",
          "loc": [
            "[778](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L778)",
            "[443](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L443)",
            "[505](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L505)",
            "[552](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L552)",
            "[615](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L615)",
            "[687](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L687)",
            "[712](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L712)",
            "[717](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L717)",
            "[893](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L893)",
            "[977](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L977)",
            "[978](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L978)",
            "[1064](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1064)",
            "[1186](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1186)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n199: \t\t        if (state.amount0 > 0) {\n\n202: \t\t        if (state.amount1 > 0) {\n```",
          "loc": [
            "[202](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L202)",
            "[199](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L199)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n113: \t\t            if (balance > 0) {\n\n129: \t\t        if (balance > 0) {\n\n200: \t\t        if (liquidity > 0) {\n```",
          "loc": [
            "[129](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L129)",
            "[200](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L200)",
            "[113](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L113)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n123: \t\t        if (state.amount0 > 0 || state.amount1 > 0) {\n\n123: \t\t        if (state.amount0 > 0 || state.amount1 > 0) {\n\n127: \t\t            if (amountIn > 0) {\n\n133: \t\t                if (tSecs > 0) {\n\n140: \t\t                if (amountIn > 0) {\n\n160: \t\t            if (state.maxAddAmount0 > 0 || state.maxAddAmount1 > 0) {\n\n160: \t\t            if (state.maxAddAmount0 > 0 || state.maxAddAmount1 > 0) {\n\n212: \t\t        if (balance0 > 0) {\n\n216: \t\t        if (balance1 > 0) {\n```",
          "loc": [
            "[140](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L140)",
            "[160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L160)",
            "[160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L160)",
            "[212](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L212)",
            "[216](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L216)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L123)",
            "[123](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L123)",
            "[127](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L127)",
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L133)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n243: \t\t            if (state.amount0 - state.amountAdded0 > 0) {\n\n246: \t\t            if (state.amount1 - state.amountAdded1 > 0) {\n```",
          "loc": [
            "[246](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L246)",
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L243)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n52: \t\t        if (params.amountIn0 > 0) {\n\n64: \t\t        if (params.amountIn1 > 0) {\n\n93: \t\t        if (token != token0 && token != token1 && amount > 0) {\n\n146: \t\t        if (params.amountIn0 > 0 && token != token0) {\n\n155: \t\t        if (params.amountIn1 > 0 && token != token1) {\n\n169: \t\t        if (amount0 > 0 && token != token0) {\n\n172: \t\t        if (amount1 > 0 && token != token1) {\n```",
          "loc": [
            "[155](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L155)",
            "[169](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L169)",
            "[172](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L172)",
            "[93](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L93)",
            "[146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L146)",
            "[52](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L52)",
            "[64](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L64)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n402: \t\t        if (params.permitData.length > 0) {\n\n476: \t\t        if (params.permitData.length > 0) {\n\n539: \t\t        if (params.permitData.length > 0) {\n\n577: \t\t        if (needed0 > 0) {\n\n580: \t\t        if (needed1 > 0) {\n\n583: \t\t        if (neededOther > 0) {\n\n617: \t\t        if (state.needed0 > 0) {\n\n621: \t\t        if (state.needed1 > 0) {\n\n625: \t\t        if (state.neededOther > 0) {\n\n634: \t\t        if (state.needed0 > 0) {\n\n639: \t\t        if (state.needed1 > 0) {\n\n644: \t\t        if (state.neededOther > 0) {\n```",
          "loc": [
            "[577](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L577)",
            "[583](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L583)",
            "[617](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L617)",
            "[621](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L621)",
            "[625](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L625)",
            "[634](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L634)",
            "[639](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L639)",
            "[644](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L644)",
            "[402](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L402)",
            "[539](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L539)",
            "[580](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L580)",
            "[476](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L476)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n90: \t\t            if (balance > 0) {\n\n96: \t\t            if (balance > 0) {\n\n105: \t\t            if (balance > 0) {\n```",
          "loc": [
            "[90](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L90)",
            "[96](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L96)",
            "[105](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L105)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n133: \t\t        if (params.amountIn > 0) {\n\n157: \t\t        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n\n157: \t\t        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n\n166: \t\t        uint256 amountToPay = amount0Delta > 0 ? uint256(amount0Delta) : uint256(amount1Delta);\n```",
          "loc": [
            "[166](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L166)",
            "[133](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L133)",
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L157)",
            "[157](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L157)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to check for `address(0)`",
      "description": "[A simple zero address check](https://medium.com/@kalexotsu/solidity-assembly-checking-if-an-address-is-0-efficiently-d2bfe071331) can be written in assembly to save some gas.",
      "gasSavings": 84,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n792: \t\t                || transformer == address(nonfungiblePositionManager)\n\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n\n791: \t\t            transformer == address(0) || transformer == address(this) || transformer == asset\n```",
          "loc": [
            "[791](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L791)",
            "[791-792](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L791-L792)",
            "[791](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L791)",
            "[791](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L791)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n236: \t\t        if (vault != address(0)) {\n```",
          "loc": [
            "[236](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L236)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n342: \t\t            if (targetAmount != 0 && instructions.targetToken != address(0)) {\n\n342: \t\t            if (targetAmount != 0 && instructions.targetToken != address(0)) {\n\n697: \t\t            amountOther > amountAddedOther && address(otherToken) != address(0) && token0 != otherToken\n698: \t\t                && token1 != otherToken\n\n697: \t\t            amountOther > amountAddedOther && address(otherToken) != address(0) && token0 != otherToken\n\n697: \t\t            amountOther > amountAddedOther && address(otherToken) != address(0) && token0 != otherToken\n\n697: \t\t            amountOther > amountAddedOther && address(otherToken) != address(0) && token0 != otherToken\n\n805: \t\t        } else if (address(params.swapSourceToken) != address(0)) {\n```",
          "loc": [
            "[697](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L697)",
            "[697](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L697)",
            "[805](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L805)",
            "[697](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L697)",
            "[697-698](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L697-L698)",
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L342)",
            "[342](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L342)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n77: \t\t        if (params.amountIn != 0 && params.swapData.length != 0 && address(params.tokenOut) != address(0)) {\n\n77: \t\t        if (params.amountIn != 0 && params.swapData.length != 0 && address(params.tokenOut) != address(0)) {\n```",
          "loc": [
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L77)",
            "[77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L77)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use scratch space for building calldata with assembly",
      "description": "If an external call's calldata can fit into two or fewer words, use the scratch space to build the calldata, rather than allowing Solidity to do a memory expansion.",
      "gasSavings": 27280,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n80: \t\t        factory = _nonfungiblePositionManager.factory();\n\n82: \t\t        referenceTokenDecimals = IERC20Metadata(_referenceToken).decimals();\n\n215: \t\t        uint8 feedDecimals = feed.decimals();\n\n216: \t\t        uint8 tokenDecimals = IERC20Metadata(token).decimals();\n\n225: \t\t            address token0 = pool.token0();\n\n226: \t\t            address token1 = pool.token1();\n\n337: \t\t        (, int256 answer,, uint256 updatedAt,) = feedConfig.feed.latestRoundData();\n\n363: \t\t            (sqrtPriceX96,,,,,,) = pool.slot0();\n\n368: \t\t            (int56[] memory tickCumulatives,) = pool.observe(secondsAgos); // pool observe may fail when there is not enough history available (only use pool with enough history!)\n\n370: \t\t            sqrtPriceX96 = TickMath.getSqrtRatioAtTick(tick);\n\n409: \t\t        ) = nonfungiblePositionManager.positions(tokenId);\n\n422: \t\t        (state.sqrtPriceX96, state.tick,,,,,) = state.pool.slot0();\n\n432: \t\t            state.sqrtPriceX96Lower = TickMath.getSqrtRatioAtTick(state.tickLower);\n\n433: \t\t            state.sqrtPriceX96Upper = TickMath.getSqrtRatioAtTick(state.tickUpper);\n\n455: \t\t            position.pool.feeGrowthGlobal0X128(),\n\n456: \t\t            position.pool.feeGrowthGlobal1X128()\n\n480: \t\t        (,, uint256 lowerFeeGrowthOutside0X128, uint256 lowerFeeGrowthOutside1X128,,,,) = pool.ticks(tickLower);\n\n481: \t\t        (,, uint256 upperFeeGrowthOutside0X128, uint256 upperFeeGrowthOutside1X128,,,,) = pool.ticks(tickUpper);\n\n500: \t\t        return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n```",
          "loc": [
            "[225](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L225)",
            "[226](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L226)",
            "[337](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L337)",
            "[363](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L363)",
            "[368](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L368)",
            "[370](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L370)",
            "[409](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L409)",
            "[422](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L422)",
            "[432](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L432)",
            "[433](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L433)",
            "[455](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L455)",
            "[456](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L456)",
            "[480](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L480)",
            "[481](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L481)",
            "[500](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L500)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L80)",
            "[215](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L215)",
            "[82](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L82)",
            "[216](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L216)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n179: \t\t        assetDecimals = IERC20Metadata(_asset).decimals();\n\n181: \t\t        factory = IUniswapV3Factory(_nonfungiblePositionManager.factory());\n\n285: \t\t        return IERC20(asset).balanceOf(address(this));\n\n520: \t\t        nonfungiblePositionManager.approve(transformer, tokenId);\n\n522: \t\t        (bool success,) = transformer.call(data);\n\n531: \t\t        address owner = nonfungiblePositionManager.ownerOf(tokenId);\n\n537: \t\t        nonfungiblePositionManager.approve(address(0), tokenId);\n\n627: \t\t        (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(\n628: \t\t            INonfungiblePositionManager.DecreaseLiquidityParams(\n629: \t\t                params.tokenId, params.liquidity, params.amount0Min, params.amount1Min, params.deadline\n630: \t\t            )\n631: \t\t        );\n\n636: \t\t            params.feeAmount0 == type(uint128).max ? type(uint128).max : SafeCast.toUint128(amount0 + params.feeAmount0),\n\n637: \t\t            params.feeAmount1 == type(uint128).max ? type(uint128).max : SafeCast.toUint128(amount1 + params.feeAmount1)\n\n640: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(collectParams);\n\n722: \t\t                ISignatureTransfer.SignatureTransferDetails(address(this), state.liquidatorCost),\n\n897: \t\t                permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n\n982: \t\t                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n\n1045: \t\t            (,,,,,,, liquidity,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n1049: \t\t            (,,, liquidity,,, fees0, fees1) = oracle.getPositionBreakdown(tokenId);\n\n1065: \t\t            nonfungiblePositionManager.decreaseLiquidity(\n1066: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(tokenId, liquidity, 0, 0, block.timestamp)\n1067: \t\t            );\n\n1070: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(\n1071: \t\t            INonfungiblePositionManager.CollectParams(tokenId, recipient, fees0, fees1)\n1072: \t\t        );\n\n1144: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n1179: \t\t        (uint256 borrowRateX96, uint256 supplyRateX96) = interestRateModel.getRatesPerSecondX96(available, debt);\n\n1181: \t\t        supplyRateX96 = supplyRateX96.mulDiv(Q32 - reserveFactorX32, Q32);\n\n1213: \t\t            (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n1217: \t\t                tokenConfigs[token0].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n\n1218: \t\t                tokenConfigs[token1].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n\n1220: \t\t                tokenConfigs[token0].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n\n1221: \t\t                tokenConfigs[token1].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n\n1275: \t\t        (fullValue, feeValue,,) = oracle.getValue(tokenId, address(asset));\n\n1277: \t\t        collateralValue = fullValue.mulDiv(collateralFactorX32, Q32);\n```",
          "loc": [
            "[897](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L897)",
            "[179](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L179)",
            "[181](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L181)",
            "[285](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L285)",
            "[520](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L520)",
            "[522](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L522)",
            "[531](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L531)",
            "[537](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L537)",
            "[627-631](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L627-L631)",
            "[636](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L636)",
            "[637](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L637)",
            "[640](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L640)",
            "[722](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L722)",
            "[982](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L982)",
            "[1045](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1045)",
            "[1049](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1049)",
            "[1065-1067](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1065-L1067)",
            "[1070-1072](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1070-L1072)",
            "[1144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1144)",
            "[1179](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1179)",
            "[1181](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1181)",
            "[1213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1213)",
            "[1217](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1217)",
            "[1218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1218)",
            "[1220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1220)",
            "[1221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1221)",
            "[1275](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1275)",
            "[1277](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1277)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n121: \t\t            nonfungiblePositionManager.positions(params.tokenId);\n\n132: \t\t        (, state.tick,,,,,) = state.pool.slot0();\n\n198: \t\t        state.owner = nonfungiblePositionManager.ownerOf(params.tokenId);\n\n219: \t\t        address owner = nonfungiblePositionManager.ownerOf(tokenId);\n```",
          "loc": [
            "[121](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L121)",
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L132)",
            "[198](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L198)",
            "[219](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L219)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n112: \t\t            uint256 balance = IERC20(tokens[i]).balanceOf(address(this));\n\n148: \t\t        (sqrtPriceX96, currentTick,,,,,) = pool.slot0();\n\n186: \t\t        try pool.observe(secondsAgos) returns (int56[] memory tickCumulatives, uint160[] memory) {\n\n202: \t\t            (feeAmount0, feeAmount1) = nonfungiblePositionManager.decreaseLiquidity(\n203: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(\n204: \t\t                    tokenId, liquidity, amountRemoveMin0, amountRemoveMin1, deadline\n205: \t\t                )\n206: \t\t            );\n\n208: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(\n209: \t\t            INonfungiblePositionManager.CollectParams(tokenId, address(this), type(uint128).max, type(uint128).max)\n210: \t\t        );\n\n220: \t\t            weth.withdraw(amount);\n\n240: \t\t            owner = IVault(vault).ownerOf(tokenId);\n\n242: \t\t            owner = nonfungiblePositionManager.ownerOf(tokenId);\n```",
          "loc": [
            "[148](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L148)",
            "[242](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L242)",
            "[240](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L240)",
            "[220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L220)",
            "[208-210](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L208-L210)",
            "[202-206](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L202-L206)",
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L112)",
            "[186](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L186)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n108: \t\t        (state.amount0, state.amount1) = nonfungiblePositionManager.collect(\n109: \t\t            INonfungiblePositionManager.CollectParams(\n110: \t\t                params.tokenId, address(this), type(uint128).max, type(uint128).max\n111: \t\t            )\n112: \t\t        );\n\n116: \t\t            nonfungiblePositionManager.positions(params.tokenId);\n\n129: \t\t                (state.sqrtPriceX96, state.tick,,,,,) = pool.slot0();\n\n163: \t\t                (, state.compounded0, state.compounded1) = nonfungiblePositionManager.increaseLiquidity(\n164: \t\t                    INonfungiblePositionManager.IncreaseLiquidityParams(\n165: \t\t                        params.tokenId, state.maxAddAmount0, state.maxAddAmount1, 0, 0, block.timestamp\n166: \t\t                    )\n167: \t\t                );\n\n201: \t\t        address owner = nonfungiblePositionManager.ownerOf(tokenId);\n\n203: \t\t            owner = IVault(owner).ownerOf(tokenId);\n\n209: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n278: \t\t        uint256 allowance0 = IERC20(token0).allowance(address(this), address(nonfungiblePositionManager));\n\n282: \t\t        uint256 allowance1 = IERC20(token1).allowance(address(this), address(nonfungiblePositionManager));\n```",
          "loc": [
            "[209](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L209)",
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L116)",
            "[108-112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L108-L112)",
            "[203](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L203)",
            "[201](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L201)",
            "[163-167](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L163-L167)",
            "[129](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L129)",
            "[282](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L282)",
            "[278](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L278)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n131: \t\t            nonfungiblePositionManager.positions(params.tokenId);\n\n202: \t\t                SafeCast.toInt24(baseTick + config.lowerTickDelta), // reverts if out of valid range\n\n203: \t\t                SafeCast.toInt24(baseTick + config.upperTickDelta), // reverts if out of valid range\n\n217: \t\t            (state.newTokenId,, state.amountAdded0, state.amountAdded1) = nonfungiblePositionManager.mint(mintParams);\n\n223: \t\t            state.owner = nonfungiblePositionManager.ownerOf(params.tokenId);\n\n228: \t\t                state.realOwner = IVault(state.owner).ownerOf(params.tokenId);\n\n308: \t\t            int24 spacing = IUniswapV3Factory(factory).feeAmountTickSpacing(fee);\n```",
          "loc": [
            "[131](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L131)",
            "[202](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L202)",
            "[203](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L203)",
            "[217](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L217)",
            "[223](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L223)",
            "[228](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L228)",
            "[308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L308)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n43: \t\t        address token = IVault(msg.sender).asset();\n\n45: \t\t        IVault(msg.sender).borrow(params.tokenId, amount);\n\n47: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(params.tokenId);\n\n84: \t\t        (, uint256 added0, uint256 added1) = nonfungiblePositionManager.increaseLiquidity(increaseLiquidityParams);\n\n124: \t\t        address token = IVault(msg.sender).asset();\n\n125: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(params.tokenId);\n\n134: \t\t        (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(decreaseLiquidityParams);\n\n139: \t\t            params.feeAmount0 == type(uint128).max ? type(uint128).max : SafeCast.toUint128(amount0 + params.feeAmount0),\n\n140: \t\t            params.feeAmount1 == type(uint128).max ? type(uint128).max : SafeCast.toUint128(amount1 + params.feeAmount1)\n\n142: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(collectParams);\n```",
          "loc": [
            "[124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L124)",
            "[125](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L125)",
            "[134](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L134)",
            "[84](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L84)",
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L47)",
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L45)",
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L43)",
            "[142](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L142)",
            "[140](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L140)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L139)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n102: \t\t        if (nonfungiblePositionManager.ownerOf(tokenId) != msg.sender) {\n\n116: \t\t        (,, address token0, address token1,,,, uint128 liquidity,,,,) = nonfungiblePositionManager.positions(tokenId);\n\n135: \t\t                : (amount0 + instructions.feeAmount0).toUint128(),\n\n138: \t\t                : (amount1 + instructions.feeAmount1).toUint128()\n\n537: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(params.tokenId);\n\n618: \t\t            state.balanceBefore0 = token0.balanceOf(address(this));\n\n619: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed0);\n\n622: \t\t            state.balanceBefore1 = token1.balanceOf(address(this));\n\n623: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed1);\n\n626: \t\t            state.balanceBeforeOther = otherToken.balanceOf(address(this));\n\n627: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.neededOther);\n\n635: \t\t            if (token0.balanceOf(address(this)) - state.balanceBefore0 != state.needed0) {\n\n640: \t\t            if (token1.balanceOf(address(this)) - state.balanceBefore1 != state.needed1) {\n\n645: \t\t            if (otherToken.balanceOf(address(this)) - state.balanceBeforeOther != state.neededOther) {\n\n726: \t\t        (tokenId, liquidity, added0, added1) = nonfungiblePositionManager.mint(mintParams);\n\n771: \t\t        (liquidity, added0, added1) = nonfungiblePositionManager.increaseLiquidity(increaseLiquidityParams);\n\n866: \t\t            weth.withdraw(amount);\n\n885: \t\t            (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(\n886: \t\t                INonfungiblePositionManager.DecreaseLiquidityParams(tokenId, liquidity, token0Min, token1Min, deadline)\n887: \t\t            );\n\n896: \t\t        uint256 balanceBefore0 = token0.balanceOf(address(this));\n\n897: \t\t        uint256 balanceBefore1 = token1.balanceOf(address(this));\n\n898: \t\t        (amount0, amount1) = nonfungiblePositionManager.collect(\n899: \t\t            INonfungiblePositionManager.CollectParams(tokenId, address(this), collectAmount0, collectAmount1)\n900: \t\t        );\n\n901: \t\t        uint256 balanceAfter0 = token0.balanceOf(address(this));\n\n902: \t\t        uint256 balanceAfter1 = token1.balanceOf(address(this));\n```",
          "loc": [
            "[901](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L901)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L102)",
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L116)",
            "[135](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L135)",
            "[138](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L138)",
            "[537](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L537)",
            "[618](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L618)",
            "[619](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L619)",
            "[622](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L622)",
            "[623](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L623)",
            "[626](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L626)",
            "[627](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L627)",
            "[635](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L635)",
            "[640](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L640)",
            "[645](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L645)",
            "[726](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L726)",
            "[771](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L771)",
            "[866](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L866)",
            "[885-887](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L885-L887)",
            "[896](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L896)",
            "[897](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L897)",
            "[898-900](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L898-L900)",
            "[902](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L902)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n42: \t\t        (,,, uint256 liquidationCost,) = params.vault.loanInfo(params.tokenId);\n\n47: \t\t        (,, address token0, address token1,,,,,,,,) = nonfungiblePositionManager.positions(params.tokenId);\n\n48: \t\t        address asset = params.vault.asset();\n\n50: \t\t        bool isAsset0 = params.flashLoanPool.token0() == asset;\n\n73: \t\t        data.vault.liquidate(\n74: \t\t            IVault.LiquidateParams(\n75: \t\t                data.tokenId, data.debtShares, data.swap0.amountIn, data.swap1.amountIn, address(this), \"\"\n76: \t\t            )\n77: \t\t        );\n\n89: \t\t            uint256 balance = data.swap0.tokenIn.balanceOf(address(this));\n\n95: \t\t            uint256 balance = data.swap1.tokenIn.balanceOf(address(this));\n\n101: \t\t            uint256 balance = data.asset.balanceOf(address(this));\n```",
          "loc": [
            "[73-77](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L73-L77)",
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L89)",
            "[95](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L95)",
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L101)",
            "[50](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L50)",
            "[48](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L48)",
            "[47](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L47)",
            "[42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L42)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n42: \t\t        weth = IWETH9(_nonfungiblePositionManager.WETH9());\n\n43: \t\t        factory = _nonfungiblePositionManager.factory();\n\n78: \t\t            uint256 balanceInBefore = params.tokenIn.balanceOf(address(this));\n\n79: \t\t            uint256 balanceOutBefore = params.tokenOut.balanceOf(address(this));\n\n89: \t\t                (bool success,) = zeroxRouter.call(data.data);\n\n104: \t\t            uint256 balanceInAfter = params.tokenIn.balanceOf(address(this));\n\n105: \t\t            uint256 balanceOutAfter = params.tokenOut.balanceOf(address(this));\n\n172: \t\t        return IUniswapV3Pool(PoolAddress.computeAddress(address(factory), PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n```",
          "loc": [
            "[89](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L89)",
            "[104](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L104)",
            "[105](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L105)",
            "[172](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L172)",
            "[42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L42)",
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L43)",
            "[78](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L78)",
            "[79](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L79)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to validate `msg.sender`",
      "description": "It is possible to use assembly to efficiently validate `msg.sender` with the least amount of opcodes. For more details check the [following report](https://code4rena.com/reports/2023-05-juicebox#g-06-use-assembly-to-validate-msgsender).",
      "gasSavings": 312,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n250: \t\t        if (msg.sender != emergencyAdmin && msg.sender != owner()) {\n```",
          "loc": [
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L250)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n419: \t\t        if (msg.sender != owner) {\n\n435: \t\t        if (msg.sender != address(nonfungiblePositionManager) || from == address(this)) {\n\n484: \t\t        if (tokenOwner[tokenId] != msg.sender) {\n\n515: \t\t        if (loanOwner != msg.sender && !transformApprovals[loanOwner][tokenId][msg.sender]) {\n\n561: \t\t        if (!isTransformMode && tokenOwner[tokenId] != msg.sender && address(this) != msg.sender) {\n\n621: \t\t        if (owner != msg.sender) {\n\n814: \t\t        if (msg.sender != emergencyAdmin && msg.sender != owner()) {\n\n935: \t\t        if (msg.sender != owner) {\n```",
          "loc": [
            "[561](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L561)",
            "[621](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L621)",
            "[814](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L814)",
            "[935](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L935)",
            "[515](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L515)",
            "[435](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L435)",
            "[484](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L484)",
            "[419](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L419)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n101: \t\t        if (!operators[msg.sender]) {\n\n220: \t\t        if (owner != msg.sender) {\n```",
          "loc": [
            "[220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L220)",
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L101)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n105: \t\t        if (msg.sender != withdrawer) {\n\n124: \t\t        if (msg.sender != withdrawer) {\n\n232: \t\t        if (vaults[msg.sender]) {\n\n245: \t\t        if (owner != msg.sender) {\n\n252: \t\t        if (msg.sender != address(weth)) {\n```",
          "loc": [
            "[105](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L105)",
            "[124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L124)",
            "[232](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L232)",
            "[245](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L245)",
            "[252](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L252)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n88: \t\t        if (!operators[msg.sender] || !vaults[vault]) {\n\n102: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n\n205: \t\t        if (owner != msg.sender) {\n\n228: \t\t        if (msg.sender != withdrawer) {\n```",
          "loc": [
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L88)",
            "[228](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L228)",
            "[205](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L205)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L102)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n98: \t\t        if (!operators[msg.sender] || !vaults[vault]) {\n\n112: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n```",
          "loc": [
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L98)",
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L112)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n102: \t\t        if (nonfungiblePositionManager.ownerOf(tokenId) != msg.sender) {\n\n362: \t\t        if (msg.sender != address(nonfungiblePositionManager)) {\n\n915: \t\t        if (msg.sender != address(weth)) {\n```",
          "loc": [
            "[915](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L915)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L102)",
            "[362](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L362)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n161: \t\t        if (address(_getPool(tokenIn, tokenOut, fee)) != msg.sender) {\n```",
          "loc": [
            "[161](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L161)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to write `address` storage values",
      "description": "Using assembly `{ sstore(state.slot, addr)` instead of `state = addr` can save gas.",
      "gasSavings": 962,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n80: \t\t        factory = _nonfungiblePositionManager.factory();\n\n81: \t\t        referenceToken = _referenceToken;\n\n83: \t\t        chainlinkReferenceToken = _chainlinkReferenceToken;\n\n266: \t\t        emergencyAdmin = admin;\n```",
          "loc": [
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L266)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L80)",
            "[81](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L81)",
            "[83](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L83)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n178: \t\t        asset = _asset;\n\n181: \t\t        factory = IUniswapV3Factory(_nonfungiblePositionManager.factory());\n\n871: \t\t        emergencyAdmin = admin;\n```",
          "loc": [
            "[181](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L181)",
            "[871](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L871)",
            "[178](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L178)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n61: \t\t        withdrawer = _withdrawer;\n```",
          "loc": [
            "[61](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L61)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n37: \t\t        permit2 = IPermit2(_permit2);\n```",
          "loc": [
            "[37](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L37)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n42: \t\t        weth = IWETH9(_nonfungiblePositionManager.WETH9());\n\n43: \t\t        factory = _nonfungiblePositionManager.factory();\n\n45: \t\t        zeroxRouter = _zeroxRouter;\n\n46: \t\t        universalRouter = _universalRouter;\n```",
          "loc": [
            "[46](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L46)",
            "[45](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L45)",
            "[43](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L43)",
            "[42](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L42)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to emit an `event`",
      "description": "To efficiently emit events, it's possible to utilize assembly by making use of scratch space and the free memory pointer. This approach has the advantage of potentially avoiding the costs associated with memory expansion.\n\nHowever, it's important to note that in order to safely optimize this process, it is preferable to cache and restore the free memory pointer.\n\nA good example of such practice can be seen in [Solady's](https://github.com/Vectorized/solady/blob/main/src/tokens/ERC1155.sol#L167) codebase.",
      "gasSavings": 1862,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n100: \t\t        emit SetValues(baseRatePerYearX96, multiplierPerYearX96, jumpMultiplierPerYearX96, _kinkX96);\n```",
          "loc": [
            "[100](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L100)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n190: \t\t        emit SetMaxPoolPriceDifference(_maxPoolPriceDifference);\n\n242: \t\t        emit TokenConfigUpdated(token, config);\n\n243: \t\t        emit OracleModeUpdated(token, mode);\n\n260: \t\t        emit OracleModeUpdated(token, mode);\n\n267: \t\t        emit SetEmergencyAdmin(admin);\n```",
          "loc": [
            "[260](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L260)",
            "[267](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L267)",
            "[190](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L190)",
            "[242](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L242)",
            "[243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L243)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n449: \t\t            emit Add(tokenId, owner, 0);\n\n464: \t\t                emit Add(tokenId, owner, oldTokenId);\n\n489: \t\t        emit ApprovedTransform(tokenId, msg.sender, target, isActive);\n\n601: \t\t        emit Borrow(tokenId, owner, assets, shares);\n\n645: \t\t        emit WithdrawCollateral(params.tokenId, owner, params.recipient, params.liquidity, amount0, amount1);\n\n746: \t\t        emit Liquidate(\n747: \t\t            params.tokenId,\n748: \t\t            msg.sender,\n749: \t\t            owner,\n750: \t\t            state.fullValue,\n751: \t\t            state.liquidatorCost,\n752: \t\t            amount0,\n753: \t\t            amount1,\n754: \t\t            state.reserveCost,\n755: \t\t            state.missing\n756: \t\t        );\n\n782: \t\t        emit WithdrawReserves(amount, receiver);\n\n798: \t\t        emit SetTransformer(transformer, active);\n\n830: \t\t        emit SetLimits(\n831: \t\t            _minLoanSize, _globalLendLimit, _globalDebtLimit, _dailyLendIncreaseLimitMin, _dailyDebtIncreaseLimitMin\n832: \t\t        );\n\n839: \t\t        emit SetReserveFactor(_reserveFactorX32);\n\n849: \t\t        emit SetReserveProtectionFactor(_reserveProtectionFactorX32);\n\n865: \t\t        emit SetTokenConfig(token, collateralFactorX32, collateralValueLimitFactorX32);\n\n872: \t\t        emit SetEmergencyAdmin(admin);\n\n916: \t\t        emit Deposit(msg.sender, receiver, assets, shares);\n\n951: \t\t        emit Withdraw(msg.sender, receiver, owner, assets, shares);\n\n1013: \t\t        emit Repay(tokenId, msg.sender, owner, assets, shares);\n\n1084: \t\t        emit Remove(tokenId, owner);\n\n1139: \t\t            emit ExchangeRateUpdate(newDebtExchangeRateX96, newLendExchangeRateX96);\n\n1160: \t\t            emit ExchangeRateUpdate(newDebtExchangeRateX96, newLendExchangeRateX96);\n```",
          "loc": [
            "[645](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L645)",
            "[449](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L449)",
            "[464](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L464)",
            "[489](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L489)",
            "[601](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L601)",
            "[746-756](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L746-L756)",
            "[782](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L782)",
            "[798](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L798)",
            "[830-832](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L830-L832)",
            "[839](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L839)",
            "[849](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L849)",
            "[865](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L865)",
            "[872](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L872)",
            "[916](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L916)",
            "[951](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L951)",
            "[1013](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1013)",
            "[1084](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1084)",
            "[1139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1139)",
            "[1160](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1160)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n208: \t\t        emit PositionConfigured(params.tokenId, false, false, false, 0, 0, 0, 0, false, 0);\n\n211: \t\t        emit Executed(\n212: \t\t            params.tokenId, msg.sender, state.isSwap, state.amount0, state.amount1, state.token0, state.token1\n213: \t\t        );\n\n232: \t\t        emit PositionConfigured(\n233: \t\t            tokenId,\n234: \t\t            config.isActive,\n235: \t\t            config.token0Swap,\n236: \t\t            config.token1Swap,\n237: \t\t            config.token0TriggerTick,\n238: \t\t            config.token1TriggerTick,\n239: \t\t            config.token0SlippageX64,\n240: \t\t            config.token1SlippageX64,\n241: \t\t            config.onlyFees,\n242: \t\t            config.maxRewardX64\n243: \t\t        );\n```",
          "loc": [
            "[208](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L208)",
            "[211-213](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L211-L213)",
            "[232-243](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L232-L243)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n60: \t\t        emit WithdrawerChanged(_withdrawer);\n\n70: \t\t        emit OperatorChanged(_operator, _active);\n\n80: \t\t        emit VaultChanged(_vault, _active);\n\n94: \t\t        emit TWAPConfigChanged(_TWAPSeconds, _maxTWAPTickDifference);\n```",
          "loc": [
            "[70](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L70)",
            "[80](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L80)",
            "[94](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L94)",
            "[60](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L60)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n183: \t\t        emit AutoCompounded(\n184: \t\t            msg.sender,\n185: \t\t            params.tokenId,\n186: \t\t            state.compounded0,\n187: \t\t            state.compounded1,\n188: \t\t            state.amount0Fees,\n189: \t\t            state.amount1Fees,\n190: \t\t            state.token0,\n191: \t\t            state.token1\n192: \t\t        );\n\n246: \t\t        emit RewardUpdated(msg.sender, _totalRewardX64);\n\n251: \t\t        emit BalanceAdded(tokenId, token, amount);\n\n259: \t\t                emit BalanceAdded(tokenId, token, amount - currentBalance);\n\n261: \t\t                emit BalanceRemoved(tokenId, token, currentBalance - amount);\n\n271: \t\t        emit BalanceRemoved(tokenId, token, amount);\n\n273: \t\t        emit BalanceWithdrawn(tokenId, token, to, amount);\n```",
          "loc": [
            "[261](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L261)",
            "[271](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L271)",
            "[273](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L273)",
            "[183-192](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L183-L192)",
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L251)",
            "[246](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L246)",
            "[259](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L259)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n252: \t\t            emit PositionConfigured(\n253: \t\t                state.newTokenId,\n254: \t\t                config.lowerTickLimit,\n255: \t\t                config.upperTickLimit,\n256: \t\t                config.lowerTickDelta,\n257: \t\t                config.upperTickDelta,\n258: \t\t                config.token0SlippageX64,\n259: \t\t                config.token1SlippageX64,\n260: \t\t                config.onlyFees,\n261: \t\t                config.maxRewardX64\n262: \t\t            );\n\n266: \t\t            emit PositionConfigured(params.tokenId, 0, 0, 0, 0, 0, 0, false, 0);\n\n268: \t\t            emit RangeChanged(params.tokenId, state.newTokenId);\n\n286: \t\t        emit PositionConfigured(\n287: \t\t            tokenId,\n288: \t\t            config.lowerTickLimit,\n289: \t\t            config.upperTickLimit,\n290: \t\t            config.lowerTickDelta,\n291: \t\t            config.upperTickDelta,\n292: \t\t            config.token0SlippageX64,\n293: \t\t            config.token1SlippageX64,\n294: \t\t            config.onlyFees,\n295: \t\t            config.maxRewardX64\n296: \t\t        );\n```",
          "loc": [
            "[286-296](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L286-L296)",
            "[268](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L268)",
            "[266](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L266)",
            "[252-262](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L252-L262)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n218: \t\t            emit CompoundFees(tokenId, liquidity, amount0, amount1);\n\n303: \t\t            emit ChangeRange(tokenId, newTokenId);\n\n348: \t\t            emit WithdrawAndCollectAndSwap(tokenId, instructions.targetToken, targetAmount);\n\n729: \t\t        emit SwapAndMint(tokenId, liquidity, added0, added1);\n\n773: \t\t        emit SwapAndIncreaseLiquidity(params.tokenId, liquidity, added0, added1);\n```",
          "loc": [
            "[773](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L773)",
            "[218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L218)",
            "[303](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L303)",
            "[348](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L348)",
            "[729](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L729)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/Swapper.sol\n\n116: \t\t            emit Swap(address(params.tokenIn), address(params.tokenOut), amountInDelta, amountOutDelta);\n```",
          "loc": [
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/Swapper.sol#L116)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Return values of `approve` not checked",
      "description": "The rule is valid for some ERC20, but these instances contain either non-ERC20 or ERC20 that do not have this issue.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit not an ERC-20\n520: \t\t        nonfungiblePositionManager.approve(transformer, tokenId);\n\n// @audit not an ERC-20\n537: \t\t        nonfungiblePositionManager.approve(address(0), tokenId);\n```",
          "loc": [
            "[537](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L537)",
            "[520](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L520)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "`approve` can revert if the current approval is not zero",
      "description": "The rule is valid for some ERC20, but these instances contain either non-ERC20 or ERC20 that do not have this issue.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit not an ERC-20\n520: \t\t        nonfungiblePositionManager.approve(transformer, tokenId);\n\n// @audit not an ERC-20\n537: \t\t        nonfungiblePositionManager.approve(address(0), tokenId);\n```",
          "loc": [
            "[537](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L537)",
            "[520](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L520)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Some functions do not work correctly with fee-on-transfer tokens",
      "description": "The rule is valid for some ERC20, but these instances contain either non-ERC20 or ERC20 that do not have this issue.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit not an ERC-20\n401: \t\t        nonfungiblePositionManager.safeTransferFrom(msg.sender, address(this), tokenId, abi.encode(recipient));\n\n// @audit not an ERC-20\n424: \t\t        nonfungiblePositionManager.safeTransferFrom(owner, address(this), tokenId, abi.encode(recipient));\n\n// @audit not an ERC-20\n720: \t\t            permit2.permitTransferFrom(\n721: \t\t                permit,\n722: \t\t                ISignatureTransfer.SignatureTransferDetails(address(this), state.liquidatorCost),\n723: \t\t                msg.sender,\n724: \t\t                signature\n725: \t\t            );\n\n// @audit not an ERC-20\n722: \t\t                ISignatureTransfer.SignatureTransferDetails(address(this), state.liquidatorCost),\n\n// @audit not an ERC-20\n896: \t\t            permit2.permitTransferFrom(\n897: \t\t                permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n898: \t\t            );\n\n// @audit not an ERC-20\n897: \t\t                permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n\n// @audit not an ERC-20\n981: \t\t                permit2.permitTransferFrom(\n982: \t\t                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n983: \t\t                );\n\n// @audit not an ERC-20\n982: \t\t                    permit, ISignatureTransfer.SignatureTransferDetails(address(this), assets), msg.sender, signature\n\n// @audit not an ERC-20\n1083: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), owner, tokenId);\n```",
          "loc": [
            "[720-725](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L720-L725)",
            "[401](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L401)",
            "[424](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L424)",
            "[722](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L722)",
            "[896-898](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L896-L898)",
            "[897](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L897)",
            "[981-983](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L981-L983)",
            "[982](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L982)",
            "[1083](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1083)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit not an ERC-20\n232: \t\t            nonfungiblePositionManager.safeTransferFrom(address(this), state.owner, state.newTokenId);\n```",
          "loc": [
            "[232](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L232)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit not an ERC-20\n376: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), from, tokenId, instructions.returnData);\n\n// @audit not an ERC-20\n619: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed0);\n\n// @audit not an ERC-20\n623: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed1);\n\n// @audit not an ERC-20\n627: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.neededOther);\n\n// @audit not an ERC-20\n631: \t\t        permit2.permitTransferFrom(permit, transferDetails, msg.sender, signature);\n\n// @audit not an ERC-20\n727: \t\t        nonfungiblePositionManager.safeTransferFrom(address(this), params.recipientNFT, tokenId, params.returnData);\n```",
          "loc": [
            "[631](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L631)",
            "[619](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L619)",
            "[623](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L623)",
            "[727](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L727)",
            "[627](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L627)",
            "[376](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L376)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Enum values should be used in place of constant array indexes",
      "description": "The following instances are not numbers and thus they are invalid.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n240: \t\t        feedConfigs[token] = config;\n\n259: \t\t        feedConfigs[token].mode = mode;\n\n281: \t\t        TokenConfig memory feedConfig = feedConfigs[token];\n\n334: \t\t        TokenConfig memory feedConfig = feedConfigs[token];\n```",
          "loc": [
            "[281](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L281)",
            "[334](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L334)",
            "[240](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L240)",
            "[259](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L259)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n245: \t\t        debt = _convertToAssets(loans[tokenId].debtShares, newDebtExchangeRateX96, Math.Rounding.Up);\n\n259: \t\t        return tokenOwner[tokenId];\n\n265: \t\t        return ownedTokens[owner].length;\n\n272: \t\t        return ownedTokens[owner][index];\n\n272: \t\t        return ownedTokens[owner][index];\n\n446: \t\t            loans[tokenId] = Loan(0);\n\n455: \t\t                address owner = tokenOwner[oldTokenId];\n\n461: \t\t                loans[tokenId] = Loan(loans[oldTokenId].debtShares);\n\n461: \t\t                loans[tokenId] = Loan(loans[oldTokenId].debtShares);\n\n471: \t\t                    tokenId, debtExchangeRateX96, lendExchangeRateX96, 0, loans[tokenId].debtShares\n\n484: \t\t        if (tokenOwner[tokenId] != msg.sender) {\n\n487: \t\t        transformApprovals[msg.sender][tokenId][target] = isActive;\n\n487: \t\t        transformApprovals[msg.sender][tokenId][target] = isActive;\n\n487: \t\t        transformApprovals[msg.sender][tokenId][target] = isActive;\n\n502: \t\t        if (tokenId == 0 || !transformerAllowList[transformer]) {\n\n512: \t\t        address loanOwner = tokenOwner[tokenId];\n\n515: \t\t        if (loanOwner != msg.sender && !transformApprovals[loanOwner][tokenId][msg.sender]) {\n\n515: \t\t        if (loanOwner != msg.sender && !transformApprovals[loanOwner][tokenId][msg.sender]) {\n\n515: \t\t        if (loanOwner != msg.sender && !transformApprovals[loanOwner][tokenId][msg.sender]) {\n\n539: \t\t        uint256 debt = _convertToAssets(loans[tokenId].debtShares, newDebtExchangeRateX96, Math.Rounding.Up);\n\n552: \t\t            transformedTokenId > 0 && transformedTokenId == tokenId && transformerAllowList[msg.sender];\n\n558: \t\t        Loan storage loan = loans[tokenId];\n\n561: \t\t        if (!isTransformMode && tokenOwner[tokenId] != msg.sender && address(this) != msg.sender) {\n\n595: \t\t        address owner = tokenOwner[tokenId];\n\n619: \t\t        address owner = tokenOwner[params.tokenId];\n\n642: \t\t        uint256 debt = _convertToAssets(loans[params.tokenId].debtShares, newDebtExchangeRateX96, Math.Rounding.Up);\n\n695: \t\t        uint256 debtShares = loans[params.tokenId].debtShares;\n\n741: \t\t        address owner = tokenOwner[params.tokenId];\n\n797: \t\t        transformerAllowList[transformer] = active;\n\n863: \t\t        tokenConfigs[token].collateralFactorX32 = collateralFactorX32;\n\n864: \t\t        tokenConfigs[token].collateralValueLimitFactorX32 = collateralValueLimitFactorX32;\n\n957: \t\t        Loan storage loan = loans[tokenId];\n\n1001: \t\t        address owner = tokenOwner[tokenId];\n\n1081: \t\t        _updateAndCheckCollateral(tokenId, debtExchangeRateX96, lendExchangeRateX96, loans[tokenId].debtShares, 0);\n\n1082: \t\t        delete loans[tokenId];\n\n1145: \t\t        uint32 factor0X32 = tokenConfigs[token0].collateralFactorX32;\n\n1146: \t\t        uint32 factor1X32 = tokenConfigs[token1].collateralFactorX32;\n\n1217: \t\t                tokenConfigs[token0].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n\n1218: \t\t                tokenConfigs[token1].totalDebtShares -= SafeCast.toUint192(oldShares - newShares);\n\n1220: \t\t                tokenConfigs[token0].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n\n1221: \t\t                tokenConfigs[token1].totalDebtShares += SafeCast.toUint192(newShares - oldShares);\n\n1226: \t\t                uint256 collateralValueLimitFactorX32 = tokenConfigs[token0].collateralValueLimitFactorX32;\n\n1229: \t\t                        && _convertToAssets(tokenConfigs[token0].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n\n1234: \t\t                collateralValueLimitFactorX32 = tokenConfigs[token1].collateralValueLimitFactorX32;\n\n1237: \t\t                        && _convertToAssets(tokenConfigs[token1].totalDebtShares, debtExchangeRateX96, Math.Rounding.Up)\n\n1298: \t\t        ownedTokensIndex[tokenId] = ownedTokens[to].length;\n\n1298: \t\t        ownedTokensIndex[tokenId] = ownedTokens[to].length;\n\n1299: \t\t        ownedTokens[to].push(tokenId);\n\n1300: \t\t        tokenOwner[tokenId] = to;\n\n1304: \t\t        uint256 lastTokenIndex = ownedTokens[from].length - 1;\n\n1305: \t\t        uint256 tokenIndex = ownedTokensIndex[tokenId];\n\n1307: \t\t            uint256 lastTokenId = ownedTokens[from][lastTokenIndex];\n\n1307: \t\t            uint256 lastTokenId = ownedTokens[from][lastTokenIndex];\n\n1308: \t\t            ownedTokens[from][tokenIndex] = lastTokenId;\n\n1308: \t\t            ownedTokens[from][tokenIndex] = lastTokenId;\n\n1309: \t\t            ownedTokensIndex[lastTokenId] = tokenIndex;\n\n1311: \t\t        ownedTokens[from].pop();\n\n1313: \t\t        delete tokenOwner[tokenId]; // Remove the token from the token owner mapping\n```",
          "loc": [
            "[484](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L484)",
            "[487](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L487)",
            "[487](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L487)",
            "[487](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L487)",
            "[502](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L502)",
            "[512](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L512)",
            "[515](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L515)",
            "[515](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L515)",
            "[515](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L515)",
            "[539](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L539)",
            "[552](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L552)",
            "[558](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L558)",
            "[561](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L561)",
            "[595](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L595)",
            "[619](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L619)",
            "[642](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L642)",
            "[695](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L695)",
            "[741](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L741)",
            "[797](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L797)",
            "[863](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L863)",
            "[864](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L864)",
            "[957](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L957)",
            "[1001](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1001)",
            "[1081](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1081)",
            "[1082](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1082)",
            "[1145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1145)",
            "[1146](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1146)",
            "[1217](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1217)",
            "[1218](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1218)",
            "[1220](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1220)",
            "[1221](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1221)",
            "[1226](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1226)",
            "[1229](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1229)",
            "[1234](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1234)",
            "[1237](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1237)",
            "[1298](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1298)",
            "[1298](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1298)",
            "[1299](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1299)",
            "[1300](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1300)",
            "[1304](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1304)",
            "[1305](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1305)",
            "[1307](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1307)",
            "[1307](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1307)",
            "[1308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1308)",
            "[1309](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1309)",
            "[1311](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1311)",
            "[1313](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1313)",
            "[1308](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L1308)",
            "[245](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L245)",
            "[259](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L259)",
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L265)",
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L272)",
            "[272](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L272)",
            "[446](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L446)",
            "[455](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L455)",
            "[461](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L461)",
            "[461](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L461)",
            "[471](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L471)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n101: \t\t        if (!operators[msg.sender]) {\n\n106: \t\t        PositionConfig memory config = positionConfigs[params.tokenId];\n\n207: \t\t        delete positionConfigs[params.tokenId];\n\n230: \t\t        positionConfigs[tokenId] = config;\n```",
          "loc": [
            "[230](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L230)",
            "[207](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L207)",
            "[106](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L106)",
            "[101](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L101)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n71: \t\t        operators[_operator] = _active;\n\n81: \t\t        vaults[_vault] = _active;\n\n112: \t\t            uint256 balance = IERC20(tokens[i]).balanceOf(address(this));\n\n114: \t\t                _transferToken(to, IERC20(tokens[i]), balance, true);\n\n232: \t\t        if (vaults[msg.sender]) {\n\n237: \t\t            if (!vaults[vault]) {\n```",
          "loc": [
            "[232](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L232)",
            "[71](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L71)",
            "[237](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L237)",
            "[81](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L81)",
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L112)",
            "[114](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L114)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n88: \t\t        if (!operators[msg.sender] || !vaults[vault]) {\n\n88: \t\t        if (!operators[msg.sender] || !vaults[vault]) {\n\n102: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n\n102: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n\n119: \t\t        state.amount0 = state.amount0 + positionBalances[params.tokenId][state.token0];\n\n119: \t\t        state.amount0 = state.amount0 + positionBalances[params.tokenId][state.token0];\n\n120: \t\t        state.amount1 = state.amount1 + positionBalances[params.tokenId][state.token1];\n\n120: \t\t        state.amount1 = state.amount1 + positionBalances[params.tokenId][state.token1];\n\n202: \t\t        if (vaults[owner]) {\n\n211: \t\t        uint256 balance0 = positionBalances[tokenId][token0];\n\n211: \t\t        uint256 balance0 = positionBalances[tokenId][token0];\n\n215: \t\t        uint256 balance1 = positionBalances[tokenId][token1];\n\n215: \t\t        uint256 balance1 = positionBalances[tokenId][token1];\n\n234: \t\t            uint256 balance = positionBalances[0][tokens[i]];\n\n234: \t\t            uint256 balance = positionBalances[0][tokens[i]];\n\n235: \t\t            _withdrawBalanceInternal(0, tokens[i], to, balance, balance);\n\n250: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] + amount;\n\n250: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] + amount;\n\n250: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] + amount;\n\n250: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] + amount;\n\n255: \t\t        uint256 currentBalance = positionBalances[tokenId][token];\n\n255: \t\t        uint256 currentBalance = positionBalances[tokenId][token];\n\n257: \t\t            positionBalances[tokenId][token] = amount;\n\n257: \t\t            positionBalances[tokenId][token] = amount;\n\n270: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] - amount;\n\n270: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] - amount;\n\n270: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] - amount;\n\n270: \t\t        positionBalances[tokenId][token] = positionBalances[tokenId][token] - amount;\n```",
          "loc": [
            "[257](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L257)",
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L88)",
            "[88](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L88)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L102)",
            "[102](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L102)",
            "[119](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L119)",
            "[119](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L119)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L120)",
            "[120](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L120)",
            "[202](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L202)",
            "[211](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L211)",
            "[211](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L211)",
            "[215](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L215)",
            "[215](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L215)",
            "[234](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L234)",
            "[234](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L234)",
            "[235](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L235)",
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L250)",
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L250)",
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L250)",
            "[250](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L250)",
            "[255](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L255)",
            "[255](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L255)",
            "[257](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L257)",
            "[270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L270)",
            "[270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L270)",
            "[270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L270)",
            "[270](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L270)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n98: \t\t        if (!operators[msg.sender] || !vaults[vault]) {\n\n98: \t\t        if (!operators[msg.sender] || !vaults[vault]) {\n\n112: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n\n112: \t\t        if (!operators[msg.sender] && !vaults[msg.sender]) {\n\n116: \t\t        PositionConfig memory config = positionConfigs[params.tokenId];\n\n227: \t\t            if (vaults[state.owner]) {\n\n251: \t\t            positionConfigs[state.newTokenId] = config;\n\n265: \t\t            delete positionConfigs[params.tokenId];\n\n284: \t\t        positionConfigs[tokenId] = config;\n```",
          "loc": [
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L112)",
            "[227](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L227)",
            "[251](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L251)",
            "[265](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L265)",
            "[284](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L284)",
            "[116](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L116)",
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L98)",
            "[98](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L98)",
            "[112](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L112)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n619: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed0);\n\n623: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.needed1);\n\n627: \t\t            transferDetails[state.i++] = ISignatureTransfer.SignatureTransferDetails(address(this), state.neededOther);\n```",
          "loc": [
            "[627](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L627)",
            "[623](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L623)",
            "[619](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L619)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Time related variables should use time units instead of numbers",
      "description": "The following instances do not indicate time, or they already use time units, and thus they are invalid.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n25: \t\t    uint16 public constant MIN_PRICE_DIFFERENCE = 200; //2%\n```",
          "loc": [
            "[25](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L25)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n118: \t\t    uint32 public reserveFactorX32 = 0;\n\n124: \t\t    uint256 public debtSharesTotal = 0;\n\n127: \t\t    uint256 public lastExchangeRateUpdate = 0;\n\n131: \t\t    uint256 public globalDebtLimit = 0;\n\n132: \t\t    uint256 public globalLendLimit = 0;\n\n135: \t\t    uint256 public minLoanSize = 0;\n\n138: \t\t    uint256 public dailyLendIncreaseLimitMin = 0;\n\n139: \t\t    uint256 public dailyLendIncreaseLimitLeft = 0;\n\n140: \t\t    uint256 public dailyLendIncreaseLimitLastReset = 0;\n\n143: \t\t    uint256 public dailyDebtIncreaseLimitMin = 0;\n\n144: \t\t    uint256 public dailyDebtIncreaseLimitLeft = 0;\n\n145: \t\t    uint256 public dailyDebtIncreaseLimitLastReset = 0;\n\n161: \t\t    uint256 private transformedTokenId = 0; // transient storage (when available in dencun)\n```",
          "loc": [
            "[132](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L132)",
            "[135](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L135)",
            "[138](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L138)",
            "[139](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L139)",
            "[140](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L140)",
            "[143](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L143)",
            "[118](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L118)",
            "[145](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L145)",
            "[161](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L161)",
            "[144](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L144)",
            "[124](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L124)",
            "[127](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L127)",
            "[131](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L131)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n24: \t\t    uint32 public constant MAX_TWAP_TICK_DIFFERENCE = 200; // 2%\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L24)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Upgradeable contract is missing a constructor that disables initialization",
      "description": "The general rule is true, but the following instances are invalid.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit not upgreadable\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit not upgreadable\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit not upgreadable\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit not upgreadable\n10: \t\tcontract AutoExit is Automator {\n```",
          "loc": [
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit not upgreadable\n16: \t\tcontract AutoCompound is Automator, Multicall, ReentrancyGuard {\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit not upgreadable\n11: \t\tcontract AutoRange is Automator {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n// @audit not upgreadable\n12: \t\tcontract LeverageTransformer is Swapper {\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit not upgreadable\n15: \t\tcontract V3Utils is Swapper, IERC721Receiver {\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n// @audit not upgreadable\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Upgradeable contract is missing a gap storage variable",
      "description": "The general rule is true, but the following instances are invalid.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/InterestRateModel.sol\n\n// @audit not upgreadable\n11: \t\tcontract InterestRateModel is Ownable, IInterestRateModel, IErrors {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/InterestRateModel.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Oracle.sol\n\n// @audit not upgreadable\n24: \t\tcontract V3Oracle is IV3Oracle, Ownable, IErrors {\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Oracle.sol#L24)"
          ]
        },
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit not upgreadable\n30: \t\tcontract V3Vault is ERC20, Multicall, Ownable, IVault, IERC721Receiver, IErrors {\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L30)"
          ]
        },
        {
          "content": "```solidity\nFile: src/automators/AutoExit.sol\n\n// @audit not upgreadable\n10: \t\tcontract AutoExit is Automator {\n```",
          "loc": [
            "[10](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/AutoExit.sol#L10)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoCompound.sol\n\n// @audit not upgreadable\n16: \t\tcontract AutoCompound is Automator, Multicall, ReentrancyGuard {\n```",
          "loc": [
            "[16](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoCompound.sol#L16)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/AutoRange.sol\n\n// @audit not upgreadable\n11: \t\tcontract AutoRange is Automator {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/AutoRange.sol#L11)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/LeverageTransformer.sol\n\n// @audit not upgreadable\n12: \t\tcontract LeverageTransformer is Swapper {\n```",
          "loc": [
            "[12](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/LeverageTransformer.sol#L12)"
          ]
        },
        {
          "content": "```solidity\nFile: src/transformers/V3Utils.sol\n\n// @audit not upgreadable\n15: \t\tcontract V3Utils is Swapper, IERC721Receiver {\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/transformers/V3Utils.sol#L15)"
          ]
        },
        {
          "content": "```solidity\nFile: src/utils/FlashloanLiquidator.sol\n\n// @audit not upgreadable\n11: \t\tcontract FlashloanLiquidator is Swapper, IUniswapV3FlashCallback {\n```",
          "loc": [
            "[11](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/utils/FlashloanLiquidator.sol#L11)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "`selfbalance()` is cheaper than `address(this).balance`",
      "description": "This issue is not valid, it's actually worse in gas usage. [Proof](https://gist.github.com/DadeKuma/dbe25aafceb14291294449e31b0973c5)",
      "gasSavings": 97,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/automators/Automator.sol\n\n128: \t\t        uint256 balance = address(this).balance;\n```",
          "loc": [
            "[128](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/automators/Automator.sol#L128)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Some functions contain the same exact logic",
      "description": "The general rule is true, but the following instances are invalid.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: src/V3Vault.sol\n\n// @audit overrides an interface\n289: \t\t    function convertToShares(uint256 assets) external view override returns (uint256 shares) {\n\n// @audit overrides an interface\n295: \t\t    function convertToAssets(uint256 shares) external view override returns (uint256 assets) {\n```",
          "loc": [
            "[295](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L295)",
            "[289](https://github.com/code-423n4/2024-03-revert-lend/blob/ac520c5fedf4e1654c597a46efaf5a7c27295de1/src/V3Vault.sol#L289)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Modifier order does not comply with best practices",
      "description": "The general rule is true, but every in-scope function follows the recommended order:\n\n1. Visibility\n2. Mutability\n3. Virtual\n4. Override\n5. Custom modifiers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: All in-scope files\n```",
          "loc": []
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Visibility should be set explicitly rather than defaulting to internal",
      "description": "The general rule is true, but there aren't any variables that use the default visibility.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: All in-scope files\n```",
          "loc": []
        }
      ]
    }
  ],
  "createdAt": "2024-03-04T20:36:33.935Z",
  "updatedAt": "2024-03-04T20:36:34.893Z"
}